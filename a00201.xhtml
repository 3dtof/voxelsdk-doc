<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: TinyXML2::XMLNode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="a00386.xhtml">TinyXML2</a></li><li class="navelem"><a class="el" href="a00201.xhtml">XMLNode</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="a00678.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">TinyXML2::XMLNode Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="a00390.xhtml">Common and Utility classes</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="a00319_source.xhtml">TinyXML2.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for TinyXML2::XMLNode:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00679.svg" width="390" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for TinyXML2::XMLNode:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00680.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab5c744e506654df019e2794c5dd25699"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00198.xhtml">XMLDocument</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ab5c744e506654df019e2794c5dd25699">GetDocument</a> () const </td></tr>
<tr class="memdesc:ab5c744e506654df019e2794c5dd25699"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="a00198.xhtml">XMLDocument</a> that owns this <a class="el" href="a00201.xhtml">XMLNode</a>.  <a href="#ab5c744e506654df019e2794c5dd25699">More...</a><br/></td></tr>
<tr class="separator:ab5c744e506654df019e2794c5dd25699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17d9124bf3a8e7ac4dadf28ab45e1ae2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00198.xhtml">XMLDocument</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a17d9124bf3a8e7ac4dadf28ab45e1ae2">GetDocument</a> ()</td></tr>
<tr class="memdesc:a17d9124bf3a8e7ac4dadf28ab45e1ae2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="a00198.xhtml">XMLDocument</a> that owns this <a class="el" href="a00201.xhtml">XMLNode</a>.  <a href="#a17d9124bf3a8e7ac4dadf28ab45e1ae2">More...</a><br/></td></tr>
<tr class="separator:a17d9124bf3a8e7ac4dadf28ab45e1ae2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ef2c6efbc6c9c76767770160d2d123d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a2ef2c6efbc6c9c76767770160d2d123d">ToElement</a> ()</td></tr>
<tr class="memdesc:a2ef2c6efbc6c9c76767770160d2d123d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Safely cast to an Element, or null.  <a href="#a2ef2c6efbc6c9c76767770160d2d123d">More...</a><br/></td></tr>
<tr class="separator:a2ef2c6efbc6c9c76767770160d2d123d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abacd334fbb331a53cf18114b260e4bb3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00203.xhtml">XMLText</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a> ()</td></tr>
<tr class="memdesc:abacd334fbb331a53cf18114b260e4bb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Safely cast to Text, or null.  <a href="#abacd334fbb331a53cf18114b260e4bb3">More...</a><br/></td></tr>
<tr class="separator:abacd334fbb331a53cf18114b260e4bb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e2c7a0d50f222702e1f2226c175b0c2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00195.xhtml">XMLComment</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a1e2c7a0d50f222702e1f2226c175b0c2">ToComment</a> ()</td></tr>
<tr class="memdesc:a1e2c7a0d50f222702e1f2226c175b0c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Safely cast to a Comment, or null.  <a href="#a1e2c7a0d50f222702e1f2226c175b0c2">More...</a><br/></td></tr>
<tr class="separator:a1e2c7a0d50f222702e1f2226c175b0c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac83b131fe569970cc260c16f55445164"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00198.xhtml">XMLDocument</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ac83b131fe569970cc260c16f55445164">ToDocument</a> ()</td></tr>
<tr class="memdesc:ac83b131fe569970cc260c16f55445164"><td class="mdescLeft">&#160;</td><td class="mdescRight">Safely cast to a Document, or null.  <a href="#ac83b131fe569970cc260c16f55445164">More...</a><br/></td></tr>
<tr class="separator:ac83b131fe569970cc260c16f55445164"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07becef2e0637d530a6109c0c546bdcd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00197.xhtml">XMLDeclaration</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a07becef2e0637d530a6109c0c546bdcd">ToDeclaration</a> ()</td></tr>
<tr class="memdesc:a07becef2e0637d530a6109c0c546bdcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Safely cast to a Declaration, or null.  <a href="#a07becef2e0637d530a6109c0c546bdcd">More...</a><br/></td></tr>
<tr class="separator:a07becef2e0637d530a6109c0c546bdcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cb5b246b9cb53405776c36bf67f36c1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00204.xhtml">XMLUnknown</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a4cb5b246b9cb53405776c36bf67f36c1">ToUnknown</a> ()</td></tr>
<tr class="memdesc:a4cb5b246b9cb53405776c36bf67f36c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Safely cast to an Unknown, or null.  <a href="#a4cb5b246b9cb53405776c36bf67f36c1">More...</a><br/></td></tr>
<tr class="separator:a4cb5b246b9cb53405776c36bf67f36c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1e17d82f817006b2622c2e457a7567"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a2b1e17d82f817006b2622c2e457a7567">ToElement</a> () const </td></tr>
<tr class="separator:a2b1e17d82f817006b2622c2e457a7567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2545d0a6ff39c28ac23fd1c7f62f2d76"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00203.xhtml">XMLText</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a2545d0a6ff39c28ac23fd1c7f62f2d76">ToText</a> () const </td></tr>
<tr class="separator:a2545d0a6ff39c28ac23fd1c7f62f2d76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd29e21f757c5013bc80fb6d3affe698"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00195.xhtml">XMLComment</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#afd29e21f757c5013bc80fb6d3affe698">ToComment</a> () const </td></tr>
<tr class="separator:afd29e21f757c5013bc80fb6d3affe698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22de0f0d25a09c1edc9a75c94a294e07"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00198.xhtml">XMLDocument</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a22de0f0d25a09c1edc9a75c94a294e07">ToDocument</a> () const </td></tr>
<tr class="separator:a22de0f0d25a09c1edc9a75c94a294e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad018da10095d8bd70185fd8afd2a0c05"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00197.xhtml">XMLDeclaration</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ad018da10095d8bd70185fd8afd2a0c05">ToDeclaration</a> () const </td></tr>
<tr class="separator:ad018da10095d8bd70185fd8afd2a0c05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a198bfb631c75c53497efa92f8b66b4e0"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00204.xhtml">XMLUnknown</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a198bfb631c75c53497efa92f8b66b4e0">ToUnknown</a> () const </td></tr>
<tr class="separator:a198bfb631c75c53497efa92f8b66b4e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76031498d32776e907d2ba79b7029b18"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a> () const </td></tr>
<tr class="separator:a76031498d32776e907d2ba79b7029b18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a527b7ce2a80b4580275531020867b53a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">SetValue</a> (const char *val, <a class="el" href="a00398.xhtml">bool</a> staticMem=false)</td></tr>
<tr class="separator:a527b7ce2a80b4580275531020867b53a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f038bc06894ab6f6914bf5841a9f53f"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a5f038bc06894ab6f6914bf5841a9f53f">Parent</a> () const </td></tr>
<tr class="memdesc:a5f038bc06894ab6f6914bf5841a9f53f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the parent of this node on the DOM.  <a href="#a5f038bc06894ab6f6914bf5841a9f53f">More...</a><br/></td></tr>
<tr class="separator:a5f038bc06894ab6f6914bf5841a9f53f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46ecdf68ee83b8731934fe6dbbd50581"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a46ecdf68ee83b8731934fe6dbbd50581">Parent</a> ()</td></tr>
<tr class="separator:a46ecdf68ee83b8731934fe6dbbd50581"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42dc8cb00bd0045c5b69e8715ff9cbf3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a42dc8cb00bd0045c5b69e8715ff9cbf3">NoChildren</a> () const </td></tr>
<tr class="memdesc:a42dc8cb00bd0045c5b69e8715ff9cbf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if this node has no children.  <a href="#a42dc8cb00bd0045c5b69e8715ff9cbf3">More...</a><br/></td></tr>
<tr class="separator:a42dc8cb00bd0045c5b69e8715ff9cbf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81d2f010536dc2ca37f74d40b074ac8d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a> () const </td></tr>
<tr class="memdesc:a81d2f010536dc2ca37f74d40b074ac8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first child node, or null if none exists.  <a href="#a81d2f010536dc2ca37f74d40b074ac8d">More...</a><br/></td></tr>
<tr class="separator:a81d2f010536dc2ca37f74d40b074ac8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab84e4ffc23aae6ceea02d51766686418"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ab84e4ffc23aae6ceea02d51766686418">FirstChild</a> ()</td></tr>
<tr class="separator:ab84e4ffc23aae6ceea02d51766686418"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86cc8875788543eee38da2b8f35efabc"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a86cc8875788543eee38da2b8f35efabc">FirstChildElement</a> (const char *value=0) const </td></tr>
<tr class="separator:a86cc8875788543eee38da2b8f35efabc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadb2593e3a6f99a723f72d81ce47e49d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#aadb2593e3a6f99a723f72d81ce47e49d">FirstChildElement</a> (const char *value=0)</td></tr>
<tr class="separator:aadb2593e3a6f99a723f72d81ce47e49d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33818ba11ef392a22f4cf739da6dfb24"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a33818ba11ef392a22f4cf739da6dfb24">LastChild</a> () const </td></tr>
<tr class="memdesc:a33818ba11ef392a22f4cf739da6dfb24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the last child node, or null if none exists.  <a href="#a33818ba11ef392a22f4cf739da6dfb24">More...</a><br/></td></tr>
<tr class="separator:a33818ba11ef392a22f4cf739da6dfb24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09eb6290a6b17b65c6688a10073e99ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a09eb6290a6b17b65c6688a10073e99ef">LastChild</a> ()</td></tr>
<tr class="separator:a09eb6290a6b17b65c6688a10073e99ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b1ca00b71ef6447eb27f63d81ce548d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a8b1ca00b71ef6447eb27f63d81ce548d">LastChildElement</a> (const char *value=0) const </td></tr>
<tr class="separator:a8b1ca00b71ef6447eb27f63d81ce548d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a950bbc012ebcc678e6f302c8b9c6f0f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a950bbc012ebcc678e6f302c8b9c6f0f1">LastChildElement</a> (const char *value=0)</td></tr>
<tr class="separator:a950bbc012ebcc678e6f302c8b9c6f0f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a480185d95dbe41f5692b7fbd89910a64"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a480185d95dbe41f5692b7fbd89910a64">PreviousSibling</a> () const </td></tr>
<tr class="memdesc:a480185d95dbe41f5692b7fbd89910a64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the previous (left) sibling node of this node.  <a href="#a480185d95dbe41f5692b7fbd89910a64">More...</a><br/></td></tr>
<tr class="separator:a480185d95dbe41f5692b7fbd89910a64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90867eeab7e09b2a24f253b84cc90f34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a90867eeab7e09b2a24f253b84cc90f34">PreviousSibling</a> ()</td></tr>
<tr class="separator:a90867eeab7e09b2a24f253b84cc90f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd44b243b52240d10cb875ee2a36eb01"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#acd44b243b52240d10cb875ee2a36eb01">PreviousSiblingElement</a> (const char *value=0) const </td></tr>
<tr class="memdesc:acd44b243b52240d10cb875ee2a36eb01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the previous (left) sibling element of this node, with an optionally supplied name.  <a href="#acd44b243b52240d10cb875ee2a36eb01">More...</a><br/></td></tr>
<tr class="separator:acd44b243b52240d10cb875ee2a36eb01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a720feb61720c7220ef06cc8c3093458d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a720feb61720c7220ef06cc8c3093458d">PreviousSiblingElement</a> (const char *value=0)</td></tr>
<tr class="separator:a720feb61720c7220ef06cc8c3093458d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee7c15f0bf3bdc684fda87d584356c1b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#aee7c15f0bf3bdc684fda87d584356c1b">NextSibling</a> () const </td></tr>
<tr class="memdesc:aee7c15f0bf3bdc684fda87d584356c1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next (right) sibling node of this node.  <a href="#aee7c15f0bf3bdc684fda87d584356c1b">More...</a><br/></td></tr>
<tr class="separator:aee7c15f0bf3bdc684fda87d584356c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13cd6db854d4b983e9b7525e575da2be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a13cd6db854d4b983e9b7525e575da2be">NextSibling</a> ()</td></tr>
<tr class="separator:a13cd6db854d4b983e9b7525e575da2be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4c176052f5724527a78f403b4e507ee"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#aa4c176052f5724527a78f403b4e507ee">NextSiblingElement</a> (const char *value=0) const </td></tr>
<tr class="memdesc:aa4c176052f5724527a78f403b4e507ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next (right) sibling element of this node, with an optionally supplied name.  <a href="#aa4c176052f5724527a78f403b4e507ee">More...</a><br/></td></tr>
<tr class="separator:aa4c176052f5724527a78f403b4e507ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a042a801a2ef0061f1d4bd253c89f500e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00199.xhtml">XMLElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a042a801a2ef0061f1d4bd253c89f500e">NextSiblingElement</a> (const char *value=0)</td></tr>
<tr class="separator:a042a801a2ef0061f1d4bd253c89f500e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ae11185b5fbb9620d71114c70b31368"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">InsertEndChild</a> (<a class="el" href="a00201.xhtml">XMLNode</a> *addThis)</td></tr>
<tr class="separator:a8ae11185b5fbb9620d71114c70b31368"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4425ebd89f0324f16cffbb67c80fd76e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a4425ebd89f0324f16cffbb67c80fd76e">LinkEndChild</a> (<a class="el" href="a00201.xhtml">XMLNode</a> *addThis)</td></tr>
<tr class="separator:a4425ebd89f0324f16cffbb67c80fd76e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7eb7051f843bf705bbcf6551c13fd97"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ae7eb7051f843bf705bbcf6551c13fd97">InsertFirstChild</a> (<a class="el" href="a00201.xhtml">XMLNode</a> *addThis)</td></tr>
<tr class="separator:ae7eb7051f843bf705bbcf6551c13fd97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae27e0da5712dd159e879e2baf07f48db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ae27e0da5712dd159e879e2baf07f48db">InsertAfterChild</a> (<a class="el" href="a00201.xhtml">XMLNode</a> *afterThis, <a class="el" href="a00201.xhtml">XMLNode</a> *addThis)</td></tr>
<tr class="separator:ae27e0da5712dd159e879e2baf07f48db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71764a70bec2eb37ed1ee30c97b2b51"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">DeleteChildren</a> ()</td></tr>
<tr class="separator:ac71764a70bec2eb37ed1ee30c97b2b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28b94200b666def2677964cb83df1569"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a28b94200b666def2677964cb83df1569">DeleteChild</a> (<a class="el" href="a00201.xhtml">XMLNode</a> *node)</td></tr>
<tr class="separator:a28b94200b666def2677964cb83df1569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a189f59824ba25896d765bd89f02b6acf"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a189f59824ba25896d765bd89f02b6acf">ShallowClone</a> (<a class="el" href="a00198.xhtml">XMLDocument</a> *document) const =0</td></tr>
<tr class="separator:a189f59824ba25896d765bd89f02b6acf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1756a4d0fe6e357ab52c66ae41ed3414"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a1756a4d0fe6e357ab52c66ae41ed3414">ShallowEqual</a> (const <a class="el" href="a00201.xhtml">XMLNode</a> *compare) const =0</td></tr>
<tr class="separator:a1756a4d0fe6e357ab52c66ae41ed3414"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a994868fef01833f7e562597601003fff"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a994868fef01833f7e562597601003fff">Accept</a> (<a class="el" href="a00206.xhtml">XMLVisitor</a> *visitor) const =0</td></tr>
<tr class="separator:a994868fef01833f7e562597601003fff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a666a962d4e7ce40fad31a0d273659176"><td class="memItemLeft" align="right" valign="top">virtual char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">ParseDeep</a> (char *, <a class="el" href="a00133.xhtml">StrPair</a> *)</td></tr>
<tr class="separator:a666a962d4e7ce40fad31a0d273659176"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ac70ccc62dd015847bf911e22a0fca172"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a> (<a class="el" href="a00198.xhtml">XMLDocument</a> *)</td></tr>
<tr class="separator:ac70ccc62dd015847bf911e22a0fca172"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ce8791c0920489f9df667b0a0264935"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a5ce8791c0920489f9df667b0a0264935">~XMLNode</a> ()</td></tr>
<tr class="separator:a5ce8791c0920489f9df667b0a0264935"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f40257f213d3f294ffef7b4c8123fee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a2f40257f213d3f294ffef7b4c8123fee">XMLNode</a> (const <a class="el" href="a00201.xhtml">XMLNode</a> &amp;)</td></tr>
<tr class="separator:a2f40257f213d3f294ffef7b4c8123fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c9cd8acc776f0819d146e83c01156b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a0c9cd8acc776f0819d146e83c01156b4">operator=</a> (const <a class="el" href="a00201.xhtml">XMLNode</a> &amp;)</td></tr>
<tr class="separator:a0c9cd8acc776f0819d146e83c01156b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ab5452cb997f7f989bdfe590b28c0abe6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00198.xhtml">XMLDocument</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a></td></tr>
<tr class="separator:ab5452cb997f7f989bdfe590b28c0abe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1959951484643d4d29dd52eabc30e314"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a></td></tr>
<tr class="separator:a1959951484643d4d29dd52eabc30e314"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a5ab8dd7f54c25a2397eebb305eb583"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00133.xhtml">StrPair</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a></td></tr>
<tr class="separator:a4a5ab8dd7f54c25a2397eebb305eb583"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a104c1f0a0dc912d977631b4da9b56aa5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a></td></tr>
<tr class="separator:a104c1f0a0dc912d977631b4da9b56aa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a122044df0acdbc45e1a8d0d691a188e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a></td></tr>
<tr class="separator:a122044df0acdbc45e1a8d0d691a188e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fcd0b8fdee9cacd6b45e7802244c909"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a></td></tr>
<tr class="separator:a6fcd0b8fdee9cacd6b45e7802244c909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa77fe36a3f0401eb576b2ee3152c58e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a></td></tr>
<tr class="separator:afa77fe36a3f0401eb576b2ee3152c58e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a0fe718d6c3d1252c48992c1adc1ce93b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a> (<a class="el" href="a00201.xhtml">XMLNode</a> *child)</td></tr>
<tr class="separator:a0fe718d6c3d1252c48992c1adc1ce93b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:ae64fa52593db503652ee0258bf69d376"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a> (<a class="el" href="a00201.xhtml">XMLNode</a> *node)</td></tr>
<tr class="separator:ae64fa52593db503652ee0258bf69d376"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a3b5858a879823b5f5ba1d80f3addace8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00098.xhtml">MemPool</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a></td></tr>
<tr class="separator:a3b5858a879823b5f5ba1d80f3addace8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a4eee3bda60c60a30e4e8cd4ea91c4c6e"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#a4eee3bda60c60a30e4e8cd4ea91c4c6e">XMLDocument</a></td></tr>
<tr class="separator:a4eee3bda60c60a30e4e8cd4ea91c4c6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2fba9b6e452829dd892f7392c24e0eb"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a></td></tr>
<tr class="separator:ac2fba9b6e452829dd892f7392c24e0eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="a00201.xhtml">XMLNode</a> is a base class for every object that is in the XML Document Object Model (DOM), except XMLAttributes. Nodes have siblings, a parent, and children which can be navigated. A node is always in a <a class="el" href="a00198.xhtml">XMLDocument</a>. The type of a <a class="el" href="a00201.xhtml">XMLNode</a> can be queried, and it can be cast to its more defined type.</p>
<p>A <a class="el" href="a00198.xhtml">XMLDocument</a> allocates memory for all its Nodes. When the <a class="el" href="a00198.xhtml">XMLDocument</a> gets deleted, all its Nodes will also be deleted.</p>
<pre class="fragment">A Document can contain: Element (container or leaf)
            Comment (leaf)
            Unknown (leaf)
            Declaration( leaf )

An Element can contain: Element (container or leaf)
            Text  (leaf)
            Attributes (not on tree)
            Comment (leaf)
            Unknown (leaf)</pre> 
<p>Definition at line <a class="el" href="a00319_source.xhtml#l00646">646</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ac70ccc62dd015847bf911e22a0fca172"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">TinyXML2::XMLNode::XMLNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00198.xhtml">XMLDocument</a> *&#160;</td>
          <td class="paramname"><em>doc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00594">594</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                                   :</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>( doc ),</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>( 0 ),</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>( 0 ), <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>( 0 ),</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>( 0 ), <a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>( 0 ),</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a>( 0 )</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;{</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
<div class="ttc" id="a00201_xhtml_a3b5858a879823b5f5ba1d80f3addace8"><div class="ttname"><a href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">TinyXML2::XMLNode::_memPool</a></div><div class="ttdeci">MemPool * _memPool</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00906">TinyXML2.h:906</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5ce8791c0920489f9df667b0a0264935"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">TinyXML2::XMLNode::~XMLNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00604">604</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00896">_parent</a>, <a class="el" href="a00318_source.xhtml#l00628">DeleteChildren()</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00904">DeleteNode()</a>.</p>
<div class="fragment"><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;{</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <a class="code" href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">DeleteChildren</a>();</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> ) {</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>-&gt;<a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    }</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_ac71764a70bec2eb37ed1ee30c97b2b51"><div class="ttname"><a href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">TinyXML2::XMLNode::DeleteChildren</a></div><div class="ttdeci">void DeleteChildren()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00628">TinyXML2.cpp:628</a></div></div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
<div class="ttc" id="a00201_xhtml_a0fe718d6c3d1252c48992c1adc1ce93b"><div class="ttname"><a href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">TinyXML2::XMLNode::Unlink</a></div><div class="ttdeci">void Unlink(XMLNode *child)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00641">TinyXML2.cpp:641</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a5ce8791c0920489f9df667b0a0264935_cgraph.svg" width="100%" height="397"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a5ce8791c0920489f9df667b0a0264935_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a2f40257f213d3f294ffef7b4c8123fee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">TinyXML2::XMLNode::XMLNode </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00201.xhtml">XMLNode</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a994868fef01833f7e562597601003fff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> TinyXML2::XMLNode::Accept </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00206.xhtml">XMLVisitor</a> *&#160;</td>
          <td class="paramname"><em>visitor</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Accept a hierarchical visit of the nodes in the TinyXML-2 DOM. Every node in the XML tree will be conditionally visited and the host will be called back via the <a class="el" href="a00206.xhtml">XMLVisitor</a> interface.</p>
<p>This is essentially a SAX interface for TinyXML-2. (Note however it doesn't re-parse the XML for the callbacks, so the performance of TinyXML-2 is unchanged by using this interface versus any other.)</p>
<p>The interface has been based on ideas from:</p>
<ul>
<li><a href="http://www.saxproject.org/">http://www.saxproject.org/</a></li>
<li><a href="http://c2.com/cgi/wiki?HierarchicalVisitorPattern">http://c2.com/cgi/wiki?HierarchicalVisitorPattern</a></li>
</ul>
<p>Which are both good references for "visiting".</p>
<p>An example of using <a class="el" href="a00201.xhtml#a994868fef01833f7e562597601003fff">Accept()</a>: </p>
<pre class="fragment">XMLPrinter printer;
tinyxmlDoc.Accept( &amp;printer );
const char* xmlcstr = printer.CStr();
</pre> 
<p>Implemented in <a class="el" href="a00198.xhtml#ad02be21c4459af97b6294eb4d1f82cd6">TinyXML2::XMLDocument</a>, <a class="el" href="a00199.xhtml#a102accd4d1deceb158c8c3fb4c4b2fe6">TinyXML2::XMLElement</a>, <a class="el" href="a00204.xhtml#a590ad9fe166b2ad702f8b39bb880847c">TinyXML2::XMLUnknown</a>, <a class="el" href="a00197.xhtml#a0fcb8c5402eef454e6c35b4dcceeb938">TinyXML2::XMLDeclaration</a>, <a class="el" href="a00195.xhtml#a13d113649df2846da1e2f7c59c417941">TinyXML2::XMLComment</a>, and <a class="el" href="a00203.xhtml#a0c6715890d2ac6b5972416a02896e1fb">TinyXML2::XMLText</a>.</p>

</div>
</div>
<a class="anchor" id="a28b94200b666def2677964cb83df1569"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TinyXML2::XMLNode::DeleteChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Delete a child of this node. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00661">661</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00895">_document</a>, <a class="el" href="a00319_source.xhtml#l00896">_parent</a>, <a class="el" href="a00318_source.xhtml#l00904">DeleteNode()</a>, and <a class="el" href="a00319_source.xhtml#l00100">TIXMLASSERT</a>.</p>

<p>Referenced by <a class="el" href="a00319_source.xhtml#l01685">TinyXML2::XMLDocument::DeleteNode()</a>.</p>
<div class="fragment"><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;{</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( node-&gt;_document == <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> );</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( node-&gt;_parent == <span class="keyword">this</span> );</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_ae64fa52593db503652ee0258bf69d376"><div class="ttname"><a href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">TinyXML2::XMLNode::DeleteNode</a></div><div class="ttdeci">static void DeleteNode(XMLNode *node)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00904">TinyXML2.cpp:904</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00319_xhtml_a029877acb3c6fd71698561044953bd14"><div class="ttname"><a href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a></div><div class="ttdeci">#define TIXMLASSERT(x)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00100">TinyXML2.h:100</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a28b94200b666def2677964cb83df1569_cgraph.svg" width="100%" height="390"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a28b94200b666def2677964cb83df1569_icgraph.svg" width="390" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ac71764a70bec2eb37ed1ee30c97b2b51"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TinyXML2::XMLNode::DeleteChildren </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Delete all the children of this node. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00628">628</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00895">_document</a>, <a class="el" href="a00319_source.xhtml#l00899">_firstChild</a>, <a class="el" href="a00319_source.xhtml#l00900">_lastChild</a>, <a class="el" href="a00318_source.xhtml#l00904">DeleteNode()</a>, <a class="el" href="a00319_source.xhtml#l00100">TIXMLASSERT</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01667">TinyXML2::XMLDocument::Clear()</a>, <a class="el" href="a00318_source.xhtml#l01840">TinyXML2::XMLDocument::Parse()</a>, and <a class="el" href="a00318_source.xhtml#l00604">~XMLNode()</a>.</p>
<div class="fragment"><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;{</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keywordflow">while</span>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> ) {</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> == <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> );</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>* node = <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a>( node );</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    }</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = 0;</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_ae64fa52593db503652ee0258bf69d376"><div class="ttname"><a href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">TinyXML2::XMLNode::DeleteNode</a></div><div class="ttdeci">static void DeleteNode(XMLNode *node)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00904">TinyXML2.cpp:904</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00201_xhtml_a0fe718d6c3d1252c48992c1adc1ce93b"><div class="ttname"><a href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">TinyXML2::XMLNode::Unlink</a></div><div class="ttdeci">void Unlink(XMLNode *child)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00641">TinyXML2.cpp:641</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
<div class="ttc" id="a00319_xhtml_a029877acb3c6fd71698561044953bd14"><div class="ttname"><a href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a></div><div class="ttdeci">#define TIXMLASSERT(x)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00100">TinyXML2.h:100</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_ac71764a70bec2eb37ed1ee30c97b2b51_cgraph.svg" width="100%" height="391"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_ac71764a70bec2eb37ed1ee30c97b2b51_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae64fa52593db503652ee0258bf69d376"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void TinyXML2::XMLNode::DeleteNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00904">904</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00906">_memPool</a>, <a class="el" href="a00098.xhtml#af252371f4bf36310d2db949279b5ccf4">TinyXML2::MemPool::Free()</a>, and <a class="el" href="a00318_source.xhtml#l00604">~XMLNode()</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00661">DeleteChild()</a>, <a class="el" href="a00318_source.xhtml#l00628">DeleteChildren()</a>, and <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>.</p>
<div class="fragment"><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;{</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    <span class="keywordflow">if</span> ( node == 0 ) {</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    }</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    MemPool* pool = node-&gt;_memPool;</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    node-&gt;~XMLNode();</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    pool-&gt;Free( node );</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;}</div>
</div><!-- fragment -->
<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_ae64fa52593db503652ee0258bf69d376_cgraph.svg" width="100%" height="415"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_ae64fa52593db503652ee0258bf69d376_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a81d2f010536dc2ca37f74d40b074ac8d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::FirstChild </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the first child node, or null if none exists. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00736">736</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01606">TinyXML2::XMLElement::Accept()</a>, <a class="el" href="a00318_source.xhtml#l00579">TinyXML2::XMLDocument::Accept()</a>, <a class="el" href="a00318_source.xhtml#l01293">TinyXML2::XMLElement::GetText()</a>, <a class="el" href="a00318_source.xhtml#l01379">TinyXML2::XMLElement::QueryBoolText()</a>, <a class="el" href="a00318_source.xhtml#l01392">TinyXML2::XMLElement::QueryDoubleText()</a>, <a class="el" href="a00318_source.xhtml#l01405">TinyXML2::XMLElement::QueryFloatText()</a>, <a class="el" href="a00318_source.xhtml#l01353">TinyXML2::XMLElement::QueryIntText()</a>, <a class="el" href="a00318_source.xhtml#l01366">TinyXML2::XMLElement::QueryUnsignedText()</a>, and <a class="el" href="a00318_source.xhtml#l01302">TinyXML2::XMLElement::SetText()</a>.</p>
<div class="fragment"><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                                          {</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a81d2f010536dc2ca37f74d40b074ac8d_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab84e4ffc23aae6ceea02d51766686418"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::FirstChild </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00740">740</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                                  {</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a86cc8875788543eee38da2b8f35efabc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00199.xhtml">XMLElement</a> * TinyXML2::XMLNode::FirstChildElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the first child element, or optionally the first child element with the specified name. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00770">770</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00899">_firstChild</a>, <a class="el" href="a00319_source.xhtml#l00903">_next</a>, <a class="el" href="a00319_source.xhtml#l01170">TinyXML2::XMLElement::Name()</a>, <a class="el" href="a00319_source.xhtml#l00579">TinyXML2::XMLUtil::StringEqual()</a>, and <a class="el" href="a00319_source.xhtml#l01178">TinyXML2::XMLElement::ToElement()</a>.</p>

<p>Referenced by <a class="el" href="a00280_source.xhtml#l00059">Voxel::ParameterDMLParser::_goTo()</a>, <a class="el" href="a00280_source.xhtml#l00027">Voxel::ParameterDMLParser::_prepare()</a>, and <a class="el" href="a00280_source.xhtml#l00290">Voxel::ParameterDMLParser::getParameters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;{</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>; node; node=node-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> ) {</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        <a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>* element = node-&gt;ToElement();</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <span class="keywordflow">if</span> ( element ) {</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            <span class="keywordflow">if</span> ( !value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( element-&gt;Name(), value ) ) {</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            }</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        }</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    }</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;}</div>
<div class="ttc" id="a00205_xhtml_af0f1d719f7e1067ec06eeb2d687520a5"><div class="ttname"><a href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">TinyXML2::XMLUtil::StringEqual</a></div><div class="ttdeci">static bool StringEqual(const char *p, const char *q, int nChar=INT_MAX)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00579">TinyXML2.h:579</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a86cc8875788543eee38da2b8f35efabc_cgraph.svg" width="379" height="182"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a86cc8875788543eee38da2b8f35efabc_icgraph.svg" width="100%" height="551"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aadb2593e3a6f99a723f72d81ce47e49d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00199.xhtml">XMLElement</a>* TinyXML2::XMLNode::FirstChildElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00749">749</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                                                          {</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>*<span class="keyword">&gt;</span>(<span class="keyword">const_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="a00201.xhtml#a86cc8875788543eee38da2b8f35efabc">FirstChildElement</a>( value ));</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a86cc8875788543eee38da2b8f35efabc"><div class="ttname"><a href="a00201.xhtml#a86cc8875788543eee38da2b8f35efabc">TinyXML2::XMLNode::FirstChildElement</a></div><div class="ttdeci">const XMLElement * FirstChildElement(const char *value=0) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00770">TinyXML2.cpp:770</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab5c744e506654df019e2794c5dd25699"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00198.xhtml">XMLDocument</a>* TinyXML2::XMLNode::GetDocument </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the <a class="el" href="a00198.xhtml">XMLDocument</a> that owns this <a class="el" href="a00201.xhtml">XMLNode</a>. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00653">653</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01302">TinyXML2::XMLElement::SetText()</a>.</p>
<div class="fragment"><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                                            {</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_ab5c744e506654df019e2794c5dd25699_icgraph.svg" width="592" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a17d9124bf3a8e7ac4dadf28ab45e1ae2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00198.xhtml">XMLDocument</a>* TinyXML2::XMLNode::GetDocument </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the <a class="el" href="a00198.xhtml">XMLDocument</a> that owns this <a class="el" href="a00201.xhtml">XMLNode</a>. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00657">657</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                                      {</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae27e0da5712dd159e879e2baf07f48db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a> * TinyXML2::XMLNode::InsertAfterChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>afterThis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>addThis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a node after the specified child node. If the child node is already part of the document, it is moved from its old location to the new location. Returns the addThis argument or 0 if the afterThis node is not a child of this node, or if the node does not belong to the same document. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00736">736</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00895">_document</a>, <a class="el" href="a00319_source.xhtml#l00906">_memPool</a>, <a class="el" href="a00319_source.xhtml#l00903">_next</a>, <a class="el" href="a00319_source.xhtml#l00896">_parent</a>, <a class="el" href="a00319_source.xhtml#l00902">_prev</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">TinyXML2::MemPool::SetTracked()</a>, <a class="el" href="a00319_source.xhtml#l00100">TIXMLASSERT</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>
<div class="fragment"><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;{</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( addThis );</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keywordflow">if</span> ( addThis-&gt;_document != <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> ) {</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    }</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( afterThis );</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="keywordflow">if</span> ( afterThis-&gt;_parent != <span class="keyword">this</span> ) {</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    }</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keywordflow">if</span> ( afterThis-&gt;_next == 0 ) {</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        <span class="comment">// The last node or the only node.</span></div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">InsertEndChild</a>( addThis );</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    }</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;  <span class="keywordflow">if</span> (addThis-&gt;_parent)</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    addThis-&gt;_parent-&gt;Unlink( addThis );</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;     addThis-&gt;_memPool-&gt;SetTracked();</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    addThis-&gt;_prev = afterThis;</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    addThis-&gt;_next = afterThis-&gt;_next;</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    afterThis-&gt;_next-&gt;_prev = addThis;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    afterThis-&gt;_next = addThis;</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    addThis-&gt;_parent = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="keywordflow">return</span> addThis;</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_a8ae11185b5fbb9620d71114c70b31368"><div class="ttname"><a href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">TinyXML2::XMLNode::InsertEndChild</a></div><div class="ttdeci">XMLNode * InsertEndChild(XMLNode *addThis)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00669">TinyXML2.cpp:669</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00319_xhtml_a029877acb3c6fd71698561044953bd14"><div class="ttname"><a href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a></div><div class="ttdeci">#define TIXMLASSERT(x)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00100">TinyXML2.h:100</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_ae27e0da5712dd159e879e2baf07f48db_cgraph.svg" width="571" height="130"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a8ae11185b5fbb9620d71114c70b31368"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a> * TinyXML2::XMLNode::InsertEndChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>addThis</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a child node as the last (right) child. If the child node is already part of the document, it is moved from its old location to the new location. Returns the addThis argument or 0 if the node does not belong to the same document. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00669">669</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00895">_document</a>, <a class="el" href="a00319_source.xhtml#l00899">_firstChild</a>, <a class="el" href="a00319_source.xhtml#l00900">_lastChild</a>, <a class="el" href="a00319_source.xhtml#l00906">_memPool</a>, <a class="el" href="a00319_source.xhtml#l00903">_next</a>, <a class="el" href="a00319_source.xhtml#l00896">_parent</a>, <a class="el" href="a00319_source.xhtml#l00902">_prev</a>, <a class="el" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">TinyXML2::MemPool::SetTracked()</a>, <a class="el" href="a00319_source.xhtml#l00100">TIXMLASSERT</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00736">InsertAfterChild()</a>, and <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>.</p>
<div class="fragment"><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;{</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <span class="keywordflow">if</span> ( addThis-&gt;_document != <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> ) {</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    }</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;  <span class="keywordflow">if</span> (addThis-&gt;_parent)</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    addThis-&gt;_parent-&gt;Unlink( addThis );</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;     addThis-&gt;_memPool-&gt;SetTracked();</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> ) {</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> );</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> == 0 );</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = addThis;</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = addThis;</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = 0;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    }</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> == 0 );</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = addThis;</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = 0;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = 0;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    }</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordflow">return</span> addThis;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
<div class="ttc" id="a00319_xhtml_a029877acb3c6fd71698561044953bd14"><div class="ttname"><a href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a></div><div class="ttdeci">#define TIXMLASSERT(x)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00100">TinyXML2.h:100</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a8ae11185b5fbb9620d71114c70b31368_cgraph.svg" width="368" height="116"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a8ae11185b5fbb9620d71114c70b31368_icgraph.svg" width="592" height="206"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae7eb7051f843bf705bbcf6551c13fd97"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a> * TinyXML2::XMLNode::InsertFirstChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>addThis</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a child node as the first (left) child. If the child node is already part of the document, it is moved from its old location to the new location. Returns the addThis argument or 0 if the node does not belong to the same document. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00702">702</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00895">_document</a>, <a class="el" href="a00319_source.xhtml#l00899">_firstChild</a>, <a class="el" href="a00319_source.xhtml#l00900">_lastChild</a>, <a class="el" href="a00319_source.xhtml#l00906">_memPool</a>, <a class="el" href="a00319_source.xhtml#l00903">_next</a>, <a class="el" href="a00319_source.xhtml#l00896">_parent</a>, <a class="el" href="a00319_source.xhtml#l00902">_prev</a>, <a class="el" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">TinyXML2::MemPool::SetTracked()</a>, <a class="el" href="a00319_source.xhtml#l00100">TIXMLASSERT</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01302">TinyXML2::XMLElement::SetText()</a>.</p>
<div class="fragment"><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;{</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <span class="keywordflow">if</span> ( addThis-&gt;_document != <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> ) {</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    }</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;  <span class="keywordflow">if</span> (addThis-&gt;_parent)</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    addThis-&gt;_parent-&gt;Unlink( addThis );</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;     addThis-&gt;_memPool-&gt;SetTracked();</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> ) {</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> );</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> == 0 );</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = addThis;</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>;</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = addThis;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = 0;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    }</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> == 0 );</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = addThis;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = 0;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = 0;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    }</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <span class="keywordflow">return</span> addThis;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
<div class="ttc" id="a00319_xhtml_a029877acb3c6fd71698561044953bd14"><div class="ttname"><a href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a></div><div class="ttdeci">#define TIXMLASSERT(x)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00100">TinyXML2.h:100</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_ae7eb7051f843bf705bbcf6551c13fd97_cgraph.svg" width="368" height="116"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_ae7eb7051f843bf705bbcf6551c13fd97_icgraph.svg" width="592" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a33818ba11ef392a22f4cf739da6dfb24"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::LastChild </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the last child node, or null if none exists. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00754">754</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                                                {</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>;</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a09eb6290a6b17b65c6688a10073e99ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::LastChild </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00758">758</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                                          {</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">const_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="a00201.xhtml#a33818ba11ef392a22f4cf739da6dfb24">LastChild</a>() );</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a33818ba11ef392a22f4cf739da6dfb24"><div class="ttname"><a href="a00201.xhtml#a33818ba11ef392a22f4cf739da6dfb24">TinyXML2::XMLNode::LastChild</a></div><div class="ttdeci">const XMLNode * LastChild() const </div><div class="ttdoc">Get the last child node, or null if none exists. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00754">TinyXML2.h:754</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8b1ca00b71ef6447eb27f63d81ce548d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00199.xhtml">XMLElement</a> * TinyXML2::XMLNode::LastChildElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the last child element or optionally the last child element with the specified name. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00784">784</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00900">_lastChild</a>, <a class="el" href="a00319_source.xhtml#l00902">_prev</a>, <a class="el" href="a00319_source.xhtml#l01170">TinyXML2::XMLElement::Name()</a>, <a class="el" href="a00319_source.xhtml#l00579">TinyXML2::XMLUtil::StringEqual()</a>, and <a class="el" href="a00319_source.xhtml#l01178">TinyXML2::XMLElement::ToElement()</a>.</p>
<div class="fragment"><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;{</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>; node; node=node-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> ) {</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        <a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>* element = node-&gt;ToElement();</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        <span class="keywordflow">if</span> ( element ) {</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;            <span class="keywordflow">if</span> ( !value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( element-&gt;Name(), value ) ) {</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            }</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    }</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
<div class="ttc" id="a00205_xhtml_af0f1d719f7e1067ec06eeb2d687520a5"><div class="ttname"><a href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">TinyXML2::XMLUtil::StringEqual</a></div><div class="ttdeci">static bool StringEqual(const char *p, const char *q, int nChar=INT_MAX)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00579">TinyXML2.h:579</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a8b1ca00b71ef6447eb27f63d81ce548d_cgraph.svg" width="379" height="182"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a950bbc012ebcc678e6f302c8b9c6f0f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00199.xhtml">XMLElement</a>* TinyXML2::XMLNode::LastChildElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00767">767</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                                                        {</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>*<span class="keyword">&gt;</span>(<span class="keyword">const_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="a00201.xhtml#a8b1ca00b71ef6447eb27f63d81ce548d">LastChildElement</a>(value) );</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a8b1ca00b71ef6447eb27f63d81ce548d"><div class="ttname"><a href="a00201.xhtml#a8b1ca00b71ef6447eb27f63d81ce548d">TinyXML2::XMLNode::LastChildElement</a></div><div class="ttdeci">const XMLElement * LastChildElement(const char *value=0) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00784">TinyXML2.cpp:784</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4425ebd89f0324f16cffbb67c80fd76e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::LinkEndChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>addThis</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00812">812</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                                              {</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">InsertEndChild</a>( addThis );</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a8ae11185b5fbb9620d71114c70b31368"><div class="ttname"><a href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">TinyXML2::XMLNode::InsertEndChild</a></div><div class="ttdeci">XMLNode * InsertEndChild(XMLNode *addThis)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00669">TinyXML2.cpp:669</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aee7c15f0bf3bdc684fda87d584356c1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::NextSibling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the next (right) sibling node of this node. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00788">788</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01606">TinyXML2::XMLElement::Accept()</a>, and <a class="el" href="a00318_source.xhtml#l00579">TinyXML2::XMLDocument::Accept()</a>.</p>
<div class="fragment"><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                                                  {</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>;</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_aee7c15f0bf3bdc684fda87d584356c1b_icgraph.svg" width="100%" height="387"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a13cd6db854d4b983e9b7525e575da2be"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::NextSibling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00792">792</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                                          {</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>;</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa4c176052f5724527a78f403b4e507ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00199.xhtml">XMLElement</a> * TinyXML2::XMLNode::NextSiblingElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the next (right) sibling element of this node, with an optionally supplied name. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00798">798</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00903">_next</a>, <a class="el" href="a00319_source.xhtml#l00579">TinyXML2::XMLUtil::StringEqual()</a>, and <a class="el" href="a00319_source.xhtml#l01178">TinyXML2::XMLElement::ToElement()</a>.</p>

<p>Referenced by <a class="el" href="a00280_source.xhtml#l00078">Voxel::ParameterDMLParser::_getParameter()</a>, and <a class="el" href="a00280_source.xhtml#l00290">Voxel::ParameterDMLParser::getParameters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;{</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>* node=this-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>; node; node = node-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> ) {</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;        <span class="keyword">const</span> <a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>* element = node-&gt;ToElement();</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        <span class="keywordflow">if</span> ( element</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                &amp;&amp; (!value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( value, node-&gt;Value() ))) {</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;        }</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    }</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;}</div>
<div class="ttc" id="a00205_xhtml_af0f1d719f7e1067ec06eeb2d687520a5"><div class="ttname"><a href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">TinyXML2::XMLUtil::StringEqual</a></div><div class="ttdeci">static bool StringEqual(const char *p, const char *q, int nChar=INT_MAX)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00579">TinyXML2.h:579</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_aa4c176052f5724527a78f403b4e507ee_cgraph.svg" width="379" height="116"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_aa4c176052f5724527a78f403b4e507ee_icgraph.svg" width="100%" height="548"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a042a801a2ef0061f1d4bd253c89f500e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00199.xhtml">XMLElement</a>* TinyXML2::XMLNode::NextSiblingElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00799">799</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                                                          {</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>*<span class="keyword">&gt;</span>(<span class="keyword">const_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="a00201.xhtml#aa4c176052f5724527a78f403b4e507ee">NextSiblingElement</a>( value ) );</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_aa4c176052f5724527a78f403b4e507ee"><div class="ttname"><a href="a00201.xhtml#aa4c176052f5724527a78f403b4e507ee">TinyXML2::XMLNode::NextSiblingElement</a></div><div class="ttdeci">const XMLElement * NextSiblingElement(const char *value=0) const </div><div class="ttdoc">Get the next (right) sibling element of this node, with an optionally supplied name. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00798">TinyXML2.cpp:798</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a42dc8cb00bd0045c5b69e8715ff9cbf3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> TinyXML2::XMLNode::NoChildren </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if this node has no children. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00731">731</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                                    {</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        <span class="keywordflow">return</span> !<a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0c9cd8acc776f0819d146e83c01156b4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>&amp; TinyXML2::XMLNode::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00201.xhtml">XMLNode</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5f038bc06894ab6f6914bf5841a9f53f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::Parent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the parent of this node on the DOM. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00722">722</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l02253">TinyXML2::XMLPrinter::VisitEnter()</a>.</p>
<div class="fragment"><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                                        {</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a5f038bc06894ab6f6914bf5841a9f53f_icgraph.svg" width="368" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a46ecdf68ee83b8731934fe6dbbd50581"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::Parent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00726">726</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                                {</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a666a962d4e7ce40fad31a0d273659176"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char * TinyXML2::XMLNode::ParseDeep </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00133.xhtml">StrPair</a> *&#160;</td>
          <td class="paramname"><em>parentEnd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00199.xhtml#a1f37b0bb41320c4121515755b8a057a4">TinyXML2::XMLElement</a>, <a class="el" href="a00204.xhtml#a1a9b1c4c1144acbf5c9f8a3b6e4ec55c">TinyXML2::XMLUnknown</a>, <a class="el" href="a00197.xhtml#a6e32f30fbdec75b25799ee9b476d9104">TinyXML2::XMLDeclaration</a>, <a class="el" href="a00195.xhtml#a15a0eddf7fc540c4d5a3dbed6cb7e8b6">TinyXML2::XMLComment</a>, and <a class="el" href="a00203.xhtml#a48075a5d36447886eef9bb98b4db951d">TinyXML2::XMLText</a>.</p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00824">824</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00895">_document</a>, <a class="el" href="a00319_source.xhtml#l00906">_memPool</a>, <a class="el" href="a00319_source.xhtml#l00897">_value</a>, <a class="el" href="a00319_source.xhtml#l01496">TinyXML2::XMLElement::CLOSING</a>, <a class="el" href="a00319_source.xhtml#l01498">TinyXML2::XMLElement::ClosingType()</a>, <a class="el" href="a00318_source.xhtml#l00904">DeleteNode()</a>, <a class="el" href="a00319_source.xhtml#l00190">TinyXML2::StrPair::Empty()</a>, <a class="el" href="a00319_source.xhtml#l01694">TinyXML2::XMLDocument::Error()</a>, <a class="el" href="a00318_source.xhtml#l00192">TinyXML2::StrPair::GetStr()</a>, <a class="el" href="a00318_source.xhtml#l00509">TinyXML2::XMLDocument::Identify()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00319_source.xhtml#l01494">TinyXML2::XMLElement::OPEN</a>, <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01889">TinyXML2::XMLDocument::SetError()</a>, <a class="el" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">TinyXML2::MemPool::SetTracked()</a>, <a class="el" href="a00319_source.xhtml#l00579">TinyXML2::XMLUtil::StringEqual()</a>, <a class="el" href="a00319_source.xhtml#l00662">ToElement()</a>, <a class="el" href="a00318_source.xhtml#l00078">TinyXML2::StrPair::TransferTo()</a>, <a class="el" href="a00318_source.xhtml#l00612">Value()</a>, <a class="el" href="a00319_source.xhtml#l00535">TinyXML2::XML_ERROR_MISMATCHED_ELEMENT</a>, and <a class="el" href="a00319_source.xhtml#l00536">TinyXML2::XML_ERROR_PARSING</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01773">TinyXML2::XMLDocument::LoadFile()</a>, <a class="el" href="a00318_source.xhtml#l01840">TinyXML2::XMLDocument::Parse()</a>, <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>, and <a class="el" href="a00318_source.xhtml#l01535">TinyXML2::XMLElement::ParseDeep()</a>.</p>
<div class="fragment"><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;{</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="comment">// This is a recursive method, but thinking about it &quot;at the current level&quot;</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <span class="comment">// it is a pretty simple flat list:</span></div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <span class="comment">//    &lt;foo/&gt;</span></div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    <span class="comment">//    &lt;!-- comment --&gt;</span></div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="comment">// With a special case:</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="comment">//    &lt;foo&gt;</span></div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="comment">//    &lt;/foo&gt;</span></div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="comment">//    &lt;!-- comment --&gt;</span></div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="comment">// Where the closing element (/foo) *must* be the next thing after the opening</span></div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    <span class="comment">// element, and the names must match. BUT the tricky bit is that the closing</span></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <span class="comment">// element will be read by the child.</span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="comment">// &#39;endTag&#39; is the end tag for this node, it is returned by a call to a child.</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="comment">// &#39;parentEnd&#39; is the end tag for the parent, which is filled in and returned.</span></div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    <span class="keywordflow">while</span>( p &amp;&amp; *p ) {</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;        <a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>* node = 0;</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;        p = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a0a09219933989db01f4e0cff84ce5af2">Identify</a>( p, &amp;node );</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="keywordflow">if</span> ( p == 0 || node == 0 ) {</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        }</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;        StrPair endTag;</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        p = node-&gt;ParseDeep( p, &amp;endTag );</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        <span class="keywordflow">if</span> ( !p ) {</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;            <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;            node = 0;</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;            <span class="keywordflow">if</span> ( !<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a8302f8ca7f1ed6dd2690e3875f968a32">Error</a>() ) {</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a9bbf02bb29585a521dbf9335152d0ba7">XML_ERROR_PARSING</a>, 0, 0 );</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;            }</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        }</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;        <a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>* ele = node-&gt;ToElement();</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;        <span class="comment">// We read the end tag. Return it to the parent.</span></div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keywordflow">if</span> ( ele &amp;&amp; ele-&gt;ClosingType() == <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51aaae91bf4fc3fb41663442b35cdc82c20">XMLElement::CLOSING</a> ) {</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;            <span class="keywordflow">if</span> ( parentEnd ) {</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                ele-&gt;_value.TransferTo( parentEnd );</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;            }</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;      node-&gt;_memPool-&gt;SetTracked(); <span class="comment">// created and then immediately deleted.</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;            <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;            <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        }</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        <span class="comment">// Handle an end tag returned to this level.</span></div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;        <span class="comment">// And handle a bunch of annoying errors.</span></div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;        <span class="keywordflow">if</span> ( ele ) {</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;            <span class="keywordtype">bool</span> mismatch = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;            <span class="keywordflow">if</span> ( endTag.Empty() &amp;&amp; ele-&gt;ClosingType() == <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8">XMLElement::OPEN</a> ) {</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                mismatch = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;            }</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( !endTag.Empty() &amp;&amp; ele-&gt;ClosingType() != <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8">XMLElement::OPEN</a> ) {</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                mismatch = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;            }</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( !endTag.Empty() ) {</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                <span class="keywordflow">if</span> ( !<a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( endTag.GetStr(), node-&gt;Value() )) {</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                    mismatch = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                }</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;            }</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;            <span class="keywordflow">if</span> ( mismatch ) {</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;                <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656af3965a4eac450a47610fa349ff13ef53">XML_ERROR_MISMATCHED_ELEMENT</a>, node-&gt;Value(), 0 );</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;                p = 0;</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;            }</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        }</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;        <span class="keywordflow">if</span> ( p == 0 ) {</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;            <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;            node = 0;</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        }</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;        <span class="keywordflow">if</span> ( node ) {</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;            this-&gt;<a class="code" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">InsertEndChild</a>( node );</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;        }</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    }</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_ae64fa52593db503652ee0258bf69d376"><div class="ttname"><a href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">TinyXML2::XMLNode::DeleteNode</a></div><div class="ttdeci">static void DeleteNode(XMLNode *node)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00904">TinyXML2.cpp:904</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a9bbf02bb29585a521dbf9335152d0ba7"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a9bbf02bb29585a521dbf9335152d0ba7">TinyXML2::XML_ERROR_PARSING</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00536">TinyXML2.h:536</a></div></div>
<div class="ttc" id="a00201_xhtml_a8ae11185b5fbb9620d71114c70b31368"><div class="ttname"><a href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">TinyXML2::XMLNode::InsertEndChild</a></div><div class="ttdeci">XMLNode * InsertEndChild(XMLNode *addThis)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00669">TinyXML2.cpp:669</a></div></div>
<div class="ttc" id="a00205_xhtml_af0f1d719f7e1067ec06eeb2d687520a5"><div class="ttname"><a href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">TinyXML2::XMLUtil::StringEqual</a></div><div class="ttdeci">static bool StringEqual(const char *p, const char *q, int nChar=INT_MAX)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00579">TinyXML2.h:579</a></div></div>
<div class="ttc" id="a00198_xhtml_a38edba63c6f6b5de49f4ece2ba14dd8d"><div class="ttname"><a href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">TinyXML2::XMLDocument::SetError</a></div><div class="ttdeci">void SetError(XMLError error, const char *str1, const char *str2)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01889">TinyXML2.cpp:1889</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00198_xhtml_a8302f8ca7f1ed6dd2690e3875f968a32"><div class="ttname"><a href="a00198.xhtml#a8302f8ca7f1ed6dd2690e3875f968a32">TinyXML2::XMLDocument::Error</a></div><div class="ttdeci">bool Error() const </div><div class="ttdoc">Return true if there was an error parsing the document. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01694">TinyXML2.h:1694</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00199_xhtml_ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8"><div class="ttname"><a href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8">TinyXML2::XMLElement::OPEN</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01494">TinyXML2.h:1494</a></div></div>
<div class="ttc" id="a00199_xhtml_ac6ec7cfed0b1684bd3ff3441d2400d51aaae91bf4fc3fb41663442b35cdc82c20"><div class="ttname"><a href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51aaae91bf4fc3fb41663442b35cdc82c20">TinyXML2::XMLElement::CLOSING</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01496">TinyXML2.h:1496</a></div></div>
<div class="ttc" id="a00198_xhtml_a0a09219933989db01f4e0cff84ce5af2"><div class="ttname"><a href="a00198.xhtml#a0a09219933989db01f4e0cff84ce5af2">TinyXML2::XMLDocument::Identify</a></div><div class="ttdeci">char * Identify(char *p, XMLNode **node)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00509">TinyXML2.cpp:509</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656af3965a4eac450a47610fa349ff13ef53"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656af3965a4eac450a47610fa349ff13ef53">TinyXML2::XML_ERROR_MISMATCHED_ELEMENT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00535">TinyXML2.h:535</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a666a962d4e7ce40fad31a0d273659176_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a666a962d4e7ce40fad31a0d273659176_icgraph.svg" width="390" height="182"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a480185d95dbe41f5692b7fbd89910a64"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::PreviousSibling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the previous (left) sibling node of this node. </p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00772">772</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                                                    {</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a90867eeab7e09b2a24f253b84cc90f34"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::PreviousSibling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00776">776</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                                            {</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>;</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="acd44b243b52240d10cb875ee2a36eb01"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00199.xhtml">XMLElement</a> * TinyXML2::XMLNode::PreviousSiblingElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the previous (left) sibling element of this node, with an optionally supplied name. </p>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00811">811</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00902">_prev</a>, <a class="el" href="a00319_source.xhtml#l00579">TinyXML2::XMLUtil::StringEqual()</a>, and <a class="el" href="a00319_source.xhtml#l01178">TinyXML2::XMLElement::ToElement()</a>.</p>
<div class="fragment"><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;{</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>; node; node = node-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> ) {</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        <span class="keyword">const</span> <a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>* element = node-&gt;ToElement();</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        <span class="keywordflow">if</span> ( element</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                &amp;&amp; (!value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( value, node-&gt;Value() ))) {</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;            <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        }</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    }</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
<div class="ttc" id="a00205_xhtml_af0f1d719f7e1067ec06eeb2d687520a5"><div class="ttname"><a href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">TinyXML2::XMLUtil::StringEqual</a></div><div class="ttdeci">static bool StringEqual(const char *p, const char *q, int nChar=INT_MAX)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00579">TinyXML2.h:579</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_acd44b243b52240d10cb875ee2a36eb01_cgraph.svg" width="384" height="116"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a720feb61720c7220ef06cc8c3093458d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00199.xhtml">XMLElement</a>* TinyXML2::XMLNode::PreviousSiblingElement </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00783">783</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                                                              {</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>*<span class="keyword">&gt;</span>(<span class="keyword">const_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="a00201.xhtml#acd44b243b52240d10cb875ee2a36eb01">PreviousSiblingElement</a>( value ) );</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    }</div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00201_xhtml_acd44b243b52240d10cb875ee2a36eb01"><div class="ttname"><a href="a00201.xhtml#acd44b243b52240d10cb875ee2a36eb01">TinyXML2::XMLNode::PreviousSiblingElement</a></div><div class="ttdeci">const XMLElement * PreviousSiblingElement(const char *value=0) const </div><div class="ttdoc">Get the previous (left) sibling element of this node, with an optionally supplied name...</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00811">TinyXML2.cpp:811</a></div></div>
<div class="ttc" id="a00201_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00201.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLNode::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00649">TinyXML2.h:649</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a527b7ce2a80b4580275531020867b53a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TinyXML2::XMLNode::SetValue </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00398.xhtml">bool</a>&#160;</td>
          <td class="paramname"><em>staticMem</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the Value of an XML node. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value()</a> </dd></dl>

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00617">617</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00897">_value</a>, <a class="el" href="a00319_source.xhtml#l00194">TinyXML2::StrPair::SetInternedStr()</a>, and <a class="el" href="a00318_source.xhtml#l00112">TinyXML2::StrPair::SetStr()</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01708">TinyXML2::XMLDocument::NewComment()</a>, <a class="el" href="a00318_source.xhtml#l01726">TinyXML2::XMLDocument::NewDeclaration()</a>, <a class="el" href="a00318_source.xhtml#l01717">TinyXML2::XMLDocument::NewText()</a>, <a class="el" href="a00318_source.xhtml#l01735">TinyXML2::XMLDocument::NewUnknown()</a>, and <a class="el" href="a00318_source.xhtml#l01302">TinyXML2::XMLElement::SetText()</a>.</p>
<div class="fragment"><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;{</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keywordflow">if</span> ( staticMem ) {</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a6e89623a22f1dd43bc4037d6fe6487c0">SetInternedStr</a>( str );</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    }</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( str );</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    }</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;}</div>
<div class="ttc" id="a00133_xhtml_a6e89623a22f1dd43bc4037d6fe6487c0"><div class="ttname"><a href="a00133.xhtml#a6e89623a22f1dd43bc4037d6fe6487c0">TinyXML2::StrPair::SetInternedStr</a></div><div class="ttdeci">void SetInternedStr(const char *str)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00194">TinyXML2.h:194</a></div></div>
<div class="ttc" id="a00133_xhtml_a8d21246f67287932bba28e6393f5ea2c"><div class="ttname"><a href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">TinyXML2::StrPair::SetStr</a></div><div class="ttdeci">void SetStr(const char *str, int flags=0)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00112">TinyXML2.cpp:112</a></div></div>
<div class="ttc" id="a00201_xhtml_a4a5ab8dd7f54c25a2397eebb305eb583"><div class="ttname"><a href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">TinyXML2::XMLNode::_value</a></div><div class="ttdeci">StrPair _value</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00897">TinyXML2.h:897</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a527b7ce2a80b4580275531020867b53a_cgraph.svg" width="539" height="116"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a527b7ce2a80b4580275531020867b53a_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a189f59824ba25896d765bd89f02b6acf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::ShallowClone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00198.xhtml">XMLDocument</a> *&#160;</td>
          <td class="paramname"><em>document</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Make a copy of this node, but not its children. You may pass in a Document pointer that will be the owner of the new Node. If the 'document' is null, then the node returned will be allocated from the current Document. (this-&gt;<a class="el" href="a00201.xhtml#a17d9124bf3a8e7ac4dadf28ab45e1ae2" title="Get the XMLDocument that owns this XMLNode. ">GetDocument()</a>)</p>
<p>Note: if called on a <a class="el" href="a00198.xhtml">XMLDocument</a>, this will return null. </p>

<p>Implemented in <a class="el" href="a00198.xhtml#a213b25dcbb39c543e677fa593f48d4de">TinyXML2::XMLDocument</a>, <a class="el" href="a00199.xhtml#afe5dfc0730ed1c1b2c9e6b177e6b2fa6">TinyXML2::XMLElement</a>, <a class="el" href="a00204.xhtml#ad1af7fc04a6ea1ef03430ada735750e5">TinyXML2::XMLUnknown</a>, <a class="el" href="a00197.xhtml#a7d46862e40732a3504f11bedee5c8b88">TinyXML2::XMLDeclaration</a>, <a class="el" href="a00195.xhtml#a71e4d7cfc0349f5eddfa4d8da54908fd">TinyXML2::XMLComment</a>, and <a class="el" href="a00203.xhtml#a30e358bdfd667629b483d014ed2f92a7">TinyXML2::XMLText</a>.</p>

</div>
</div>
<a class="anchor" id="a1756a4d0fe6e357ab52c66ae41ed3414"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> TinyXML2::XMLNode::ShallowEqual </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>compare</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Test if 2 nodes are the same, but don't test children. The 2 nodes do not need to be in the same Document.</p>
<p>Note: if called on a <a class="el" href="a00198.xhtml">XMLDocument</a>, this will return false. </p>

<p>Implemented in <a class="el" href="a00198.xhtml#a199212b7946159ebce8fcd61223b7cf7">TinyXML2::XMLDocument</a>, <a class="el" href="a00199.xhtml#acabaa32707cda48d09044f9e051f8a7b">TinyXML2::XMLElement</a>, <a class="el" href="a00204.xhtml#a3124e27c7380527b71da6ac8956e3c49">TinyXML2::XMLUnknown</a>, <a class="el" href="a00197.xhtml#aa89f796d04ddf4a87cbaaf847df3726f">TinyXML2::XMLDeclaration</a>, <a class="el" href="a00195.xhtml#a897927b8b91e02f01a9f85bac9c7dec3">TinyXML2::XMLComment</a>, and <a class="el" href="a00203.xhtml#a719ba88474f639c91c13e9f3c3691166">TinyXML2::XMLText</a>.</p>

</div>
</div>
<a class="anchor" id="a1e2c7a0d50f222702e1f2226c175b0c2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00195.xhtml">XMLComment</a>* TinyXML2::XMLNode::ToComment </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Safely cast to a Comment, or null. </p>

<p>Reimplemented in <a class="el" href="a00195.xhtml#aed69286bc6b7d5dcf15bc4ee8da7bb26">TinyXML2::XMLComment</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00670">670</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01002">TinyXML2::XMLComment::ShallowEqual()</a>.</p>
<div class="fragment"><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                                        {</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    }</div>
</div><!-- fragment -->
<p><div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a1e2c7a0d50f222702e1f2226c175b0c2_icgraph.svg" width="387" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="afd29e21f757c5013bc80fb6d3affe698"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00195.xhtml">XMLComment</a>* TinyXML2::XMLNode::ToComment </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00195.xhtml#a6a0c396cc2311e08fda74b83a53c732c">TinyXML2::XMLComment</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00692">692</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                                                    {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a07becef2e0637d530a6109c0c546bdcd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00197.xhtml">XMLDeclaration</a>* TinyXML2::XMLNode::ToDeclaration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Safely cast to a Declaration, or null. </p>

<p>Reimplemented in <a class="el" href="a00197.xhtml#a026987beb8a3b2a70913afabd7dddd99">TinyXML2::XMLDeclaration</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00678">678</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01052">TinyXML2::XMLDeclaration::ShallowEqual()</a>.</p>
<div class="fragment"><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                                            {</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    }</div>
</div><!-- fragment -->
<p><div id="dynsection-30" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-30-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-30-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-30-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a07becef2e0637d530a6109c0c546bdcd_icgraph.svg" width="398" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad018da10095d8bd70185fd8afd2a0c05"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00197.xhtml">XMLDeclaration</a>* TinyXML2::XMLNode::ToDeclaration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00197.xhtml#a6ac853016d3c3f5dc9f09fa82e66f30b">TinyXML2::XMLDeclaration</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00698">698</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                                                        {</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac83b131fe569970cc260c16f55445164"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00198.xhtml">XMLDocument</a>* TinyXML2::XMLNode::ToDocument </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Safely cast to a Document, or null. </p>

<p>Reimplemented in <a class="el" href="a00198.xhtml#a2f780f9f64205e893f0358356f241e7c">TinyXML2::XMLDocument</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00674">674</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                                        {</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a22de0f0d25a09c1edc9a75c94a294e07"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00198.xhtml">XMLDocument</a>* TinyXML2::XMLNode::ToDocument </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00198.xhtml#a00875ca0f312007ef010c0ce952d0515">TinyXML2::XMLDocument</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00695">695</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                                                        {</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2ef2c6efbc6c9c76767770160d2d123d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00199.xhtml">XMLElement</a>* TinyXML2::XMLNode::ToElement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Safely cast to an Element, or null. </p>

<p>Reimplemented in <a class="el" href="a00199.xhtml#a6ab4f6a3ad156db7daab35c9218d9f4a">TinyXML2::XMLElement</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00662">662</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01580">TinyXML2::XMLElement::ShallowEqual()</a>, and <a class="el" href="a00318_source.xhtml#l02253">TinyXML2::XMLPrinter::VisitEnter()</a>.</p>
<div class="fragment"><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                                        {</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    }</div>
</div><!-- fragment -->
<p><div id="dynsection-31" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-31-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-31-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-31-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a2ef2c6efbc6c9c76767770160d2d123d_icgraph.svg" width="603" height="247"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a2b1e17d82f817006b2622c2e457a7567"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00199.xhtml">XMLElement</a>* TinyXML2::XMLNode::ToElement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00199.xhtml#a68fa037c0e0d70b9d1eaa4cbc1151233">TinyXML2::XMLElement</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00686">686</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                                                    {</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abacd334fbb331a53cf18114b260e4bb3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00203.xhtml">XMLText</a>* TinyXML2::XMLNode::ToText </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Safely cast to Text, or null. </p>

<p>Reimplemented in <a class="el" href="a00203.xhtml#adfa949b01889cc8ede8f844b20e93eea">TinyXML2::XMLText</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00666">666</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01293">TinyXML2::XMLElement::GetText()</a>, <a class="el" href="a00318_source.xhtml#l01379">TinyXML2::XMLElement::QueryBoolText()</a>, <a class="el" href="a00318_source.xhtml#l01392">TinyXML2::XMLElement::QueryDoubleText()</a>, <a class="el" href="a00318_source.xhtml#l01405">TinyXML2::XMLElement::QueryFloatText()</a>, <a class="el" href="a00318_source.xhtml#l01353">TinyXML2::XMLElement::QueryIntText()</a>, <a class="el" href="a00318_source.xhtml#l01366">TinyXML2::XMLElement::QueryUnsignedText()</a>, <a class="el" href="a00318_source.xhtml#l01302">TinyXML2::XMLElement::SetText()</a>, and <a class="el" href="a00318_source.xhtml#l00954">TinyXML2::XMLText::ShallowEqual()</a>.</p>
<div class="fragment"><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                                    {</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    }</div>
</div><!-- fragment -->
<p><div id="dynsection-32" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-32-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-32-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-32-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_abacd334fbb331a53cf18114b260e4bb3_icgraph.svg" width="592" height="508"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a2545d0a6ff39c28ac23fd1c7f62f2d76"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00203.xhtml">XMLText</a>* TinyXML2::XMLNode::ToText </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00203.xhtml#a0c747c9fdb5c79f2a26d9faa8bb4e5fb">TinyXML2::XMLText</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00689">689</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                                                    {</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4cb5b246b9cb53405776c36bf67f36c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00204.xhtml">XMLUnknown</a>* TinyXML2::XMLNode::ToUnknown </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Safely cast to an Unknown, or null. </p>

<p>Reimplemented in <a class="el" href="a00204.xhtml#a9a49bde5bc753e108262b792c2ab956e">TinyXML2::XMLUnknown</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00682">682</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01102">TinyXML2::XMLUnknown::ShallowEqual()</a>.</p>
<div class="fragment"><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                        {</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    }</div>
</div><!-- fragment -->
<p><div id="dynsection-33" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-33-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-33-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-33-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00201_a4cb5b246b9cb53405776c36bf67f36c1_icgraph.svg" width="384" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a198bfb631c75c53497efa92f8b66b4e0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00204.xhtml">XMLUnknown</a>* TinyXML2::XMLNode::ToUnknown </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00204.xhtml#a727ec3c0da16d98c855db5105840612d">TinyXML2::XMLUnknown</a>.</p>

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00701">701</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                                                    {</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0fe718d6c3d1252c48992c1adc1ce93b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void TinyXML2::XMLNode::Unlink </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00201.xhtml">XMLNode</a> *&#160;</td>
          <td class="paramname"><em>child</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00318_source.xhtml#l00641">641</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00895">_document</a>, <a class="el" href="a00319_source.xhtml#l00899">_firstChild</a>, <a class="el" href="a00319_source.xhtml#l00900">_lastChild</a>, <a class="el" href="a00319_source.xhtml#l00903">_next</a>, <a class="el" href="a00319_source.xhtml#l00896">_parent</a>, <a class="el" href="a00319_source.xhtml#l00902">_prev</a>, and <a class="el" href="a00319_source.xhtml#l00100">TIXMLASSERT</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00628">DeleteChildren()</a>, <a class="el" href="a00318_source.xhtml#l00736">InsertAfterChild()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, and <a class="el" href="a00318_source.xhtml#l00604">~XMLNode()</a>.</p>
<div class="fragment"><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;{</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( child-&gt;_document == <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> );</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="keywordflow">if</span> ( child == <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> ) {</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    }</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keywordflow">if</span> ( child == <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> ) {</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>;</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    }</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keywordflow">if</span> ( child-&gt;_prev ) {</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        child-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = child-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    }</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keywordflow">if</span> ( child-&gt;_next ) {</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        child-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = child-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;  child-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> = 0;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;}</div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
<div class="ttc" id="a00319_xhtml_a029877acb3c6fd71698561044953bd14"><div class="ttname"><a href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a></div><div class="ttdeci">#define TIXMLASSERT(x)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00100">TinyXML2.h:100</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-34" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-34-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-34-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-34-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a0fe718d6c3d1252c48992c1adc1ce93b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a76031498d32776e907d2ba79b7029b18"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char * TinyXML2::XMLNode::Value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The meaning of 'value' changes for the specific type. </p>
<pre class="fragment">Document: empty
Element:  name of the element
Comment:  the comment text
Unknown:  the tag contents
Text:   the text string
</pre> 
<p>Definition at line <a class="el" href="a00318_source.xhtml#l00612">612</a> of file <a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a>.</p>

<p>References <a class="el" href="a00319_source.xhtml#l00897">_value</a>, and <a class="el" href="a00318_source.xhtml#l00192">TinyXML2::StrPair::GetStr()</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l01293">TinyXML2::XMLElement::GetText()</a>, <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01379">TinyXML2::XMLElement::QueryBoolText()</a>, <a class="el" href="a00318_source.xhtml#l01392">TinyXML2::XMLElement::QueryDoubleText()</a>, <a class="el" href="a00318_source.xhtml#l01405">TinyXML2::XMLElement::QueryFloatText()</a>, <a class="el" href="a00318_source.xhtml#l01353">TinyXML2::XMLElement::QueryIntText()</a>, <a class="el" href="a00318_source.xhtml#l01366">TinyXML2::XMLElement::QueryUnsignedText()</a>, <a class="el" href="a00318_source.xhtml#l00943">TinyXML2::XMLText::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l00992">TinyXML2::XMLComment::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l01042">TinyXML2::XMLDeclaration::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l01092">TinyXML2::XMLUnknown::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l01567">TinyXML2::XMLElement::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l00954">TinyXML2::XMLText::ShallowEqual()</a>, <a class="el" href="a00318_source.xhtml#l01002">TinyXML2::XMLComment::ShallowEqual()</a>, <a class="el" href="a00318_source.xhtml#l01052">TinyXML2::XMLDeclaration::ShallowEqual()</a>, <a class="el" href="a00318_source.xhtml#l01102">TinyXML2::XMLUnknown::ShallowEqual()</a>, <a class="el" href="a00318_source.xhtml#l01580">TinyXML2::XMLElement::ShallowEqual()</a>, and <a class="el" href="a00318_source.xhtml#l02273">TinyXML2::XMLPrinter::Visit()</a>.</p>
<div class="fragment"><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;{</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">GetStr</a>();</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;}</div>
<div class="ttc" id="a00133_xhtml_a5e2c5bd32ba79f32f219cf9301c2bce6"><div class="ttname"><a href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">TinyXML2::StrPair::GetStr</a></div><div class="ttdeci">const char * GetStr()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00192">TinyXML2.cpp:192</a></div></div>
<div class="ttc" id="a00201_xhtml_a4a5ab8dd7f54c25a2397eebb305eb583"><div class="ttname"><a href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">TinyXML2::XMLNode::_value</a></div><div class="ttdeci">StrPair _value</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00897">TinyXML2.h:897</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-35" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-35-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-35-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-35-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a76031498d32776e907d2ba79b7029b18_cgraph.svg" width="100%" height="436"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-36" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-36-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-36-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-36-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00201_a76031498d32776e907d2ba79b7029b18_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="a4eee3bda60c60a30e4e8cd4ea91c4c6e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="a00198.xhtml">XMLDocument</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00648">648</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac2fba9b6e452829dd892f7392c24e0eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="a00199.xhtml">XMLElement</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00649">649</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ab5452cb997f7f989bdfe590b28c0abe6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00198.xhtml">XMLDocument</a>* TinyXML2::XMLNode::_document</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00895">895</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00661">DeleteChild()</a>, <a class="el" href="a00318_source.xhtml#l00628">DeleteChildren()</a>, <a class="el" href="a00318_source.xhtml#l01419">TinyXML2::XMLElement::FindOrCreateAttribute()</a>, <a class="el" href="a00318_source.xhtml#l00736">InsertAfterChild()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, <a class="el" href="a00318_source.xhtml#l01465">TinyXML2::XMLElement::ParseAttributes()</a>, <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l00915">TinyXML2::XMLText::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l00980">TinyXML2::XMLComment::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01030">TinyXML2::XMLDeclaration::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01079">TinyXML2::XMLUnknown::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l00943">TinyXML2::XMLText::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l00992">TinyXML2::XMLComment::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l01042">TinyXML2::XMLDeclaration::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l01092">TinyXML2::XMLUnknown::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l01567">TinyXML2::XMLElement::ShallowClone()</a>, <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>, and <a class="el" href="a00318_source.xhtml#l01647">TinyXML2::XMLDocument::XMLDocument()</a>.</p>

</div>
</div>
<a class="anchor" id="a104c1f0a0dc912d977631b4da9b56aa5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::_firstChild</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00899">899</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00628">DeleteChildren()</a>, <a class="el" href="a00318_source.xhtml#l00770">FirstChildElement()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

</div>
</div>
<a class="anchor" id="a122044df0acdbc45e1a8d0d691a188e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::_lastChild</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00900">900</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00628">DeleteChildren()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, <a class="el" href="a00318_source.xhtml#l00784">LastChildElement()</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

</div>
</div>
<a class="anchor" id="a3b5858a879823b5f5ba1d80f3addace8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00098.xhtml">MemPool</a>* TinyXML2::XMLNode::_memPool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00906">906</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00904">DeleteNode()</a>, <a class="el" href="a00318_source.xhtml#l00509">TinyXML2::XMLDocument::Identify()</a>, <a class="el" href="a00318_source.xhtml#l00736">InsertAfterChild()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, and <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>.</p>

</div>
</div>
<a class="anchor" id="afa77fe36a3f0401eb576b2ee3152c58e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::_next</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00903">903</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00770">FirstChildElement()</a>, <a class="el" href="a00318_source.xhtml#l00736">InsertAfterChild()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, <a class="el" href="a00318_source.xhtml#l00798">NextSiblingElement()</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

</div>
</div>
<a class="anchor" id="a1959951484643d4d29dd52eabc30e314"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::_parent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00896">896</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00661">DeleteChild()</a>, <a class="el" href="a00319_source.xhtml#l01685">TinyXML2::XMLDocument::DeleteNode()</a>, <a class="el" href="a00318_source.xhtml#l00736">InsertAfterChild()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>, and <a class="el" href="a00318_source.xhtml#l00604">~XMLNode()</a>.</p>

</div>
</div>
<a class="anchor" id="a6fcd0b8fdee9cacd6b45e7802244c909"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00201.xhtml">XMLNode</a>* TinyXML2::XMLNode::_prev</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00902">902</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00736">InsertAfterChild()</a>, <a class="el" href="a00318_source.xhtml#l00669">InsertEndChild()</a>, <a class="el" href="a00318_source.xhtml#l00702">InsertFirstChild()</a>, <a class="el" href="a00318_source.xhtml#l00784">LastChildElement()</a>, <a class="el" href="a00318_source.xhtml#l00811">PreviousSiblingElement()</a>, and <a class="el" href="a00318_source.xhtml#l00641">Unlink()</a>.</p>

</div>
</div>
<a class="anchor" id="a4a5ab8dd7f54c25a2397eebb305eb583"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00133.xhtml">StrPair</a> TinyXML2::XMLNode::_value</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00319_source.xhtml#l00897">897</a> of file <a class="el" href="a00319_source.xhtml">TinyXML2.h</a>.</p>

<p>Referenced by <a class="el" href="a00318_source.xhtml#l00824">ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l00915">TinyXML2::XMLText::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l00980">TinyXML2::XMLComment::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01030">TinyXML2::XMLDeclaration::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01079">TinyXML2::XMLUnknown::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l01535">TinyXML2::XMLElement::ParseDeep()</a>, <a class="el" href="a00318_source.xhtml#l00617">SetValue()</a>, and <a class="el" href="a00318_source.xhtml#l00612">Value()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00319_source.xhtml">TinyXML2.h</a></li>
<li><a class="el" href="a00318_source.xhtml">TinyXML2.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 12 2015 21:49:56 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
