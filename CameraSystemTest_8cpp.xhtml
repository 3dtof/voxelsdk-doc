<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: CameraSystemTest.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_37618a71d99bdfed5979e976980d5eec.xhtml">Test</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">CameraSystemTest.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="CameraSystem_8h_source.xhtml">CameraSystem.h</a>&quot;</code><br />
<code>#include &quot;SimpleOpt.h&quot;</code><br />
<code>#include &quot;<a class="el" href="Common_8h_source.xhtml">Common.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="Logger_8h_source.xhtml">Logger.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="UVCStreamer_8h_source.xhtml">UVCStreamer.h</a>&quot;</code><br />
<code>#include &lt;iomanip&gt;</code><br />
<code>#include &lt;fstream&gt;</code><br />
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for CameraSystemTest.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="CameraSystemTest_8cpp__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div>
<p><a href="CameraSystemTest_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:adf7c3ac791f996a56160a12f379cbd99"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99">Options</a> { <br />
&#160;&#160;<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99aa4a88474c10fb863e1a2894a3d61246f">CREATE_PROFILE</a> = 3, 
<br />
&#160;&#160;<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a91391433e314e5ccd184738d1e20d865">PARENT_PROFILE_ID</a> = 4, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99adb605d7a92be5ecca4effa7134505430">PROFILE_ID</a> = 5, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb7227be6a36b93e485b62e3acddae51">SECTION</a> = 6, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99aa88076262efd878ec9b974554cdcc7d5">PARAM_NAME</a> = 7, 
<br />
&#160;&#160;<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a1c85eab78873293d0782d092daeb6f88">PARAM_VALUE</a> = 8, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a0562ad4e5fae3fb52e473c545377260b">LIST_PROFILES</a> = 9, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a475d3ffbed404d9e6b23b71a63f953a5">REMOVE_PROFILE</a> = 10, 
<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a643b65006e7ee74ba6f553708a70d83b">WRITE_TO_EEPROM</a> = 11, 
<br />
&#160;&#160;<a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99ab1672d6f86200fc9998fe6b959e63747">SAVE_FILE_TO_HOST</a> = 12, 
<a class="el" href="CameraSystemReadStreamTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a> = 3, 
<a class="el" href="CameraSystemSaveStreamTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0, 
<a class="el" href="CameraSystemSaveStreamTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1, 
<br />
&#160;&#160;<a class="el" href="CameraSystemSaveStreamTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2, 
<a class="el" href="CameraSystemSaveStreamTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a> = 3, 
<a class="el" href="CameraSystemSaveStreamTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a> = 4, 
<a class="el" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0, 
<br />
&#160;&#160;<a class="el" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1, 
<a class="el" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2, 
<a class="el" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a> = 3, 
<a class="el" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a> = 4, 
<br />
&#160;&#160;<a class="el" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea">PHASE_OFFSET_FILE_NAME</a> = 0, 
<a class="el" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6">OUTPUT_FILE_NAME</a> = 3, 
<a class="el" href="DFTTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a3f271178bbfb011a2ded4e4faf350b04">INPUT_FILE_NAME</a> = 0, 
<a class="el" href="DFTTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6">OUTPUT_FILE_NAME</a> = 1, 
<br />
&#160;&#160;<a class="el" href="DMLParseTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7">XML_FILE</a> = 0, 
<a class="el" href="DownloaderTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0, 
<a class="el" href="DownloaderTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1, 
<a class="el" href="DownloaderTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2, 
<br />
&#160;&#160;<a class="el" href="DownloaderTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a0b2dc0bf94f9a8786c951738e84a3e80">FIRMWARE_FILE</a> = 3, 
<a class="el" href="UVCStreamerTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0, 
<a class="el" href="UVCStreamerTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1, 
<a class="el" href="UVCStreamerTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2, 
<br />
&#160;&#160;<a class="el" href="UVCStreamerTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a> = 3, 
<a class="el" href="UVCStreamerTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a> = 4, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1, 
<br />
&#160;&#160;<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99aceb7c305772dab23a260960771180df3">REGISTER</a> = 3, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb9be765f361bb7efb9073730aac92c6">READ</a> = 4, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a61aa7ff70b76bff0fda378cf61d6afbc">WRITE</a> = 5, 
<br />
&#160;&#160;<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9d7d6f31868d66330397c967c4afd2d2">DATA</a> = 6, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a3418c365e56fa4587ae44612afc6fa48">LENGTH</a> = 7, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99ac8bd62065abff19ea8ce3ec18cf3d6fe">LSB</a> = 8, 
<a class="el" href="Voxel14RegisterTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99aaf93e41af4961a7cd6042752d7ee66f8">MSB</a> = 9, 
<br />
&#160;&#160;<a class="el" href="SerialNumber_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0, 
<a class="el" href="SerialNumber_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1, 
<a class="el" href="SerialNumber_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2
<br />
 }</td></tr>
<tr class="separator:adf7c3ac791f996a56160a12f379cbd99"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a97ee70a8770dc30d06c744b24eb2fcfc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="CameraSystemTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a> ()</td></tr>
<tr class="separator:a97ee70a8770dc30d06c744b24eb2fcfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ddf1224851353fc92bfbff6f499fa97"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.xhtml">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="CameraSystemTest_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a> (<a class="el" href="classint.xhtml">int</a> argc, char *argv[])</td></tr>
<tr class="separator:a0ddf1224851353fc92bfbff6f499fa97"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a7055ab3ff9a1857b4a934d2523cae5d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector</a>&lt; CSimpleOpt::SOption &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="CameraSystemTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a></td></tr>
<tr class="separator:a7055ab3ff9a1857b4a934d2523cae5d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99">Options</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"></a>VENDOR_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"></a>PRODUCT_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"></a>SERIAL_NUMBER&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99aa4a88474c10fb863e1a2894a3d61246f"></a>CREATE_PROFILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a91391433e314e5ccd184738d1e20d865"></a>PARENT_PROFILE_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99adb605d7a92be5ecca4effa7134505430"></a>PROFILE_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99acb7227be6a36b93e485b62e3acddae51"></a>SECTION&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99aa88076262efd878ec9b974554cdcc7d5"></a>PARAM_NAME&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a1c85eab78873293d0782d092daeb6f88"></a>PARAM_VALUE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a0562ad4e5fae3fb52e473c545377260b"></a>LIST_PROFILES&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a475d3ffbed404d9e6b23b71a63f953a5"></a>REMOVE_PROFILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a643b65006e7ee74ba6f553708a70d83b"></a>WRITE_TO_EEPROM&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99ab1672d6f86200fc9998fe6b959e63747"></a>SAVE_FILE_TO_HOST&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1"></a>DUMP_FILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"></a>VENDOR_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"></a>PRODUCT_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"></a>SERIAL_NUMBER&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1"></a>DUMP_FILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309"></a>NUM_OF_FRAMES&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"></a>VENDOR_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"></a>PRODUCT_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"></a>SERIAL_NUMBER&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1"></a>DUMP_FILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309"></a>NUM_OF_FRAMES&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea"></a>PHASE_OFFSET_FILE_NAME&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6"></a>OUTPUT_FILE_NAME&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a3f271178bbfb011a2ded4e4faf350b04"></a>INPUT_FILE_NAME&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6"></a>OUTPUT_FILE_NAME&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7"></a>XML_FILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"></a>VENDOR_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"></a>PRODUCT_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"></a>SERIAL_NUMBER&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a0b2dc0bf94f9a8786c951738e84a3e80"></a>FIRMWARE_FILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"></a>VENDOR_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"></a>PRODUCT_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"></a>SERIAL_NUMBER&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1"></a>DUMP_FILE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309"></a>NUM_OF_FRAMES&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"></a>VENDOR_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"></a>PRODUCT_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"></a>SERIAL_NUMBER&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99aceb7c305772dab23a260960771180df3"></a>REGISTER&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99acb9be765f361bb7efb9073730aac92c6"></a>READ&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a61aa7ff70b76bff0fda378cf61d6afbc"></a>WRITE&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9d7d6f31868d66330397c967c4afd2d2"></a>DATA&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a3418c365e56fa4587ae44612afc6fa48"></a>LENGTH&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99ac8bd62065abff19ea8ce3ec18cf3d6fe"></a>LSB&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99aaf93e41af4961a7cd6042752d7ee66f8"></a>MSB&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"></a>VENDOR_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"></a>PRODUCT_ID&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"></a>SERIAL_NUMBER&#160;</td><td class="fielddoc">
</td></tr>
</table>

<p>Definition at line <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="CameraSystemTest_8cpp_source.xhtml">CameraSystemTest.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a> = 0,</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a> = 1,</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a> = 2,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a> = 3,</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a> = 4</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;};</div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00021">CameraSystemTest.cpp:21</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00025">CameraSystemTest.cpp:25</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00022">CameraSystemTest.cpp:22</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00023">CameraSystemTest.cpp:23</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00024">CameraSystemTest.cpp:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a97ee70a8770dc30d06c744b24eb2fcfc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void help </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="CameraSystemTest_8cpp_source.xhtml">CameraSystemTest.cpp</a>.</p>

<p>References <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00028">argumentSpecifications</a>.</p>

<p>Referenced by <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00052">main()</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;CameraSystemTest v1.0&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  CSimpleOpt::SOption *option = <a class="code" href="CameraSystemTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a>.data();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordflow">while</span>(option-&gt;nId &gt;= 0)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    std::cout &lt;&lt; option-&gt;pszArg &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; option-&gt;helpInfo &lt;&lt; std::endl;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    option++;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_a7055ab3ff9a1857b4a934d2523cae5d2"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a></div><div class="ttdeci">Vector&lt; CSimpleOpt::SOption &gt; argumentSpecifications</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00028">CameraSystemTest.cpp:28</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="CameraSystemTest_8cpp_a97ee70a8770dc30d06c744b24eb2fcfc_icgraph.svg" width="158" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0ddf1224851353fc92bfbff6f499fa97"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.xhtml">int</a> main </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classint.xhtml">int</a>&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="CameraSystemTest_8cpp_source.xhtml">CameraSystemTest.cpp</a>.</p>

<p>References <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#a62d21aa88579379c97a51b40ff370f05">Voxel::ToFRawFrame::ambient()</a>, <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#a71129221a2aadc0e1ca8551ac11ef5cd">Voxel::ToFRawFrame::ambientWordWidth()</a>, <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#a38cdfc04eef41661cdcaec4c0870e687">Voxel::ToFRawFrame::amplitude()</a>, <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#af85f22109d62a47ec5843437558fa90c">Voxel::ToFRawFrame::amplitudeWordWidth()</a>, <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00028">argumentSpecifications</a>, <a class="el" href="CameraSystem_8cpp_source.xhtml#l00274">Voxel::CameraSystem::connect()</a>, <a class="el" href="CameraSystemIQFrameTest_8py_source.xhtml#l00030">CameraSystemIQFrameTest::count</a>, <a class="el" href="CameraSystem_8cpp_source.xhtml#l00307">Voxel::CameraSystem::createFilter()</a>, <a class="el" href="CameraSystemTest_8py_source.xhtml#l00012">CameraSystemTest::devices</a>, <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00024">DUMP_FILE</a>, <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#abc808bba1a6289d3e95e790104d6c80f">Voxel::ToFRawFrame::flags()</a>, <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#a7f51f217b13dddc61ceec2270dbfcf2f">Voxel::ToFRawFrame::flagsWordWidth()</a>, <a class="el" href="DepthCamera_8h_source.xhtml#l00047">Voxel::DepthCamera::FRAME_RAW_FRAME_PROCESSED</a>, <a class="el" href="CameraSystemIQFrameTest_8py_source.xhtml#l00022">CameraSystemIQFrameTest::frameCount</a>, <a class="el" href="VideoMode_8h_source.xhtml#l00056">Voxel::FrameRate::getFrameRate()</a>, <a class="el" href="VideoMode_8h_source.xhtml#l00022">Voxel::FrameSize::height</a>, <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00038">help()</a>, <a class="el" href="Frame_8h_source.xhtml#l00030">Voxel::Frame::id</a>, <a class="el" href="Logger_8h_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="Logger_8h_source.xhtml#l00029">Voxel::LOG_INFO</a>, <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00025">NUM_OF_FRAMES</a>, <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#ab66f7bd205a6a5c16b0a47aedc00a7b4">Voxel::ToFRawFrame::phase()</a>, <a class="el" href="classVoxel_1_1ToFRawFrame.xhtml#af3fb7938e3e76c26299efe07f69d406f">Voxel::ToFRawFrame::phaseWordWidth()</a>, <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00022">PRODUCT_ID</a>, <a class="el" href="Device_8h_source.xhtml#l00091">Voxel::USBDevice::productID()</a>, <a class="el" href="CameraSystemIQFrameTest_8py_source.xhtml#l00018">CameraSystemIQFrameTest::r</a>, <a class="el" href="CameraSystem_8cpp_source.xhtml#l00240">Voxel::CameraSystem::scan()</a>, <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00023">SERIAL_NUMBER</a>, <a class="el" href="Device_8h_source.xhtml#l00069">Voxel::Device::serialNumber()</a>, <a class="el" href="Logger_8h_source.xhtml#l00110">Voxel::Logger::setDefaultLogLevel()</a>, <a class="el" href="Frame_8h_source.xhtml#l00191">Voxel::ToFRawFrame::size</a>, <a class="el" href="Common_8cpp_source.xhtml#l00041">Voxel::split()</a>, <a class="el" href="DepthCamera_8cpp_source.xhtml#l00336">Voxel::DepthCamera::stop()</a>, <a class="el" href="CameraSystemTest_8py_source.xhtml#l00010">CameraSystemTest::sys</a>, <a class="el" href="Frame_8h_source.xhtml#l00029">Voxel::Frame::timestamp</a>, <a class="el" href="Device_8h_source.xhtml#l00024">Voxel::Device::USB</a>, <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00021">VENDOR_ID</a>, <a class="el" href="Device_8h_source.xhtml#l00090">Voxel::USBDevice::vendorID()</a>, and <a class="el" href="VideoMode_8h_source.xhtml#l00022">Voxel::FrameSize::width</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  CSimpleOpt s(argc, argv, <a class="code" href="CameraSystemTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>.<a class="code" href="classVoxel_1_1Logger.xhtml#a24cc93971582344584a5c9064d897cbe">setDefaultLogLevel</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  uint16_t vid = 0;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;uint16_t&gt;</a> pids;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <a class="code" href="classString.xhtml">String</a> serialNumber;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <a class="code" href="classString.xhtml">String</a> dumpFileName;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  int32_t <a class="code" href="namespaceCameraSystemIQFrameTest.xhtml#ae528fef9708d21ddd76aa92607569cff">frameCount</a> = 1;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordflow">while</span> (s.Next())</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">if</span> (s.LastError() != SO_SUCCESS)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      std::cout &lt;&lt; s.GetLastErrorText(s.LastError()) &lt;&lt; <span class="stringliteral">&quot;: &#39;&quot;</span> &lt;&lt; s.OptionText() &lt;&lt; <span class="stringliteral">&quot;&#39; (use -h to get command line help)&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <a class="code" href="CameraSystemTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">//std::cout &lt;&lt; s.OptionId() &lt;&lt; &quot;: &quot; &lt;&lt; s.OptionArg() &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> splits;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">switch</span> (s.OptionId())</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        vid = (uint16_t)strtol(s.OptionArg(), &amp;endptr, 16);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <a class="code" href="group__Util.xhtml#gadd67e5b1a02a8a07764793e4598922d4">split</a>(s.OptionArg(), <span class="charliteral">&#39;,&#39;</span>, splits);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;s1: splits)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;          pids.push_back((uint16_t)strtol(s1.c_str(), &amp;endptr, 16));</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a>:</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        serialNumber = s.OptionArg();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a>:</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        dumpFileName = s.OptionArg();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a>:</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        frameCount = (int32_t)strtol(s.OptionArg(), &amp;endptr, 10);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="CameraSystemTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    };</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">if</span>(vid == 0 || pids.size() == 0 || pids[0] == 0 || dumpFileName.size() == 0)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Required argument missing.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="CameraSystemTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  std::ofstream f(dumpFileName, std::ios::binary | std::ios::out);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">if</span>(!f.good())</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to open &#39;&quot;</span> &lt;&lt; dumpFileName &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <a class="code" href="classVoxel_1_1CameraSystem.xhtml">CameraSystem</a> <a class="code" href="namespaceCameraSystemTest.xhtml#a08de9201448d0d16e6d0293a288b965c">sys</a>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="comment">// Get all valid detected devices</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keyword">const</span> <a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> &amp;<a class="code" href="namespaceCameraSystemTest.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a> = sys.<a class="code" href="classVoxel_1_1CameraSystem.xhtml#ad26fad5d70ee748d0492184da757d5be">scan</a>();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <a class="code" href="classVoxel_1_1Ptr.xhtml">DevicePtr</a> toConnect;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Detected devices: &quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;d: devices)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    std::cout &lt;&lt; d-&gt;id() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">if</span>(d-&gt;interfaceID() == Device::USB)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <a class="code" href="classVoxel_1_1USBDevice.xhtml">USBDevice</a> &amp;usb = (<a class="code" href="classVoxel_1_1USBDevice.xhtml">USBDevice</a> &amp;)*d;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordflow">if</span>(usb.<a class="code" href="classVoxel_1_1USBDevice.xhtml#ad7edff89623a9ecf8a2840b5181c67ac">vendorID</a>() == vid &amp;&amp; (serialNumber.size() == 0 || usb.<a class="code" href="classVoxel_1_1Device.xhtml#af5b725547c816ee4bac357b3ff049a80">serialNumber</a>() == serialNumber))</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> pid: pids)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;          <span class="keywordflow">if</span>(usb.<a class="code" href="classVoxel_1_1USBDevice.xhtml#a733db00843f6522b28a07719c943e1fe">productID</a>() == pid)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            toConnect = d;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordflow">if</span>(!toConnect)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No valid device found for the specified VID:PID:serialnumber&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="classVoxel_1_1Ptr.xhtml">DepthCameraPtr</a> depthCamera = sys.<a class="code" href="classVoxel_1_1CameraSystem.xhtml#ab685fb4639d124ee11aa7cd64ab02f00">connect</a>(toConnect);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordflow">if</span>(!depthCamera)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not load depth camera for device &quot;</span> &lt;&lt; toConnect-&gt;id() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordflow">if</span>(!depthCamera-&gt;isInitialized())</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Depth camera not initialized for device &quot;</span> &lt;&lt; toConnect-&gt;id() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully loaded depth camera for device &quot;</span> &lt;&lt; toConnect-&gt;id() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <a class="code" href="classVoxel_1_1Ptr.xhtml">FilterPtr</a> p = sys.<a class="code" href="classVoxel_1_1CameraSystem.xhtml#a5c6f46b1446564f205e75d0e21c10f15">createFilter</a>(<span class="stringliteral">&quot;Voxel::IIRFilter&quot;</span>, DepthCamera::FRAME_RAW_FRAME_PROCESSED);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordflow">if</span>(!p)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to get IIRFilter&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  depthCamera-&gt;addFilter(p, DepthCamera::FRAME_RAW_FRAME_PROCESSED);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  p = sys.<a class="code" href="classVoxel_1_1CameraSystem.xhtml#a5c6f46b1446564f205e75d0e21c10f15">createFilter</a>(<span class="stringliteral">&quot;Voxel::IIRFilter&quot;</span>, DepthCamera::FRAME_RAW_FRAME_PROCESSED);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordflow">if</span>(!p)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to get IIRFilter&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  p-&gt;set(<span class="stringliteral">&quot;gain&quot;</span>, 0.2f);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  depthCamera-&gt;addFilter(p, DepthCamera::FRAME_RAW_FRAME_PROCESSED, 0);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceCameraSystemIQFrameTest.xhtml#ac2abb9d1e1e9e639f1bd83f5342d44c2">count</a> = 0;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <a class="code" href="group__Util.xhtml#ga336d5597ccfb20c79696370b1982dc0e">TimeStampType</a> lastTimeStamp = 0;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">//    depthCamera-&gt;registerCallback(DepthCamera::FRAME_RAW_FRAME_UNPROCESSED, [&amp;](DepthCamera &amp;dc, const Frame &amp;frame, DepthCamera::FrameType c) {</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">//      const RawDataFrame *d = dynamic_cast&lt;const RawDataFrame *&gt;(&amp;frame);</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">//      if(!d)</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">//      {</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">//        std::cout &lt;&lt; &quot;Null frame captured? or not of type RawDataFrame&quot; &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">//        return;</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">//      }</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">//      std::cout &lt;&lt; &quot;Capture frame &quot; &lt;&lt; d-&gt;id &lt;&lt; &quot;@&quot; &lt;&lt; d-&gt;timestamp;</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">//      if(lastTimeStamp != 0)</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">//        std::cout &lt;&lt; &quot; (&quot; &lt;&lt; 1E6/(d-&gt;timestamp - lastTimeStamp) &lt;&lt; &quot; fps)&quot;;</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">//      std::cout &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">//      lastTimeStamp = d-&gt;timestamp;</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">//      f.write((char *)d-&gt;data.data(), d-&gt;data.size());</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">//      count++;</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">//      </span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">//      if(count &gt;= frameCount)</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">//        dc.stop();</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">//    });</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  depthCamera-&gt;registerCallback(DepthCamera::FRAME_RAW_FRAME_PROCESSED, [&amp;](<a class="code" href="classVoxel_1_1DepthCamera.xhtml">DepthCamera</a> &amp;dc, <span class="keyword">const</span> <a class="code" href="classVoxel_1_1Frame.xhtml">Frame</a> &amp;frame, <a class="code" href="classVoxel_1_1DepthCamera.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">DepthCamera::FrameType</a> c) {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">const</span> <a class="code" href="classVoxel_1_1ToFRawFrame.xhtml">ToFRawFrame</a> *d = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="classVoxel_1_1ToFRawFrame.xhtml">ToFRawFrame</a> *<span class="keyword">&gt;</span>(&amp;frame);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">if</span>(!d)</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Null frame captured? or not of type ToFRawFrame&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Capture frame &quot;</span> &lt;&lt; d-&gt;<a class="code" href="classVoxel_1_1Frame.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; d-&gt;<a class="code" href="classVoxel_1_1Frame.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span>(lastTimeStamp != 0)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; 1E6/(d-&gt;<a class="code" href="classVoxel_1_1Frame.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a> - lastTimeStamp) &lt;&lt; <span class="stringliteral">&quot; fps)&quot;</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    lastTimeStamp = d-&gt;<a class="code" href="classVoxel_1_1Frame.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">    std::cout &lt;&lt; &quot;Sizeof(timestamp) = &quot; &lt;&lt; sizeof(d-&gt;timestamp)</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">      &lt;&lt; &quot;\nsizeof(id) = &quot; &lt;&lt; sizeof(d-&gt;id)</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">      &lt;&lt; &quot;\nsizeof(phase[0]) = &quot; &lt;&lt; sizeof(uint16_t)</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">      &lt;&lt; &quot;\n&amp;phase[0] = 0x&quot; &lt;&lt; std::hex &lt;&lt; (unsigned long)&amp;d-&gt;phase()[0]</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">      &lt;&lt; &quot;\n&amp;phase[1] = 0x&quot; &lt;&lt; std::hex &lt;&lt; (unsigned long)&amp;((uint16_t *)d-&gt;phase())[1]</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">      &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">      */</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">if</span>(d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ab66f7bd205a6a5c16b0a47aedc00a7b4">phase</a>())</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      f.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ab66f7bd205a6a5c16b0a47aedc00a7b4">phase</a>(), d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#af3fb7938e3e76c26299efe07f69d406f">phaseWordWidth</a>()*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a>*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">if</span>(d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#a38cdfc04eef41661cdcaec4c0870e687">amplitude</a>())</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      f.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#a38cdfc04eef41661cdcaec4c0870e687">amplitude</a>(), d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#af85f22109d62a47ec5843437558fa90c">amplitudeWordWidth</a>()*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a>*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">if</span>(d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#a62d21aa88579379c97a51b40ff370f05">ambient</a>())</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      f.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#a62d21aa88579379c97a51b40ff370f05">ambient</a>(), d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#a71129221a2aadc0e1ca8551ac11ef5cd">ambientWordWidth</a>()*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a>*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">if</span>(d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#abc808bba1a6289d3e95e790104d6c80f">flags</a>())</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      f.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#abc808bba1a6289d3e95e790104d6c80f">flags</a>(), d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#a7f51f217b13dddc61ceec2270dbfcf2f">flagsWordWidth</a>()*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a>*d-&gt;<a class="code" href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="classVoxel_1_1FrameSize.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    count++;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">if</span>(count &gt;= frameCount)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      dc.<a class="code" href="classVoxel_1_1DepthCamera.xhtml#a1373f05cc4d5bacd063a409d68c6b0c8">stop</a>();</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  });</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">//   depthCamera-&gt;registerCallback(DepthCamera::FRAME_DEPTH_FRAME, [&amp;](DepthCamera &amp;dc, const Frame &amp;frame, DepthCamera::FrameType c) {</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">//     const DepthFrame *d = dynamic_cast&lt;const DepthFrame *&gt;(&amp;frame);</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">//     if(!d)</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">//     {</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">//       std::cout &lt;&lt; &quot;Null frame captured? or not of type DepthFrame&quot; &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">//       return;</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">//     }</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">//     std::cout &lt;&lt; &quot;Capture frame &quot; &lt;&lt; d-&gt;id &lt;&lt; &quot;@&quot; &lt;&lt; d-&gt;timestamp;</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">//     if(lastTimeStamp != 0)</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">//       std::cout &lt;&lt; &quot; (&quot; &lt;&lt; 1E6/(d-&gt;timestamp - lastTimeStamp) &lt;&lt; &quot; fps)&quot;;</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">//     std::cout &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">//     lastTimeStamp = d-&gt;timestamp;</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">//     f.write((char *)d-&gt;depth.data(), sizeof(float)*d-&gt;size.width*d-&gt;size.height);</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">//     f.write((char *)d-&gt;amplitude.data(), sizeof(float)*d-&gt;size.width*d-&gt;size.height);</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">//     count++;</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">//     </span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">//     if(count &gt;= frameCount)</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">//       dc.stop();</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">//   });</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="comment">//depthCamera-&gt;registerCallback(DepthCamera::FRAME_XYZI_POINT_CLOUD_FRAME, [&amp;](DepthCamera &amp;dc, const Frame &amp;frame, DepthCamera::FrameType c) {</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="comment">//  const XYZIPointCloudFrame *d = dynamic_cast&lt;const XYZIPointCloudFrame *&gt;(&amp;frame);</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="comment">//  if(!d)</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="comment">//  {</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="comment">//    std::cout &lt;&lt; &quot;Null frame captured? or not of type XYZIPointCloudFrame&quot; &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="comment">//    return;</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="comment">//  }</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="comment">//  std::cout &lt;&lt; &quot;Capture frame &quot; &lt;&lt; d-&gt;id &lt;&lt; &quot;@&quot; &lt;&lt; d-&gt;timestamp;</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="comment">//  if(lastTimeStamp != 0)</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="comment">//    std::cout &lt;&lt; &quot; (&quot; &lt;&lt; 1E6/(d-&gt;timestamp - lastTimeStamp) &lt;&lt; &quot; fps)&quot;;</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  <span class="comment">//  std::cout &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  <span class="comment">//  lastTimeStamp = d-&gt;timestamp;</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <span class="comment">//  f.write((char *)d-&gt;points.data(), sizeof(IntensityPoint)*d-&gt;points.size());</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  <span class="comment">//  count++;</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="comment">//  </span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="comment">//  if(count &gt;= frameCount)</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <span class="comment">//    dc.stop();</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  <span class="comment">//});</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  </div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="keywordflow">if</span>(depthCamera-&gt;start())</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="classVoxel_1_1FrameRate.xhtml">FrameRate</a> <a class="code" href="namespaceCameraSystemIQFrameTest.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordflow">if</span>(depthCamera-&gt;getFrameRate(r))</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;Capturing at a frame rate of &quot;</span> &lt;&lt; r.<a class="code" href="classVoxel_1_1FrameRate.xhtml#aad990de42e35d9c41ced1d4104e64c27">getFrameRate</a>() &lt;&lt; <span class="stringliteral">&quot; fps&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    depthCamera-&gt;wait();</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not start the depth camera &quot;</span> &lt;&lt; depthCamera-&gt;id() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}<div class="ttc" id="classVoxel_1_1Frame_xhtml"><div class="ttname"><a href="classVoxel_1_1Frame.xhtml">Voxel::Frame</a></div><div class="ttdef"><b>Definition:</b> <a href="Frame_8h_source.xhtml#l00026">Frame.h:26</a></div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_a62d21aa88579379c97a51b40ff370f05"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#a62d21aa88579379c97a51b40ff370f05">Voxel::ToFRawFrame::ambient</a></div><div class="ttdeci">virtual const uint8_t * ambient() const =0</div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_ae7af388081471b5a1218a6b19f889fa5"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#ae7af388081471b5a1218a6b19f889fa5">Voxel::ToFRawFrame::size</a></div><div class="ttdeci">FrameSize size</div><div class="ttdef"><b>Definition:</b> <a href="Frame_8h_source.xhtml#l00191">Frame.h:191</a></div></div>
<div class="ttc" id="classVoxel_1_1USBDevice_xhtml_ad7edff89623a9ecf8a2840b5181c67ac"><div class="ttname"><a href="classVoxel_1_1USBDevice.xhtml#ad7edff89623a9ecf8a2840b5181c67ac">Voxel::USBDevice::vendorID</a></div><div class="ttdeci">uint16_t vendorID() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00090">Device.h:90</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1USBDevice_xhtml_a733db00843f6522b28a07719c943e1fe"><div class="ttname"><a href="classVoxel_1_1USBDevice.xhtml#a733db00843f6522b28a07719c943e1fe">Voxel::USBDevice::productID</a></div><div class="ttdeci">uint16_t productID() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00091">Device.h:91</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00021">CameraSystemTest.cpp:21</a></div></div>
<div class="ttc" id="classVoxel_1_1CameraSystem_xhtml_ab685fb4639d124ee11aa7cd64ab02f00"><div class="ttname"><a href="classVoxel_1_1CameraSystem.xhtml#ab685fb4639d124ee11aa7cd64ab02f00">Voxel::CameraSystem::connect</a></div><div class="ttdeci">DepthCameraPtr connect(const DevicePtr &amp;device)</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystem_8cpp_source.xhtml#l00274">CameraSystem.cpp:274</a></div></div>
<div class="ttc" id="classVoxel_1_1Frame_xhtml_a8339cded2671a836fdfd1b9f8b4e3a22"><div class="ttname"><a href="classVoxel_1_1Frame.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">Voxel::Frame::id</a></div><div class="ttdeci">int id</div><div class="ttdef"><b>Definition:</b> <a href="Frame_8h_source.xhtml#l00030">Frame.h:30</a></div></div>
<div class="ttc" id="namespaceCameraSystemIQFrameTest_xhtml_ac2abb9d1e1e9e639f1bd83f5342d44c2"><div class="ttname"><a href="namespaceCameraSystemIQFrameTest.xhtml#ac2abb9d1e1e9e639f1bd83f5342d44c2">CameraSystemIQFrameTest.count</a></div><div class="ttdeci">tuple count</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemIQFrameTest_8py_source.xhtml#l00030">CameraSystemIQFrameTest.py:30</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga8a21cf7475356ae552da8952ebf885b4"><div class="ttname"><a href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Voxel::Vector</a></div><div class="ttdeci">std::vector&lt; T &gt; Vector</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00051">Common.h:51</a></div></div>
<div class="ttc" id="group__Util_xhtml_gadd67e5b1a02a8a07764793e4598922d4"><div class="ttname"><a href="group__Util.xhtml#gadd67e5b1a02a8a07764793e4598922d4">Voxel::split</a></div><div class="ttdeci">void split(const String &amp;str, const char delimiter, Vector&lt; String &gt; &amp;split)</div><div class="ttdef"><b>Definition:</b> <a href="Common_8cpp_source.xhtml#l00041">Common.cpp:41</a></div></div>
<div class="ttc" id="classVoxel_1_1FrameRate_xhtml_aad990de42e35d9c41ced1d4104e64c27"><div class="ttname"><a href="classVoxel_1_1FrameRate.xhtml#aad990de42e35d9c41ced1d4104e64c27">Voxel::FrameRate::getFrameRate</a></div><div class="ttdeci">float getFrameRate() const </div><div class="ttdef"><b>Definition:</b> <a href="VideoMode_8h_source.xhtml#l00056">VideoMode.h:56</a></div></div>
<div class="ttc" id="classVoxel_1_1Ptr_xhtml"><div class="ttname"><a href="classVoxel_1_1Ptr.xhtml">Voxel::Ptr&lt; Device &gt;</a></div></div>
<div class="ttc" id="classVoxel_1_1FrameSize_xhtml_ac3d47cd9b7887dc3de31d95c7b39e8a7"><div class="ttname"><a href="classVoxel_1_1FrameSize.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">Voxel::FrameSize::width</a></div><div class="ttdeci">uint32_t width</div><div class="ttdef"><b>Definition:</b> <a href="VideoMode_8h_source.xhtml#l00022">VideoMode.h:22</a></div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_af85f22109d62a47ec5843437558fa90c"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#af85f22109d62a47ec5843437558fa90c">Voxel::ToFRawFrame::amplitudeWordWidth</a></div><div class="ttdeci">virtual SizeType amplitudeWordWidth() const =0</div></div>
<div class="ttc" id="classVoxel_1_1CameraSystem_xhtml_a5c6f46b1446564f205e75d0e21c10f15"><div class="ttname"><a href="classVoxel_1_1CameraSystem.xhtml#a5c6f46b1446564f205e75d0e21c10f15">Voxel::CameraSystem::createFilter</a></div><div class="ttdeci">FilterPtr createFilter(const String &amp;name, DepthCamera::FrameType type)</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystem_8cpp_source.xhtml#l00307">CameraSystem.cpp:307</a></div></div>
<div class="ttc" id="classVoxel_1_1FrameSize_xhtml_ae6de6f5d7fed5fd0af1985f86e3b9e55"><div class="ttname"><a href="classVoxel_1_1FrameSize.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">Voxel::FrameSize::height</a></div><div class="ttdeci">uint32_t height</div><div class="ttdef"><b>Definition:</b> <a href="VideoMode_8h_source.xhtml#l00022">VideoMode.h:22</a></div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_abc808bba1a6289d3e95e790104d6c80f"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#abc808bba1a6289d3e95e790104d6c80f">Voxel::ToFRawFrame::flags</a></div><div class="ttdeci">virtual const uint8_t * flags() const =0</div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_af5b725547c816ee4bac357b3ff049a80"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#af5b725547c816ee4bac357b3ff049a80">Voxel::Device::serialNumber</a></div><div class="ttdeci">const String &amp; serialNumber() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00069">Device.h:69</a></div></div>
<div class="ttc" id="classVector_3_01String_01_4_xhtml"><div class="ttname"><a href="classVector_3_01String_01_4.xhtml">Vector&lt; String &gt;</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00025">CameraSystemTest.cpp:25</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_a97ee70a8770dc30d06c744b24eb2fcfc"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a></div><div class="ttdeci">void help()</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00038">CameraSystemTest.cpp:38</a></div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_a71129221a2aadc0e1ca8551ac11ef5cd"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#a71129221a2aadc0e1ca8551ac11ef5cd">Voxel::ToFRawFrame::ambientWordWidth</a></div><div class="ttdeci">virtual SizeType ambientWordWidth() const =0</div></div>
<div class="ttc" id="classVoxel_1_1CameraSystem_xhtml_ad26fad5d70ee748d0492184da757d5be"><div class="ttname"><a href="classVoxel_1_1CameraSystem.xhtml#ad26fad5d70ee748d0492184da757d5be">Voxel::CameraSystem::scan</a></div><div class="ttdeci">Vector&lt; DevicePtr &gt; scan()</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystem_8cpp_source.xhtml#l00240">CameraSystem.cpp:240</a></div></div>
<div class="ttc" id="namespaceCameraSystemIQFrameTest_xhtml_ae528fef9708d21ddd76aa92607569cff"><div class="ttname"><a href="namespaceCameraSystemIQFrameTest.xhtml#ae528fef9708d21ddd76aa92607569cff">CameraSystemIQFrameTest.frameCount</a></div><div class="ttdeci">int frameCount</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemIQFrameTest_8py_source.xhtml#l00022">CameraSystemIQFrameTest.py:22</a></div></div>
<div class="ttc" id="classVoxel_1_1Frame_xhtml_a9f3af1ab3238ed9815daa019c2fc681f"><div class="ttname"><a href="classVoxel_1_1Frame.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">Voxel::Frame::timestamp</a></div><div class="ttdeci">TimeStampType timestamp</div><div class="ttdef"><b>Definition:</b> <a href="Frame_8h_source.xhtml#l00029">Frame.h:29</a></div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_af3fb7938e3e76c26299efe07f69d406f"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#af3fb7938e3e76c26299efe07f69d406f">Voxel::ToFRawFrame::phaseWordWidth</a></div><div class="ttdeci">virtual SizeType phaseWordWidth() const =0</div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_a38cdfc04eef41661cdcaec4c0870e687"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#a38cdfc04eef41661cdcaec4c0870e687">Voxel::ToFRawFrame::amplitude</a></div><div class="ttdeci">virtual const uint8_t * amplitude() const =0</div></div>
<div class="ttc" id="classVoxel_1_1Logger_xhtml_a24cc93971582344584a5c9064d897cbe"><div class="ttname"><a href="classVoxel_1_1Logger.xhtml#a24cc93971582344584a5c9064d897cbe">Voxel::Logger::setDefaultLogLevel</a></div><div class="ttdeci">void setDefaultLogLevel(LogLevel loglevel)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00110">Logger.h:110</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_a7055ab3ff9a1857b4a934d2523cae5d2"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a></div><div class="ttdeci">Vector&lt; CSimpleOpt::SOption &gt; argumentSpecifications</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00028">CameraSystemTest.cpp:28</a></div></div>
<div class="ttc" id="classVoxel_1_1DepthCamera_xhtml_a1373f05cc4d5bacd063a409d68c6b0c8"><div class="ttname"><a href="classVoxel_1_1DepthCamera.xhtml#a1373f05cc4d5bacd063a409d68c6b0c8">Voxel::DepthCamera::stop</a></div><div class="ttdeci">bool stop()</div><div class="ttdef"><b>Definition:</b> <a href="DepthCamera_8cpp_source.xhtml#l00336">DepthCamera.cpp:336</a></div></div>
<div class="ttc" id="namespaceCameraSystemIQFrameTest_xhtml_a56ca3083cd3df8d8feeac39ad5d44478"><div class="ttname"><a href="namespaceCameraSystemIQFrameTest.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">CameraSystemIQFrameTest.r</a></div><div class="ttdeci">tuple r</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemIQFrameTest_8py_source.xhtml#l00018">CameraSystemIQFrameTest.py:18</a></div></div>
<div class="ttc" id="namespaceCameraSystemTest_xhtml_a08de9201448d0d16e6d0293a288b965c"><div class="ttname"><a href="namespaceCameraSystemTest.xhtml#a08de9201448d0d16e6d0293a288b965c">CameraSystemTest.sys</a></div><div class="ttdeci">tuple sys</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8py_source.xhtml#l00010">CameraSystemTest.py:10</a></div></div>
<div class="ttc" id="namespaceCameraSystemTest_xhtml_a9e6d1e12787c05f7e4190828d4d2bfa5"><div class="ttname"><a href="namespaceCameraSystemTest.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">CameraSystemTest.devices</a></div><div class="ttdeci">tuple devices</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8py_source.xhtml#l00012">CameraSystemTest.py:12</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00022">CameraSystemTest.cpp:22</a></div></div>
<div class="ttc" id="classVoxel_1_1CameraSystem_xhtml"><div class="ttname"><a href="classVoxel_1_1CameraSystem.xhtml">Voxel::CameraSystem</a></div><div class="ttdoc">This class provides ways to instantiate individual cameras and components like filters. </div><div class="ttdef"><b>Definition:</b> <a href="CameraSystem_8h_source.xhtml#l00028">CameraSystem.h:28</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00023">CameraSystemTest.cpp:23</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="classVoxel_1_1DepthCamera_xhtml_a894e0d17fd2315cf1eedc1cb60114a91"><div class="ttname"><a href="classVoxel_1_1DepthCamera.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">Voxel::DepthCamera::FrameType</a></div><div class="ttdeci">FrameType</div><div class="ttdef"><b>Definition:</b> <a href="DepthCamera_8h_source.xhtml#l00044">DepthCamera.h:44</a></div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_ab66f7bd205a6a5c16b0a47aedc00a7b4"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#ab66f7bd205a6a5c16b0a47aedc00a7b4">Voxel::ToFRawFrame::phase</a></div><div class="ttdeci">virtual const uint8_t * phase() const =0</div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml_a7f51f217b13dddc61ceec2270dbfcf2f"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml#a7f51f217b13dddc61ceec2270dbfcf2f">Voxel::ToFRawFrame::flagsWordWidth</a></div><div class="ttdeci">virtual SizeType flagsWordWidth() const =0</div></div>
<div class="ttc" id="classVoxel_1_1ToFRawFrame_xhtml"><div class="ttname"><a href="classVoxel_1_1ToFRawFrame.xhtml">Voxel::ToFRawFrame</a></div><div class="ttdef"><b>Definition:</b> <a href="Frame_8h_source.xhtml#l00168">Frame.h:168</a></div></div>
<div class="ttc" id="classVoxel_1_1DepthCamera_xhtml"><div class="ttname"><a href="classVoxel_1_1DepthCamera.xhtml">Voxel::DepthCamera</a></div><div class="ttdoc">This is primary class which provides API for a depth camera. </div><div class="ttdef"><b>Definition:</b> <a href="DepthCamera_8h_source.xhtml#l00041">DepthCamera.h:41</a></div></div>
<div class="ttc" id="classVoxel_1_1FrameRate_xhtml"><div class="ttname"><a href="classVoxel_1_1FrameRate.xhtml">Voxel::FrameRate</a></div><div class="ttdef"><b>Definition:</b> <a href="VideoMode_8h_source.xhtml#l00051">VideoMode.h:51</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00024">CameraSystemTest.cpp:24</a></div></div>
<div class="ttc" id="classString_xhtml"><div class="ttname"><a href="classString.xhtml">String</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">Voxel::LOG_INFO</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00029">Logger.h:29</a></div></div>
<div class="ttc" id="classVoxel_1_1USBDevice_xhtml"><div class="ttname"><a href="classVoxel_1_1USBDevice.xhtml">Voxel::USBDevice</a></div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00081">Device.h:81</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga336d5597ccfb20c79696370b1982dc0e"><div class="ttname"><a href="group__Util.xhtml#ga336d5597ccfb20c79696370b1982dc0e">Voxel::TimeStampType</a></div><div class="ttdeci">uint64_t TimeStampType</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00087">Common.h:87</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="CameraSystemTest_8cpp_a0ddf1224851353fc92bfbff6f499fa97_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a7055ab3ff9a1857b4a934d2523cae5d2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector</a>&lt;CSimpleOpt::SOption&gt; argumentSpecifications</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= </div>
<div class="line">{</div>
<div class="line">  { <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a>,    <span class="stringliteral">&quot;-v&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;Vendor ID of the USB device (hexadecimal)&quot;</span>}, </div>
<div class="line">  { <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a>,   <span class="stringliteral">&quot;-p&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;Comma separated list of Product IDs of the USB devices (hexadecimal)&quot;</span>},</div>
<div class="line">  { <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a>,<span class="stringliteral">&quot;-s&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;Serial number of the USB device (string)&quot;</span>},</div>
<div class="line">  { <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a>,    <span class="stringliteral">&quot;-f&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;Name of the file to dump extracted frames&quot;</span>},</div>
<div class="line">  { <a class="code" href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a>,<span class="stringliteral">&quot;-n&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;Number of frames to dump [default = 1]&quot;</span>},</div>
<div class="line">  SO_END_OF_OPTIONS</div>
<div class="line">}</div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a9fe07086ac9a218e8214ba9e7a5f7933">VENDOR_ID</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00021">CameraSystemTest.cpp:21</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a02a6463b7b0ad6c54fe9fb086ff0a309">NUM_OF_FRAMES</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00025">CameraSystemTest.cpp:25</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a6c2d445571c53a6ffaa9ad9e84258e6b">PRODUCT_ID</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00022">CameraSystemTest.cpp:22</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a25734c5e0c2fb6b8926173f93f5c220f">SERIAL_NUMBER</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00023">CameraSystemTest.cpp:23</a></div></div>
<div class="ttc" id="CameraSystemTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1"><div class="ttname"><a href="CameraSystemTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a67e873a81d8f27aa49d42cf766d23dd1">DUMP_FILE</a></div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8cpp_source.xhtml#l00024">CameraSystemTest.cpp:24</a></div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="CameraSystemTest_8cpp_source.xhtml">CameraSystemTest.cpp</a>.</p>

<p>Referenced by <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00038">help()</a>, and <a class="el" href="CameraSystemTest_8cpp_source.xhtml#l00052">main()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:57 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
