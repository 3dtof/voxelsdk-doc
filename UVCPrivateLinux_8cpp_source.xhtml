<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: UVCPrivateLinux.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_e7f07c35b19a6de9638fcd101b463d91.xhtml">Voxel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">UVCPrivateLinux.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="UVCPrivateLinux_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="UVCPrivateLinux_8h.xhtml">UVCPrivateLinux.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Logger_8h.xhtml">Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="USBSystem_8h.xhtml">USBSystem.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;sys/ioctl.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;fcntl.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;assert.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;sys/mman.h&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="UVCPrivateLinux_8cpp.xhtml#a72adfebf536e0736ab2890d4ce7c91ff">   20</a></span>&#160;<span class="preprocessor">#define FD_RETRY_LIMIT 4</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span>Voxel</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#a5e584c0562a1b961efff1311bf2c23a0">   25</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a5e584c0562a1b961efff1311bf2c23a0">UVCPrivate::xioctl</a>(<span class="keywordtype">int</span> request, <span class="keywordtype">void</span> *arg)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#ad73d47e04feb7261cb7dcfb17f361012">isInitialized</a>())</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordtype">int</span> ret = 0;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">int</span> tries = <a class="code" href="UVCPrivateLinux_8cpp.xhtml#a72adfebf536e0736ab2890d4ce7c91ff">FD_RETRY_LIMIT</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordflow">do</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    ret = ioctl(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a>, request, arg);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordflow">while</span>(ret &amp;&amp; tries-- &amp;&amp; ((errno == EINTR) || (errno == EAGAIN) || (errno == ETIMEDOUT)));</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordflow">if</span> (ret &amp;&amp; (tries &lt;= 0)) </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;UVC: ioctl (&quot;</span> &lt;&lt; request &lt;&lt; <span class="stringliteral">&quot;) retried &quot;</span> &lt;&lt; <a class="code" href="UVCPrivateLinux_8cpp.xhtml#a72adfebf536e0736ab2890d4ce7c91ff">FD_RETRY_LIMIT</a> &lt;&lt; <span class="stringliteral">&quot; times - giving up: &quot;</span> &lt;&lt; strerror(errno) &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordflow">return</span> ret;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#adaa19899667b765114e7d1c7bc331c51">   46</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#adaa19899667b765114e7d1c7bc331c51">UVCPrivate::read</a>(uint8_t *buffer, std::size_t size)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#ad73d47e04feb7261cb7dcfb17f361012">isInitialized</a>())</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  int64_t toRead = size;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  int64_t bytesRead;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">int</span> retryCount = 0;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">while</span>(toRead &gt; 0)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    bytesRead = <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#adaa19899667b765114e7d1c7bc331c51">::read</a>(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a>, (<span class="keywordtype">void</span> *)(buffer + (size - toRead)), toRead);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span>(bytesRead &gt; 0)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      toRead -= bytesRead;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      retryCount = 0;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(bytesRead == -1) <span class="comment">// error condition</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordflow">if</span>(errno == EAGAIN || errno == EWOULDBLOCK)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        retryCount++;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">if</span>(retryCount &lt; <a class="code" href="UVCPrivateLinux_8cpp.xhtml#a72adfebf536e0736ab2890d4ce7c91ff">FD_RETRY_LIMIT</a>)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;          <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;UVC: Hit maximum number (&quot;</span> &lt;&lt; <a class="code" href="UVCPrivateLinux_8cpp.xhtml#a72adfebf536e0736ab2890d4ce7c91ff">FD_RETRY_LIMIT</a> &lt;&lt; <span class="stringliteral">&quot;) of retries to read data&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  assert(toRead == 0);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#a65de4f7db3e591b00d883bdb454dc91b">   90</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a65de4f7db3e591b00d883bdb454dc91b">UVCPrivate::mmap</a>(uint32_t offset, <a class="code" href="classVoxel_1_1UVCRawData.xhtml">UVCRawData</a> &amp;data)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#ad73d47e04feb7261cb7dcfb17f361012">isInitialized</a>())</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">void</span> *d = <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a65de4f7db3e591b00d883bdb454dc91b">::mmap</a>(NULL <span class="comment">/* start anywhere */</span>,</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    data.<a class="code" href="classVoxel_1_1UVCRawData.xhtml#af29ddb8e659aa3561838f0e6adcbd019">size</a>,</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    PROT_READ | PROT_WRITE <span class="comment">/* required */</span>,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    MAP_SHARED <span class="comment">/* recommended */</span>,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a>, offset);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordflow">if</span>(d == MAP_FAILED)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  data.<a class="code" href="classVoxel_1_1UVCRawData.xhtml#a0548a46878d3fc00a0d2a987cc302c72">data</a> = <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;ByteType&gt;</a>((<a class="code" href="group__Util.xhtml#ga4a84235fd75760811d3cbb1d041fb583">ByteType</a> *)d, [](<a class="code" href="group__Util.xhtml#ga4a84235fd75760811d3cbb1d041fb583">ByteType</a> *){}); <span class="comment">// encasing in Ptr&lt;&gt; with a null deleter</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a5cf7ed47206ef5d35d69acb22f9a1c28">_mappedRawData</a>.push_back(data);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#a1e7cf68537d45b5a2ee0368fe79b1217">  110</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a1e7cf68537d45b5a2ee0368fe79b1217">UVCPrivate::_munmap</a>(<a class="code" href="classVoxel_1_1UVCRawData.xhtml">UVCRawData</a> &amp;data)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#ad73d47e04feb7261cb7dcfb17f361012">isInitialized</a>())</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  return ::munmap((<span class="keywordtype">void</span> *)&amp;*data.<a class="code" href="classVoxel_1_1UVCRawData.xhtml#a0548a46878d3fc00a0d2a987cc302c72">data</a>, data.<a class="code" href="classVoxel_1_1UVCRawData.xhtml#af29ddb8e659aa3561838f0e6adcbd019">size</a>) == -1;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#af5327fac72097d4f50d7970dc99bad04">  118</a></span>&#160;<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#af5327fac72097d4f50d7970dc99bad04">UVCPrivate::UVCPrivate</a>(<a class="code" href="classVoxel_1_1Ptr.xhtml">DevicePtr</a> usb): _usb(usb), _fd(-1)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <a class="code" href="classVoxel_1_1USBSystem.xhtml">USBSystem</a> <a class="code" href="namespaceCameraSystemTest.xhtml#a08de9201448d0d16e6d0293a288b965c">sys</a>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordflow">if</span>(usb-&gt;interfaceID() != <a class="code" href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Device::USB</a>)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#aed5652da8800d710b5f79bc4ff5138fd">_deviceNode</a> = sys.<a class="code" href="classVoxel_1_1USBSystem.xhtml#a9150d69d5e3e64e2c9c8839ada21312d">getDeviceNode</a>((<a class="code" href="classVoxel_1_1USBDevice.xhtml">USBDevice</a> &amp;)*usb);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#aed5652da8800d710b5f79bc4ff5138fd">_deviceNode</a>.size() &gt; 0)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;UVC: Connecting to UVC device &#39;&quot;</span> &lt;&lt; <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#aed5652da8800d710b5f79bc4ff5138fd">_deviceNode</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a> = open(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#aed5652da8800d710b5f79bc4ff5138fd">_deviceNode</a>.c_str(), O_RDWR | O_NONBLOCK);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a> == -1)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not open device node &quot;</span> &lt;&lt; <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#aed5652da8800d710b5f79bc4ff5138fd">_deviceNode</a> &lt;&lt; <span class="stringliteral">&quot;. Please check for permissions.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not located device node for &quot;</span> &lt;&lt; <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#aa0d2584a3b2d1c16a3df84fdf05456f4">_usb</a>-&gt;id() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#abb6a4b6de701cd0f92007c5310929e9c">  140</a></span>&#160;<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#abb6a4b6de701cd0f92007c5310929e9c">UVCPrivate::~UVCPrivate</a>()</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a> &gt;= 0)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a11f2c68472cc8a88d395ca1bf1fc46f0">clearMMap</a>();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    close(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a> = 0;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#a11f2c68472cc8a88d395ca1bf1fc46f0">  151</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a11f2c68472cc8a88d395ca1bf1fc46f0">UVCPrivate::clearMMap</a>()</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#ad73d47e04feb7261cb7dcfb17f361012">isInitialized</a>() &amp;&amp; <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a5cf7ed47206ef5d35d69acb22f9a1c28">_mappedRawData</a>.size() &gt; 0)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = 0; i &lt; <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a5cf7ed47206ef5d35d69acb22f9a1c28">_mappedRawData</a>.size(); i++)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a1e7cf68537d45b5a2ee0368fe79b1217">_munmap</a>(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a5cf7ed47206ef5d35d69acb22f9a1c28">_mappedRawData</a>[i]);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#a5cf7ed47206ef5d35d69acb22f9a1c28">_mappedRawData</a>.clear();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classVoxel_1_1UVCPrivate.xhtml#abc1aef0befef8a9c705057755c40de9f">  164</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1UVCPrivate.xhtml#abc1aef0befef8a9c705057755c40de9f">UVCPrivate::isReadReady</a>(<a class="code" href="group__Util.xhtml#ga336d5597ccfb20c79696370b1982dc0e">TimeStampType</a> timeout, <span class="keywordtype">bool</span> &amp;timedOut)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  timedOut = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#ad73d47e04feb7261cb7dcfb17f361012">isInitialized</a>())</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordflow">while</span>(1)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    fd_set fds;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">struct </span>timeval tv;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceCameraSystemIQFrameTest.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    FD_ZERO(&amp;fds);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    FD_SET(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a>, &amp;fds);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment">/* Timeout. */</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    tv.tv_sec = timeout/1000;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    tv.tv_usec = (timeout % 1000)*1000;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    r = select(<a class="code" href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">_fd</a> + 1, &amp;fds, NULL, NULL, &amp;tv);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">if</span>(r == -1)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordflow">if</span>(EINTR == errno)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">if</span>(r == 0)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      timedOut = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_ad73d47e04feb7261cb7dcfb17f361012"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#ad73d47e04feb7261cb7dcfb17f361012">Voxel::UVCPrivate::isInitialized</a></div><div class="ttdeci">bool isInitialized()</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8h_source.xhtml#l00039">UVCPrivateLinux.h:39</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_abc1aef0befef8a9c705057755c40de9f"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#abc1aef0befef8a9c705057755c40de9f">Voxel::UVCPrivate::isReadReady</a></div><div class="ttdeci">bool isReadReady(TimeStampType timeout, bool &amp;timedOut)</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00164">UVCPrivateLinux.cpp:164</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCRawData_xhtml_af29ddb8e659aa3561838f0e6adcbd019"><div class="ttname"><a href="classVoxel_1_1UVCRawData.xhtml#af29ddb8e659aa3561838f0e6adcbd019">Voxel::UVCRawData::size</a></div><div class="ttdeci">std::size_t size</div><div class="ttdef"><b>Definition:</b> <a href="UVC_8h_source.xhtml#l00025">UVC.h:25</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_af5327fac72097d4f50d7970dc99bad04"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#af5327fac72097d4f50d7970dc99bad04">Voxel::UVCPrivate::UVCPrivate</a></div><div class="ttdeci">UVCPrivate(DevicePtr usb)</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00118">UVCPrivateLinux.cpp:118</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Voxel::Device::USB</a></div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00024">Device.h:24</a></div></div>
<div class="ttc" id="classVoxel_1_1Ptr_xhtml"><div class="ttname"><a href="classVoxel_1_1Ptr.xhtml">Voxel::Ptr&lt; ByteType &gt;</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_afb3c64afa45673778dbdb2ae1ca5e59d"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#afb3c64afa45673778dbdb2ae1ca5e59d">Voxel::UVCPrivate::_fd</a></div><div class="ttdeci">int _fd</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8h_source.xhtml#l00028">UVCPrivateLinux.h:28</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga4a84235fd75760811d3cbb1d041fb583"><div class="ttname"><a href="group__Util.xhtml#ga4a84235fd75760811d3cbb1d041fb583">Voxel::ByteType</a></div><div class="ttdeci">uint8_t ByteType</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00086">Common.h:86</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_a5e584c0562a1b961efff1311bf2c23a0"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#a5e584c0562a1b961efff1311bf2c23a0">Voxel::UVCPrivate::xioctl</a></div><div class="ttdeci">int xioctl(int request, void *arg)</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00025">UVCPrivateLinux.cpp:25</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCRawData_xhtml"><div class="ttname"><a href="classVoxel_1_1UVCRawData.xhtml">Voxel::UVCRawData</a></div><div class="ttdef"><b>Definition:</b> <a href="UVC_8h_source.xhtml#l00021">UVC.h:21</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_aa0d2584a3b2d1c16a3df84fdf05456f4"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#aa0d2584a3b2d1c16a3df84fdf05456f4">Voxel::UVCPrivate::_usb</a></div><div class="ttdeci">DevicePtr _usb</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8h_source.xhtml#l00030">UVCPrivateLinux.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_aed5652da8800d710b5f79bc4ff5138fd"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#aed5652da8800d710b5f79bc4ff5138fd">Voxel::UVCPrivate::_deviceNode</a></div><div class="ttdeci">String _deviceNode</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8h_source.xhtml#l00029">UVCPrivateLinux.h:29</a></div></div>
<div class="ttc" id="Logger_8h_xhtml"><div class="ttname"><a href="Logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_a65de4f7db3e591b00d883bdb454dc91b"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#a65de4f7db3e591b00d883bdb454dc91b">Voxel::UVCPrivate::mmap</a></div><div class="ttdeci">bool mmap(uint32_t offset, UVCRawData &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00090">UVCPrivateLinux.cpp:90</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_a11f2c68472cc8a88d395ca1bf1fc46f0"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#a11f2c68472cc8a88d395ca1bf1fc46f0">Voxel::UVCPrivate::clearMMap</a></div><div class="ttdeci">bool clearMMap()</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00151">UVCPrivateLinux.cpp:151</a></div></div>
<div class="ttc" id="UVCPrivateLinux_8h_xhtml"><div class="ttname"><a href="UVCPrivateLinux_8h.xhtml">UVCPrivateLinux.h</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCRawData_xhtml_a0548a46878d3fc00a0d2a987cc302c72"><div class="ttname"><a href="classVoxel_1_1UVCRawData.xhtml#a0548a46878d3fc00a0d2a987cc302c72">Voxel::UVCRawData::data</a></div><div class="ttdeci">Ptr&lt; ByteType &gt; data</div><div class="ttdef"><b>Definition:</b> <a href="UVC_8h_source.xhtml#l00024">UVC.h:24</a></div></div>
<div class="ttc" id="UVCPrivateLinux_8cpp_xhtml_a72adfebf536e0736ab2890d4ce7c91ff"><div class="ttname"><a href="UVCPrivateLinux_8cpp.xhtml#a72adfebf536e0736ab2890d4ce7c91ff">FD_RETRY_LIMIT</a></div><div class="ttdeci">#define FD_RETRY_LIMIT</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00020">UVCPrivateLinux.cpp:20</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_abb6a4b6de701cd0f92007c5310929e9c"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#abb6a4b6de701cd0f92007c5310929e9c">Voxel::UVCPrivate::~UVCPrivate</a></div><div class="ttdeci">virtual ~UVCPrivate()</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00140">UVCPrivateLinux.cpp:140</a></div></div>
<div class="ttc" id="namespaceCameraSystemIQFrameTest_xhtml_a56ca3083cd3df8d8feeac39ad5d44478"><div class="ttname"><a href="namespaceCameraSystemIQFrameTest.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">CameraSystemIQFrameTest.r</a></div><div class="ttdeci">tuple r</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemIQFrameTest_8py_source.xhtml#l00018">CameraSystemIQFrameTest.py:18</a></div></div>
<div class="ttc" id="namespaceCameraSystemTest_xhtml_a08de9201448d0d16e6d0293a288b965c"><div class="ttname"><a href="namespaceCameraSystemTest.xhtml#a08de9201448d0d16e6d0293a288b965c">CameraSystemTest.sys</a></div><div class="ttdeci">tuple sys</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8py_source.xhtml#l00010">CameraSystemTest.py:10</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_a5cf7ed47206ef5d35d69acb22f9a1c28"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#a5cf7ed47206ef5d35d69acb22f9a1c28">Voxel::UVCPrivate::_mappedRawData</a></div><div class="ttdeci">Vector&lt; UVCRawData &gt; _mappedRawData</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8h_source.xhtml#l00032">UVCPrivateLinux.h:32</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="USBSystem_8h_xhtml"><div class="ttname"><a href="USBSystem_8h.xhtml">USBSystem.h</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystem_xhtml_a9150d69d5e3e64e2c9c8839ada21312d"><div class="ttname"><a href="classVoxel_1_1USBSystem.xhtml#a9150d69d5e3e64e2c9c8839ada21312d">Voxel::USBSystem::getDeviceNode</a></div><div class="ttdeci">String getDeviceNode(const USBDevice &amp;usbd)</div><div class="ttdef"><b>Definition:</b> <a href="USBSystem_8cpp_source.xhtml#l00056">USBSystem.cpp:56</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_adaa19899667b765114e7d1c7bc331c51"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#adaa19899667b765114e7d1c7bc331c51">Voxel::UVCPrivate::read</a></div><div class="ttdeci">bool read(uint8_t *buffer, std::size_t size)</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00046">UVCPrivateLinux.cpp:46</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystem_xhtml"><div class="ttname"><a href="classVoxel_1_1USBSystem.xhtml">Voxel::USBSystem</a></div><div class="ttdef"><b>Definition:</b> <a href="USBSystem_8h_source.xhtml#l00025">USBSystem.h:25</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCPrivate_xhtml_a1e7cf68537d45b5a2ee0368fe79b1217"><div class="ttname"><a href="classVoxel_1_1UVCPrivate.xhtml#a1e7cf68537d45b5a2ee0368fe79b1217">Voxel::UVCPrivate::_munmap</a></div><div class="ttdeci">bool _munmap(UVCRawData &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="UVCPrivateLinux_8cpp_source.xhtml#l00110">UVCPrivateLinux.cpp:110</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">Voxel::LOG_INFO</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00029">Logger.h:29</a></div></div>
<div class="ttc" id="classVoxel_1_1USBDevice_xhtml"><div class="ttname"><a href="classVoxel_1_1USBDevice.xhtml">Voxel::USBDevice</a></div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00081">Device.h:81</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga336d5597ccfb20c79696370b1982dc0e"><div class="ttname"><a href="group__Util.xhtml#ga336d5597ccfb20c79696370b1982dc0e">Voxel::TimeStampType</a></div><div class="ttdeci">uint64_t TimeStampType</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00087">Common.h:87</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:57 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
