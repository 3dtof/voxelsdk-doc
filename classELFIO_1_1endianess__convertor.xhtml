<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: ELFIO::endianess_convertor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceELFIO.xhtml">ELFIO</a></li><li class="navelem"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml">endianess_convertor</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classELFIO_1_1endianess__convertor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ELFIO::endianess_convertor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for ELFIO::endianess_convertor:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classELFIO_1_1endianess__convertor__coll__graph.svg" width="207" height="128"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af21212a47ab989a374a9a7dc610dc913"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#af21212a47ab989a374a9a7dc610dc913">endianess_convertor</a> ()</td></tr>
<tr class="separator:af21212a47ab989a374a9a7dc610dc913"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67d470a1b50e356dba4666781872a090"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a67d470a1b50e356dba4666781872a090">setup</a> (unsigned char elf_file_encoding)</td></tr>
<tr class="separator:a67d470a1b50e356dba4666781872a090"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac61eaaa10259a5ac9851dc31e4cd5788"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#ac61eaaa10259a5ac9851dc31e4cd5788">operator()</a> (uint64_t value) const </td></tr>
<tr class="separator:ac61eaaa10259a5ac9851dc31e4cd5788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26be52546459428a29905d3608ea4387"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a26be52546459428a29905d3608ea4387">operator()</a> (int64_t value) const </td></tr>
<tr class="separator:a26be52546459428a29905d3608ea4387"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96f8e83d0f479e2fb083270669b5396d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a96f8e83d0f479e2fb083270669b5396d">operator()</a> (uint32_t value) const </td></tr>
<tr class="separator:a96f8e83d0f479e2fb083270669b5396d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa06c82471ebf4bd42430f78346708679"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#aa06c82471ebf4bd42430f78346708679">operator()</a> (int32_t value) const </td></tr>
<tr class="separator:aa06c82471ebf4bd42430f78346708679"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9abedb0e4a81de10f3797d931ab8ead"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#ad9abedb0e4a81de10f3797d931ab8ead">operator()</a> (uint16_t value) const </td></tr>
<tr class="separator:ad9abedb0e4a81de10f3797d931ab8ead"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17703b2aaa2d4ef5fe8b5ffc6caa46cd"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a17703b2aaa2d4ef5fe8b5ffc6caa46cd">operator()</a> (int16_t value) const </td></tr>
<tr class="separator:a17703b2aaa2d4ef5fe8b5ffc6caa46cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ef2be6b589c14e899c0c9c566ea8c08"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a3ef2be6b589c14e899c0c9c566ea8c08">operator()</a> (int8_t value) const </td></tr>
<tr class="separator:a3ef2be6b589c14e899c0c9c566ea8c08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c463bdece3787cc56dd99227f6ba58c"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a4c463bdece3787cc56dd99227f6ba58c">operator()</a> (uint8_t value) const </td></tr>
<tr class="separator:a4c463bdece3787cc56dd99227f6ba58c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a1aa3942a43b432b529a376cc90b60870"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a1aa3942a43b432b529a376cc90b60870">get_host_encoding</a> () const </td></tr>
<tr class="separator:a1aa3942a43b432b529a376cc90b60870"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a3b88cd8032b58be92c178c88f7ff9192"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a></td></tr>
<tr class="separator:a3b88cd8032b58be92c178c88f7ff9192"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00061">61</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af21212a47ab989a374a9a7dc610dc913"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ELFIO::endianess_convertor::endianess_convertor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00064">64</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a1aa3942a43b432b529a376cc90b60870"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char ELFIO::endianess_convertor::get_host_encoding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00174">174</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elf__types_8hpp_source.xhtml#l00310">ELFDATA2LSB</a>, and <a class="el" href="elf__types_8hpp_source.xhtml#l00311">ELFDATA2MSB</a>.</p>

<p>Referenced by <a class="el" href="elfio__utils_8hpp_source.xhtml#l00071">setup()</a>.</p>
<div class="fragment"><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> tmp = 1;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">if</span> ( 1 == *(<span class="keywordtype">char</span>*)&amp;tmp ) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="elf__types_8hpp.xhtml#af66303c799da18c8aec282ea8592e7e7">ELFDATA2LSB</a>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="elf__types_8hpp.xhtml#a06385c3e5f0a3b62fae7f5e224e10f89">ELFDATA2MSB</a>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div>
<div class="ttc" id="elf__types_8hpp_xhtml_a06385c3e5f0a3b62fae7f5e224e10f89"><div class="ttname"><a href="elf__types_8hpp.xhtml#a06385c3e5f0a3b62fae7f5e224e10f89">ELFDATA2MSB</a></div><div class="ttdeci">#define ELFDATA2MSB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00311">elf_types.hpp:311</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af66303c799da18c8aec282ea8592e7e7"><div class="ttname"><a href="elf__types_8hpp.xhtml#af66303c799da18c8aec282ea8592e7e7">ELFDATA2LSB</a></div><div class="ttdeci">#define ELFDATA2LSB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00310">elf_types.hpp:310</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classELFIO_1_1endianess__convertor_a1aa3942a43b432b529a376cc90b60870_icgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ac61eaaa10259a5ac9851dc31e4cd5788"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00078">78</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>
<div class="fragment"><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> ) {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        value =</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            ( ( value &amp; 0x00000000000000FFull ) &lt;&lt; 56 ) |</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            ( ( value &amp; 0x000000000000FF00ull ) &lt;&lt; 40 ) |</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            ( ( value &amp; 0x0000000000FF0000ull ) &lt;&lt; 24 ) |</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            ( ( value &amp; 0x00000000FF000000ull ) &lt;&lt;  8 ) |</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            ( ( value &amp; 0x000000FF00000000ull ) &gt;&gt;  8 ) |</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            ( ( value &amp; 0x0000FF0000000000ull ) &gt;&gt; 24 ) |</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            ( ( value &amp; 0x00FF000000000000ull ) &gt;&gt; 40 ) |</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            ( ( value &amp; 0xFF00000000000000ull ) &gt;&gt; 56 );</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a26be52546459428a29905d3608ea4387"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00098">98</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> ) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span> (int64_t)(*this)( (uint64_t)value );</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a96f8e83d0f479e2fb083270669b5396d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00108">108</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> ) {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        value =</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            ( ( value &amp; 0x000000FF ) &lt;&lt; 24 ) |</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            ( ( value &amp; 0x0000FF00 ) &lt;&lt;  8 ) |</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            ( ( value &amp; 0x00FF0000 ) &gt;&gt;  8 ) |</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            ( ( value &amp; 0xFF000000 ) &gt;&gt; 24 );</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa06c82471ebf4bd42430f78346708679"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00124">124</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> ) {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">return</span> (int32_t)(*this)( (uint32_t)value );</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad9abedb0e4a81de10f3797d931ab8ead"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00134">134</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> ) {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        value =</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            ( ( value &amp; 0x00FF ) &lt;&lt;  8 ) |</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            ( ( value &amp; 0xFF00 ) &gt;&gt;  8 );</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a17703b2aaa2d4ef5fe8b5ffc6caa46cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00148">148</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> ) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">return</span> (int16_t)(*this)( (uint16_t)value );</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3ef2be6b589c14e899c0c9c566ea8c08"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00158">158</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4c463bdece3787cc56dd99227f6ba58c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t ELFIO::endianess_convertor::operator() </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00165">165</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a67d470a1b50e356dba4666781872a090"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ELFIO::endianess_convertor::setup </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>elf_file_encoding</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00071">71</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>References <a class="el" href="elfio__utils_8hpp_source.xhtml#l00174">get_host_encoding()</a>, and <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">need_conversion</a>.</p>

<p>Referenced by <a class="el" href="elfio_8hpp_source.xhtml#l00087">ELFIO::elfio::create()</a>, and <a class="el" href="elfio_8hpp_source.xhtml#l00108">ELFIO::elfio::load()</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">need_conversion</a> = ( elf_file_encoding != <a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a1aa3942a43b432b529a376cc90b60870">get_host_encoding</a>() );</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a1aa3942a43b432b529a376cc90b60870"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a1aa3942a43b432b529a376cc90b60870">ELFIO::endianess_convertor::get_host_encoding</a></div><div class="ttdeci">unsigned char get_host_encoding() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00174">elfio_utils.hpp:174</a></div></div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a3b88cd8032b58be92c178c88f7ff9192"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a3b88cd8032b58be92c178c88f7ff9192">ELFIO::endianess_convertor::need_conversion</a></div><div class="ttdeci">bool need_conversion</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00187">elfio_utils.hpp:187</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classELFIO_1_1endianess__convertor_a67d470a1b50e356dba4666781872a090_cgraph.svg" width="438" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classELFIO_1_1endianess__convertor_a67d470a1b50e356dba4666781872a090_icgraph.svg" width="558" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a3b88cd8032b58be92c178c88f7ff9192"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> ELFIO::endianess_convertor::need_conversion</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="elfio__utils_8hpp_source.xhtml#l00187">187</a> of file <a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a>.</p>

<p>Referenced by <a class="el" href="elfio__utils_8hpp_source.xhtml#l00064">endianess_convertor()</a>, <a class="el" href="elfio__utils_8hpp_source.xhtml#l00078">operator()()</a>, and <a class="el" href="elfio__utils_8hpp_source.xhtml#l00071">setup()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="elfio__utils_8hpp_source.xhtml">elfio_utils.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:58 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
