<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: VoxelXUProgrammer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_15084b10ffde3b770ebb4469406358eb.xhtml">TI3DToF</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">VoxelXUProgrammer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="VoxelXUProgrammer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="VoxelXUProgrammer_8h.xhtml">VoxelXUProgrammer.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Parameter_8h.xhtml">Parameter.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Logger_8h.xhtml">Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span>Voxel</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span>TI</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a59a73029b2d266a632379ba355b70276">   17</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a59a73029b2d266a632379ba355b70276">VoxelXUProgrammer::isInitialized</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordflow">return</span> (<span class="keywordtype">bool</span>)<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a4f056b71d80ee76eea0e8a160e256c4f">   22</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a4f056b71d80ee76eea0e8a160e256c4f">VoxelXUProgrammer::init</a>()</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a> = <a class="code" href="group__IO.xhtml#ga194c1465811304e3fa3458acca660cc4">UVCXUPtr</a>(<span class="keyword">new</span> <a class="code" href="classVoxel_1_1UVCXU.xhtml">UVCXU</a>(<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a2bc04ac3af8b7686363888ea5e533354">_device</a>, <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a8b22f80e6109c90d97ffa2a0970d919a">_XU_ID</a>));</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  uint8_t data[4];</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;getControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9ab2fd39ece70a6e2ccb34c03342917dda">CONTROL_GET_VERSION</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8">LOG_WARNING</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not get XU version.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a3437536ecce2a865222d364680b59766">_minorVersion</a> = data[0];</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#aa20346bae2a6dea68455e56fe2d58e61">_majorVersion</a> = data[1];</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: XU controller version &quot;</span> &lt;&lt; (<a class="code" href="classint.xhtml">int</a>)<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#aa20346bae2a6dea68455e56fe2d58e61">_majorVersion</a> &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; (<span class="keywordtype">int</span>)<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a3437536ecce2a865222d364680b59766">_minorVersion</a> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#ae09497186f540cf5abc81e55c4145bc7">   38</a></span>&#160;<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#ae09497186f540cf5abc81e55c4145bc7">VoxelXUProgrammer::VoxelXUProgrammer</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">SlaveAddressToByteMap</a> &amp;map, <a class="code" href="classVoxel_1_1Ptr.xhtml">DevicePtr</a> device): <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml">VoxelProgrammerBase</a>(map, device)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordflow">if</span>(device-&gt;interfaceID() != <a class="code" href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Device::USB</a>)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Invalid device.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a4f056b71d80ee76eea0e8a160e256c4f">init</a>();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#af00fab5c3d5ca655e93cbac9eedb2191">   49</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#af00fab5c3d5ca655e93cbac9eedb2191">VoxelXUProgrammer::_readRegister</a>(uint16_t slaveAddress, uint16_t registerAddress, uint32_t &amp;value, uint8_t length)<span class="keyword"> const</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  uint8_t addr[2];</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  addr[0] = slaveAddress;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  addr[1] = registerAddress;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;setControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a669794cd5bb82fbc0ec3642c77cdad8f">CONTROL_SET_READ_REGISTER</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(addr), addr))</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not set read register address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordflow">if</span>(length == 1) <span class="comment">// TPS -- addr[0] == 0x2D</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    uint8_t data[1];</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    data[0] = 0x0;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;getControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a819107c7722a8fc406eaa687112a4a30">CONTROL_READ_REGISTER_1</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    value = data[0];</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 3) <span class="comment">// ToF -- 0x58, 0x5C</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    uint8_t data[3];</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    data[0] = 0x0;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    data[1] = 0x0;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    data[2] = 0x0;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;getControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a598ca74d0319006a1d02cf22f4691e30">CONTROL_READ_REGISTER_3</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    value = data[0] + (data[1] &lt;&lt; 8) + (data[2] &lt;&lt; 16);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 2)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    uint8_t data[2];</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    data[0] = 0x0;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    data[1] = 0x0;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;getControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9ae3ebee1187fb4eaf63707afcd8bc0957">CONTROL_READ_REGISTER_2</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    value = data[0] + (data[1] &lt;&lt; 8);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Don&#39;t know how to read &#39;&quot;</span> &lt;&lt; std::dec &lt;&lt; length &lt;&lt; <span class="stringliteral">&quot;&#39; bytes. Required for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#ab14e92f7cb09cebb07f22e618b83ca10">  111</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#ab14e92f7cb09cebb07f22e618b83ca10">VoxelXUProgrammer::_writeRegister</a>(uint16_t slaveAddress, uint16_t registerAddress, uint32_t value, uint8_t length)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">if</span>(length == 1) <span class="comment">// TPS  -- slaveAddress == 0x2D</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    uint8_t data[3];</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    data[0] = slaveAddress;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    data[1] = registerAddress;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    data[2] = value &amp; 0xFF;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;setControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a055884ad4628e392fdc7a628f561b598">CONTROL_WRITE_REGISTER_1</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not write register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 3) <span class="comment">// ToF</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    uint8_t data[5];</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    data[0] = slaveAddress;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    data[1] = registerAddress;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    data[2] = (value &amp; 0xFF);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    data[3] = (value &gt;&gt; 8) &amp; 0xFF;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    data[4] = (value &gt;&gt; 16) &amp; 0xFF;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;setControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a23bb36de681156ecb933f0d16fb9c05d">CONTROL_WRITE_REGISTER_3</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 2)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    uint8_t data[4];</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    data[0] = slaveAddress;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    data[1] = registerAddress;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    data[2] = (value &amp; 0xFF);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    data[3] = (value &gt;&gt; 8) &amp; 0xFF;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;setControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a4f9d4e91eeb52713e55af5943e43df5b">CONTROL_WRITE_REGISTER_2</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Don&#39;t know how to write &#39;&quot;</span> &lt;&lt; std::dec &lt;&lt; length &lt;&lt; <span class="stringliteral">&quot;&#39; bytes. Required for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">LOG_DEBUG</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: register write @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; value &lt;&lt; std::endl;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a44d63f580f52b0f3ff8e801b9a5d266e">  164</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a44d63f580f52b0f3ff8e801b9a5d266e">VoxelXUProgrammer::reset</a>()</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a59a73029b2d266a632379ba355b70276">isInitialized</a>())</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  uint8_t data[1];</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">_xu</a>-&gt;setControl(<a class="code" href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a330d79558af60afdee6ef59e793092a1">CONTROL_REBOOT_FW_MODE</a>, <a class="code" href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">arraySize</a>(data), data))</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelXUProgrammer: Could not reset the device.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a8b22f80e6109c90d97ffa2a0970d919a"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a8b22f80e6109c90d97ffa2a0970d919a">Voxel::TI::VoxelXUProgrammer::_XU_ID</a></div><div class="ttdeci">const int _XU_ID</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00024">VoxelXUProgrammer.h:24</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9a598ca74d0319006a1d02cf22f4691e30"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a598ca74d0319006a1d02cf22f4691e30">Voxel::TI::VoxelXUProgrammer::CONTROL_READ_REGISTER_3</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00032">VoxelXUProgrammer.h:32</a></div></div>
<div class="ttc" id="classVoxel_1_1UVCXU_xhtml"><div class="ttname"><a href="classVoxel_1_1UVCXU.xhtml">Voxel::UVCXU</a></div><div class="ttdef"><b>Definition:</b> <a href="UVCXU_8h_source.xhtml#l00020">UVCXU.h:20</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8">Voxel::LOG_WARNING</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00028">Logger.h:28</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9a330d79558af60afdee6ef59e793092a1"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a330d79558af60afdee6ef59e793092a1">Voxel::TI::VoxelXUProgrammer::CONTROL_REBOOT_FW_MODE</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00035">VoxelXUProgrammer.h:35</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_aa5fd87c5c5f54df09b1d53f92e91dac2"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">Voxel::TI::VoxelProgrammerBase::SlaveAddressToByteMap</a></div><div class="ttdeci">Map&lt; uint, uint &gt; SlaveAddressToByteMap</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8h_source.xhtml#l00024">VoxelProgrammerBase.h:24</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Voxel::Device::USB</a></div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00024">Device.h:24</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml">Voxel::TI::VoxelProgrammerBase</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8h_source.xhtml#l00021">VoxelProgrammerBase.h:21</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a5455d54f5d719e0acc7f7b5674fcc28b"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a5455d54f5d719e0acc7f7b5674fcc28b">Voxel::TI::VoxelXUProgrammer::_xu</a></div><div class="ttdeci">UVCXUPtr _xu</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00022">VoxelXUProgrammer.h:22</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga4dfb4356b8165396c57ed67f7fb09059"><div class="ttname"><a href="group__Util.xhtml#ga4dfb4356b8165396c57ed67f7fb09059">Voxel::arraySize</a></div><div class="ttdeci">int arraySize(T(&amp;)[sz])</div><div class="ttdoc">Array handling template. </div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00115">Common.h:115</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9a23bb36de681156ecb933f0d16fb9c05d"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a23bb36de681156ecb933f0d16fb9c05d">Voxel::TI::VoxelXUProgrammer::CONTROL_WRITE_REGISTER_3</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00030">VoxelXUProgrammer.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a2bc04ac3af8b7686363888ea5e533354"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a2bc04ac3af8b7686363888ea5e533354">Voxel::TI::VoxelProgrammerBase::_device</a></div><div class="ttdeci">DevicePtr _device</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8h_source.xhtml#l00027">VoxelProgrammerBase.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_aa20346bae2a6dea68455e56fe2d58e61"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#aa20346bae2a6dea68455e56fe2d58e61">Voxel::TI::VoxelXUProgrammer::_majorVersion</a></div><div class="ttdeci">uint8_t _majorVersion</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00026">VoxelXUProgrammer.h:26</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_af00fab5c3d5ca655e93cbac9eedb2191"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#af00fab5c3d5ca655e93cbac9eedb2191">Voxel::TI::VoxelXUProgrammer::_readRegister</a></div><div class="ttdeci">virtual bool _readRegister(uint16_t slaveAddress, uint16_t registerAddress, uint32_t &amp;value, uint8_t length) const </div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8cpp_source.xhtml#l00049">VoxelXUProgrammer.cpp:49</a></div></div>
<div class="ttc" id="classint_xhtml"><div class="ttname"><a href="classint.xhtml">int</a></div></div>
<div class="ttc" id="classVoxel_1_1Ptr_xhtml"><div class="ttname"><a href="classVoxel_1_1Ptr.xhtml">Voxel::Ptr&lt; Device &gt;</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a59a73029b2d266a632379ba355b70276"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a59a73029b2d266a632379ba355b70276">Voxel::TI::VoxelXUProgrammer::isInitialized</a></div><div class="ttdeci">virtual bool isInitialized() const </div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8cpp_source.xhtml#l00017">VoxelXUProgrammer.cpp:17</a></div></div>
<div class="ttc" id="group__IO_xhtml_ga194c1465811304e3fa3458acca660cc4"><div class="ttname"><a href="group__IO.xhtml#ga194c1465811304e3fa3458acca660cc4">Voxel::UVCXUPtr</a></div><div class="ttdeci">Ptr&lt; UVCXU &gt; UVCXUPtr</div><div class="ttdef"><b>Definition:</b> <a href="UVCXU_8h_source.xhtml#l00039">UVCXU.h:39</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9a819107c7722a8fc406eaa687112a4a30"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a819107c7722a8fc406eaa687112a4a30">Voxel::TI::VoxelXUProgrammer::CONTROL_READ_REGISTER_1</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00034">VoxelXUProgrammer.h:34</a></div></div>
<div class="ttc" id="Logger_8h_xhtml"><div class="ttname"><a href="Logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="VoxelXUProgrammer_8h_xhtml"><div class="ttname"><a href="VoxelXUProgrammer_8h.xhtml">VoxelXUProgrammer.h</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a4f056b71d80ee76eea0e8a160e256c4f"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a4f056b71d80ee76eea0e8a160e256c4f">Voxel::TI::VoxelXUProgrammer::init</a></div><div class="ttdeci">void init()</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8cpp_source.xhtml#l00022">VoxelXUProgrammer.cpp:22</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9a055884ad4628e392fdc7a628f561b598"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a055884ad4628e392fdc7a628f561b598">Voxel::TI::VoxelXUProgrammer::CONTROL_WRITE_REGISTER_1</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00033">VoxelXUProgrammer.h:33</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a3437536ecce2a865222d364680b59766"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a3437536ecce2a865222d364680b59766">Voxel::TI::VoxelXUProgrammer::_minorVersion</a></div><div class="ttdeci">uint8_t _minorVersion</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00026">VoxelXUProgrammer.h:26</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9ab2fd39ece70a6e2ccb34c03342917dda"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9ab2fd39ece70a6e2ccb34c03342917dda">Voxel::TI::VoxelXUProgrammer::CONTROL_GET_VERSION</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00036">VoxelXUProgrammer.h:36</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a44d63f580f52b0f3ff8e801b9a5d266e"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a44d63f580f52b0f3ff8e801b9a5d266e">Voxel::TI::VoxelXUProgrammer::reset</a></div><div class="ttdeci">virtual bool reset()</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8cpp_source.xhtml#l00164">VoxelXUProgrammer.cpp:164</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_ab14e92f7cb09cebb07f22e618b83ca10"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#ab14e92f7cb09cebb07f22e618b83ca10">Voxel::TI::VoxelXUProgrammer::_writeRegister</a></div><div class="ttdeci">virtual bool _writeRegister(uint16_t slaveAddress, uint16_t registerAddress, uint32_t value, uint8_t length)</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8cpp_source.xhtml#l00111">VoxelXUProgrammer.cpp:111</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9a669794cd5bb82fbc0ec3642c77cdad8f"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a669794cd5bb82fbc0ec3642c77cdad8f">Voxel::TI::VoxelXUProgrammer::CONTROL_SET_READ_REGISTER</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00031">VoxelXUProgrammer.h:31</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9a4f9d4e91eeb52713e55af5943e43df5b"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9a4f9d4e91eeb52713e55af5943e43df5b">Voxel::TI::VoxelXUProgrammer::CONTROL_WRITE_REGISTER_2</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00037">VoxelXUProgrammer.h:37</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="Parameter_8h_xhtml"><div class="ttname"><a href="Parameter_8h.xhtml">Parameter.h</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_a438e1fd6f3ca636828dd7c44c681d3a9ae3ebee1187fb4eaf63707afcd8bc0957"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#a438e1fd6f3ca636828dd7c44c681d3a9ae3ebee1187fb4eaf63707afcd8bc0957">Voxel::TI::VoxelXUProgrammer::CONTROL_READ_REGISTER_2</a></div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8h_source.xhtml#l00038">VoxelXUProgrammer.h:38</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelXUProgrammer_xhtml_ae09497186f540cf5abc81e55c4145bc7"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelXUProgrammer.xhtml#ae09497186f540cf5abc81e55c4145bc7">Voxel::TI::VoxelXUProgrammer::VoxelXUProgrammer</a></div><div class="ttdeci">VoxelXUProgrammer(const SlaveAddressToByteMap &amp;map, DevicePtr device)</div><div class="ttdef"><b>Definition:</b> <a href="VoxelXUProgrammer_8cpp_source.xhtml#l00038">VoxelXUProgrammer.cpp:38</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">Voxel::LOG_DEBUG</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00030">Logger.h:30</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">Voxel::LOG_INFO</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00029">Logger.h:29</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:57 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
