<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: Voxel::TI::ToFCamera Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="a00387.xhtml">Voxel</a></li><li class="navelem"><a class="el" href="a00388.xhtml">TI</a></li><li class="navelem"><a class="el" href="a00153.xhtml">ToFCamera</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="a01125.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Voxel::TI::ToFCamera Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="a00323_source.xhtml">ToFCamera.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Voxel::TI::ToFCamera:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a01126.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Voxel::TI::ToFCamera:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a01127.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9edbd71eb5407521ff1430920fb19b10"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a9edbd71eb5407521ff1430920fb19b10">ToFCamera</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, <a class="el" href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> device)</td></tr>
<tr class="separator:a9edbd71eb5407521ff1430920fb19b10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61feee092ef4496fb12d80c32e5a3954"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a61feee092ef4496fb12d80c32e5a3954">setSerialNumber</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;serialNumber)</td></tr>
<tr class="separator:a61feee092ef4496fb12d80c32e5a3954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9af9f38b195594306c2949286f778b55"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a9af9f38b195594306c2949286f778b55">~ToFCamera</a> ()</td></tr>
<tr class="separator:a9af9f38b195594306c2949286f778b55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00154"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00154')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00154.xhtml">Voxel::TI::ToFCameraBase</a></td></tr>
<tr class="memitem:a146c7d6cc98e2ce0783c399131a51288 inherit pub_methods_a00154"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a146c7d6cc98e2ce0783c399131a51288">ToFCameraBase</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, <a class="el" href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> device)</td></tr>
<tr class="separator:a146c7d6cc98e2ce0783c399131a51288 inherit pub_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f502f3f410f33b6e2d2e3729183c718 inherit pub_methods_a00154"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a0f502f3f410f33b6e2d2e3729183c718">~ToFCameraBase</a> ()</td></tr>
<tr class="separator:a0f502f3f410f33b6e2d2e3729183c718 inherit pub_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00036"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00036')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00036.xhtml">Voxel::DepthCamera</a></td></tr>
<tr class="memitem:af70e20cd13e08c6392058b1f3310f08a inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#af70e20cd13e08c6392058b1f3310f08a">DepthCamera</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, <a class="el" href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> device)</td></tr>
<tr class="separator:af70e20cd13e08c6392058b1f3310f08a inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f1cd5a3a7a32f203435f37db28767b9 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a2f1cd5a3a7a32f203435f37db28767b9">isInitialized</a> () const </td></tr>
<tr class="separator:a2f1cd5a3a7a32f203435f37db28767b9 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3d6fcc6d4a20d1ad2de809ad65ecc34 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a> () const </td></tr>
<tr class="separator:ae3d6fcc6d4a20d1ad2de809ad65ecc34 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9fa96ac56384c771fcdfcc76c0e3b2b inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">id</a> () const </td></tr>
<tr class="separator:ad9fa96ac56384c771fcdfcc76c0e3b2b inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a791d58b8feb262a19edb8d8275a1d7ed inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a791d58b8feb262a19edb8d8275a1d7ed">getSerialNumber</a> (<a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;serialNumber) const </td></tr>
<tr class="separator:a791d58b8feb262a19edb8d8275a1d7ed inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40adc69493106db7f3fe7ae7c87fee23 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a40adc69493106db7f3fe7ae7c87fee23">getDevice</a> () const </td></tr>
<tr class="separator:a40adc69493106db7f3fe7ae7c87fee23 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff46a5643f0a02a6970236e0b6a7634 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a1ff46a5643f0a02a6970236e0b6a7634">isRunning</a> () const </td></tr>
<tr class="separator:a1ff46a5643f0a02a6970236e0b6a7634 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29651b9599d64233370132877e2f47b5 inherit pub_methods_a00036"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a29651b9599d64233370132877e2f47b5 inherit pub_methods_a00036"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a29651b9599d64233370132877e2f47b5">getStreamParam</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, T &amp;value) const </td></tr>
<tr class="separator:a29651b9599d64233370132877e2f47b5 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0937e30087fb2c6920e1acf4b3fd3695 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a0937e30087fb2c6920e1acf4b3fd3695">refreshParams</a> ()</td></tr>
<tr class="separator:a0937e30087fb2c6920e1acf4b3fd3695 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e6e93bcdba4d8a35eb53bbf2843f636 inherit pub_methods_a00036"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4e6e93bcdba4d8a35eb53bbf2843f636 inherit pub_methods_a00036"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a4e6e93bcdba4d8a35eb53bbf2843f636">get</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, T &amp;value, <a class="el" href="a00398.xhtml">bool</a> refresh=false) const </td></tr>
<tr class="separator:a4e6e93bcdba4d8a35eb53bbf2843f636 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f1c6d826c1842d7bc3fbeea5ebb9616 inherit pub_methods_a00036"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4f1c6d826c1842d7bc3fbeea5ebb9616 inherit pub_methods_a00036"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a4f1c6d826c1842d7bc3fbeea5ebb9616">set</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, const T &amp;value)</td></tr>
<tr class="separator:a4f1c6d826c1842d7bc3fbeea5ebb9616 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bee96d5215894d03e16e10634f199e7 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00394.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">ParameterPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a1bee96d5215894d03e16e10634f199e7">getParam</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>) const </td></tr>
<tr class="separator:a1bee96d5215894d03e16e10634f199e7 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0de34122b14d9edf31db0bd04ed3462f inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map</a>&lt; <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>, <a class="el" href="a00394.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">ParameterPtr</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a0de34122b14d9edf31db0bd04ed3462f">getParameters</a> () const </td></tr>
<tr class="separator:a0de34122b14d9edf31db0bd04ed3462f inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a349e61c95028fe5c04c9a79572f038be inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a349e61c95028fe5c04c9a79572f038be">setFrameRate</a> (const <a class="el" href="a00069.xhtml">FrameRate</a> &amp;r)</td></tr>
<tr class="separator:a349e61c95028fe5c04c9a79572f038be inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42c414a6d3fe26b056de3d2f6fed16e inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aa42c414a6d3fe26b056de3d2f6fed16e">getFrameRate</a> (<a class="el" href="a00069.xhtml">FrameRate</a> &amp;r) const </td></tr>
<tr class="separator:aa42c414a6d3fe26b056de3d2f6fed16e inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ff28e491fd730851ffb5b8cd7b02a41 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a6ff28e491fd730851ffb5b8cd7b02a41">setFrameSize</a> (const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;s)</td></tr>
<tr class="separator:a6ff28e491fd730851ffb5b8cd7b02a41 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52d1041f172901ff9206b1b409d4711d inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a52d1041f172901ff9206b1b409d4711d">getFrameSize</a> (<a class="el" href="a00071.xhtml">FrameSize</a> &amp;s) const </td></tr>
<tr class="separator:a52d1041f172901ff9206b1b409d4711d inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa229ee837c73aa2c78a8bd7a26fa0955 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aa229ee837c73aa2c78a8bd7a26fa0955">getMaximumFrameSize</a> (<a class="el" href="a00071.xhtml">FrameSize</a> &amp;s) const </td></tr>
<tr class="separator:aa229ee837c73aa2c78a8bd7a26fa0955 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a664f0fd966f7189b566934972cbeb993 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a664f0fd966f7189b566934972cbeb993">getMaximumFrameRate</a> (<a class="el" href="a00069.xhtml">FrameRate</a> &amp;frameRate, const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;forFrameSize) const </td></tr>
<tr class="separator:a664f0fd966f7189b566934972cbeb993 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9604ada4f0170774ae80716a703f0ccc inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a9604ada4f0170774ae80716a703f0ccc">getSupportedVideoModes</a> (<a class="el" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector</a>&lt; <a class="el" href="a00134.xhtml">SupportedVideoMode</a> &gt; &amp;supportedVideoModes) const </td></tr>
<tr class="separator:a9604ada4f0170774ae80716a703f0ccc inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ae059fd9cee9ca30dbf5ceb62e1d545 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a1ae059fd9cee9ca30dbf5ceb62e1d545">getMaximumVideoMode</a> (<a class="el" href="a00181.xhtml">VideoMode</a> &amp;videoMode) const </td></tr>
<tr class="separator:a1ae059fd9cee9ca30dbf5ceb62e1d545 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea5cca369f51ba2ef62ee857c9f6a3e8 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aea5cca369f51ba2ef62ee857c9f6a3e8">getBytesPerPixel</a> (uint &amp;bpp) const </td></tr>
<tr class="separator:aea5cca369f51ba2ef62ee857c9f6a3e8 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a724cd1bcbbd4a32abc642e3988f2e7c9 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a724cd1bcbbd4a32abc642e3988f2e7c9">setBytesPerPixel</a> (const uint &amp;bpp)</td></tr>
<tr class="separator:a724cd1bcbbd4a32abc642e3988f2e7c9 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2be6abc24dd344f63e082c19273d833 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ab2be6abc24dd344f63e082c19273d833">getROI</a> (<a class="el" href="a00120.xhtml">RegionOfInterest</a> &amp;roi)</td></tr>
<tr class="separator:ab2be6abc24dd344f63e082c19273d833 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05b1d1cc52e36e6907fb4bb07c7ac47f inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a05b1d1cc52e36e6907fb4bb07c7ac47f">setROI</a> (const <a class="el" href="a00120.xhtml">RegionOfInterest</a> &amp;roi)</td></tr>
<tr class="separator:a05b1d1cc52e36e6907fb4bb07c7ac47f inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15d7b7b0f564a2d0571ef8bb503de429 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a15d7b7b0f564a2d0571ef8bb503de429">allowedROI</a> (<a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;message)</td></tr>
<tr class="separator:a15d7b7b0f564a2d0571ef8bb503de429 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fe06c831e9177bf0a24cefbbad58f61 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a0fe06c831e9177bf0a24cefbbad58f61">getFieldOfView</a> (<a class="el" href="a00396.xhtml">float</a> &amp;fovHalfAngle) const </td></tr>
<tr class="separator:a0fe06c831e9177bf0a24cefbbad58f61 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3e10a54ec1c63333b2b887dfb1bed3a inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ab3e10a54ec1c63333b2b887dfb1bed3a">saveFrameStream</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;fileName)</td></tr>
<tr class="separator:ab3e10a54ec1c63333b2b887dfb1bed3a inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a211a5061db7f2252ba240f4c250cd241 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a211a5061db7f2252ba240f4c250cd241">isSavingFrameStream</a> ()</td></tr>
<tr class="separator:a211a5061db7f2252ba240f4c250cd241 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af854b5cc3863750cd9f7df7633ce540f inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#af854b5cc3863750cd9f7df7633ce540f">closeFrameStream</a> ()</td></tr>
<tr class="separator:af854b5cc3863750cd9f7df7633ce540f inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b787f9ef331cf412c8c6d8a2aa330e inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a76b787f9ef331cf412c8c6d8a2aa330e">registerCallback</a> (<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> type, <a class="el" href="a00036.xhtml#a51b5a8e577f30c01995e56b5aeb8c503">CallbackType</a> f)</td></tr>
<tr class="separator:a76b787f9ef331cf412c8c6d8a2aa330e inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ee4aae376b27ec4004b9e2021324eac inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a8ee4aae376b27ec4004b9e2021324eac">clearAllCallbacks</a> ()</td></tr>
<tr class="separator:a8ee4aae376b27ec4004b9e2021324eac inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae792c18dc3ed43b0932f67b8245c90ee inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ae792c18dc3ed43b0932f67b8245c90ee">clearCallback</a> (<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> type)</td></tr>
<tr class="separator:ae792c18dc3ed43b0932f67b8245c90ee inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27aec510390cf5b691600912498c6a0 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00397.xhtml">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ac27aec510390cf5b691600912498c6a0">addFilter</a> (<a class="el" href="a00391.xhtml#gaff3bbc849ee770a618c709f965d4d319">FilterPtr</a> p, <a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> frameType, <a class="el" href="a00397.xhtml">int</a> beforeFilterID=-1)</td></tr>
<tr class="separator:ac27aec510390cf5b691600912498c6a0 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cb0c3f5efdf999ac60a5c296941b92a inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00391.xhtml#gaff3bbc849ee770a618c709f965d4d319">FilterPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a8cb0c3f5efdf999ac60a5c296941b92a">getFilter</a> (<a class="el" href="a00397.xhtml">int</a> filterID, <a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> frameType) const </td></tr>
<tr class="separator:a8cb0c3f5efdf999ac60a5c296941b92a inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dde31df803a5c15ef3c8c6544890db4 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a7dde31df803a5c15ef3c8c6544890db4">removeFilter</a> (<a class="el" href="a00397.xhtml">int</a> filterID, <a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> frameType)</td></tr>
<tr class="separator:a7dde31df803a5c15ef3c8c6544890db4 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab27da40b71df330ffbb6a9c139c4983b inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ab27da40b71df330ffbb6a9c139c4983b">removeAllFilters</a> (<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> frameType)</td></tr>
<tr class="separator:ab27da40b71df330ffbb6a9c139c4983b inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4724cd30f939a4b633ba7b8c3dcfe307 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a4724cd30f939a4b633ba7b8c3dcfe307">resetFilters</a> ()</td></tr>
<tr class="separator:a4724cd30f939a4b633ba7b8c3dcfe307 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab77124751900d9b506c487dbc2bc82e4 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00062.xhtml">FilterSet</a>&lt; <a class="el" href="a00119.xhtml">RawFrame</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ab77124751900d9b506c487dbc2bc82e4">getUnprocessedRawFilterSet</a> ()</td></tr>
<tr class="separator:ab77124751900d9b506c487dbc2bc82e4 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55c6ec4483e1f4e0a84feee52583c816 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00062.xhtml">FilterSet</a>&lt; <a class="el" href="a00119.xhtml">RawFrame</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a55c6ec4483e1f4e0a84feee52583c816">getProcessedRawFilterSet</a> ()</td></tr>
<tr class="separator:a55c6ec4483e1f4e0a84feee52583c816 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e37df00dc3e3bc62e840608f78b7775 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00062.xhtml">FilterSet</a>&lt; <a class="el" href="a00040.xhtml">DepthFrame</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a2e37df00dc3e3bc62e840608f78b7775">getDepthFilterSet</a> ()</td></tr>
<tr class="separator:a2e37df00dc3e3bc62e840608f78b7775 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a23ac08a6a28c804552c4cf49db4e3e inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a8a23ac08a6a28c804552c4cf49db4e3e">start</a> ()</td></tr>
<tr class="separator:a8a23ac08a6a28c804552c4cf49db4e3e inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1373f05cc4d5bacd063a409d68c6b0c8 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a1373f05cc4d5bacd063a409d68c6b0c8">stop</a> ()</td></tr>
<tr class="separator:a1373f05cc4d5bacd063a409d68c6b0c8 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f96bea2198d2060978523da6b0abcd inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a64f96bea2198d2060978523da6b0abcd">wait</a> ()</td></tr>
<tr class="separator:a64f96bea2198d2060978523da6b0abcd inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e31ecb8e71db03a54047dabacc06ea inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a97e31ecb8e71db03a54047dabacc06ea">reset</a> ()</td></tr>
<tr class="separator:a97e31ecb8e71db03a54047dabacc06ea inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8104df395e5e970fe5919b9b259d1146 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00113.xhtml">Ptr</a>&lt; <a class="el" href="a00121.xhtml">RegisterProgrammer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a8104df395e5e970fe5919b9b259d1146">getProgrammer</a> ()</td></tr>
<tr class="separator:a8104df395e5e970fe5919b9b259d1146 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a618c93f0fffe14e6ac452ba20955cac9 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00113.xhtml">Ptr</a>&lt; <a class="el" href="a00129.xhtml">Streamer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a618c93f0fffe14e6ac452ba20955cac9">getStreamer</a> ()</td></tr>
<tr class="separator:a618c93f0fffe14e6ac452ba20955cac9 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26c2a2e313a14243509a065135822567 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a26c2a2e313a14243509a065135822567">reloadConfiguration</a> ()</td></tr>
<tr class="separator:a26c2a2e313a14243509a065135822567 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cb1be5f7407f3fb8557a49e9dd0111d inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map</a>&lt; <a class="el" href="a00397.xhtml">int</a>, <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a5cb1be5f7407f3fb8557a49e9dd0111d">getCameraProfileNames</a> ()</td></tr>
<tr class="separator:a5cb1be5f7407f3fb8557a49e9dd0111d inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee2269bc5cc21ee17e98d674aa25245 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00397.xhtml">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a2ee2269bc5cc21ee17e98d674aa25245">getCurrentCameraProfileID</a> ()</td></tr>
<tr class="separator:a2ee2269bc5cc21ee17e98d674aa25245 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd88098930492a61560db37abdfacac1 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00397.xhtml">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#afd88098930492a61560db37abdfacac1">addCameraProfile</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;profileName, const <a class="el" href="a00397.xhtml">int</a> parentID)</td></tr>
<tr class="separator:afd88098930492a61560db37abdfacac1 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0e9ecccc5da44339aafaee4c17b9e44 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ab0e9ecccc5da44339aafaee4c17b9e44">setCameraProfile</a> (const <a class="el" href="a00397.xhtml">int</a> <a class="el" href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">id</a>, <a class="el" href="a00398.xhtml">bool</a> softApply=false)</td></tr>
<tr class="separator:ab0e9ecccc5da44339aafaee4c17b9e44 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51bc1371938f78ddc18af0b36850545c inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a51bc1371938f78ddc18af0b36850545c">removeCameraProfile</a> (const <a class="el" href="a00397.xhtml">int</a> <a class="el" href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">id</a>)</td></tr>
<tr class="separator:a51bc1371938f78ddc18af0b36850545c inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8f40a112bb95ae2bb9dbd08c0f5d54a inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ab8f40a112bb95ae2bb9dbd08c0f5d54a">saveCameraProfileToHardware</a> (const <a class="el" href="a00397.xhtml">int</a> <a class="el" href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">id</a>)</td></tr>
<tr class="separator:ab8f40a112bb95ae2bb9dbd08c0f5d54a inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa79e1956fadd8f87ad0026e861802f79 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aa79e1956fadd8f87ad0026e861802f79">close</a> ()</td></tr>
<tr class="separator:aa79e1956fadd8f87ad0026e861802f79 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f204a8d71e4a806cc822d80bbf44c67 inherit pub_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a4f204a8d71e4a806cc822d80bbf44c67">~DepthCamera</a> ()</td></tr>
<tr class="separator:a4f204a8d71e4a806cc822d80bbf44c67 inherit pub_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8fd9aae6546d426f494b20633a881442"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a8fd9aae6546d426f494b20633a881442">_init</a> ()</td></tr>
<tr class="separator:a8fd9aae6546d426f494b20633a881442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0cafec75f5994ed727f4de2a448efa9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#aa0cafec75f5994ed727f4de2a448efa9">_processRawFrame</a> (const <a class="el" href="a00393.xhtml#ga525d4dd3a9a42ded749fe45be39103f4">RawFramePtr</a> &amp;rawFrameInput, <a class="el" href="a00393.xhtml#ga525d4dd3a9a42ded749fe45be39103f4">RawFramePtr</a> &amp;rawFrameOutput)</td></tr>
<tr class="separator:aa0cafec75f5994ed727f4de2a448efa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a4ebf0ead1c805fd1cdbe6eff0dacb3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a0a4ebf0ead1c805fd1cdbe6eff0dacb3">_getAmplitudeNormalizingFactor</a> (<a class="el" href="a00396.xhtml">float</a> &amp;factor)</td></tr>
<tr class="separator:a0a4ebf0ead1c805fd1cdbe6eff0dacb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f61d229b9f83102d07d25d88ea03efa"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a6f61d229b9f83102d07d25d88ea03efa">_getDepthScalingFactor</a> (<a class="el" href="a00396.xhtml">float</a> &amp;factor)</td></tr>
<tr class="separator:a6f61d229b9f83102d07d25d88ea03efa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae864d54427493e7bb25c41f9732385cf"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#ae864d54427493e7bb25c41f9732385cf">_setFrameRate</a> (const <a class="el" href="a00069.xhtml">FrameRate</a> &amp;r)</td></tr>
<tr class="separator:ae864d54427493e7bb25c41f9732385cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae43bdefe2031786701b133ce173ad603"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#ae43bdefe2031786701b133ce173ad603">_getFrameRate</a> (<a class="el" href="a00069.xhtml">FrameRate</a> &amp;r) const </td></tr>
<tr class="separator:ae43bdefe2031786701b133ce173ad603"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a0a64555070bb8804baacb1cdaabfc9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a0a0a64555070bb8804baacb1cdaabfc9">_getFrameSize</a> (<a class="el" href="a00071.xhtml">FrameSize</a> &amp;s) const </td></tr>
<tr class="separator:a0a0a64555070bb8804baacb1cdaabfc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdcfa070468d49469af82f721f971fec"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#acdcfa070468d49469af82f721f971fec">_setFrameSize</a> (const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;s)</td></tr>
<tr class="separator:acdcfa070468d49469af82f721f971fec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a732a6cb4d0a909776abf8004f2ddf4ee"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a732a6cb4d0a909776abf8004f2ddf4ee">_setFrameSize</a> (const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;s, <a class="el" href="a00398.xhtml">bool</a> resetROI)</td></tr>
<tr class="separator:a732a6cb4d0a909776abf8004f2ddf4ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb1ca26782d200e18261e76254712477"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#aeb1ca26782d200e18261e76254712477">_setStreamerFrameSize</a> (const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;s)=0</td></tr>
<tr class="separator:aeb1ca26782d200e18261e76254712477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e338b01dde4b43a180b6ebccd4272f5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a3e338b01dde4b43a180b6ebccd4272f5">_getMaximumFrameRate</a> (<a class="el" href="a00069.xhtml">FrameRate</a> &amp;frameRate, const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;forFrameSize) const </td></tr>
<tr class="separator:a3e338b01dde4b43a180b6ebccd4272f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf6c3a732c5a47f38f2d461d76709091"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#acf6c3a732c5a47f38f2d461d76709091">_getBytesPerPixel</a> (uint &amp;bpp) const </td></tr>
<tr class="separator:acf6c3a732c5a47f38f2d461d76709091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a5758e07abe83cba9f90733bd8d35c7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a7a5758e07abe83cba9f90733bd8d35c7">_setBytesPerPixel</a> (const uint &amp;bpp)</td></tr>
<tr class="separator:a7a5758e07abe83cba9f90733bd8d35c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8722e9125739af3cd8c9291b7b6f126a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a8722e9125739af3cd8c9291b7b6f126a">_getOpDataArrangeMode</a> (<a class="el" href="a00397.xhtml">int</a> &amp;dataArrangeMode) const </td></tr>
<tr class="separator:a8722e9125739af3cd8c9291b7b6f126a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d92b8693fedf8a76572074c2e2aeca1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a5d92b8693fedf8a76572074c2e2aeca1">_getIlluminationFrequency</a> (<a class="el" href="a00396.xhtml">float</a> &amp;frequency) const =0</td></tr>
<tr class="separator:a5d92b8693fedf8a76572074c2e2aeca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0e21a487e4d2ae08031d0078b0578d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#abb0e21a487e4d2ae08031d0078b0578d">_getBinning</a> (uint &amp;rowsToMerge, uint &amp;columnsToMerge) const </td></tr>
<tr class="separator:abb0e21a487e4d2ae08031d0078b0578d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af38a4f151946d570f66f17f148575695"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#af38a4f151946d570f66f17f148575695">_setBinning</a> (uint rowsToMerge, uint columnsToMerge, const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;frameSize)</td></tr>
<tr class="separator:af38a4f151946d570f66f17f148575695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2c116b5f3e0598f9a449c70f8ff5b6a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#ae2c116b5f3e0598f9a449c70f8ff5b6a">_getSystemClockFrequency</a> (uint &amp;frequency) const =0</td></tr>
<tr class="separator:ae2c116b5f3e0598f9a449c70f8ff5b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c35074af2f6b686cea15db188b9c53f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a3c35074af2f6b686cea15db188b9c53f">_isHistogramEnabled</a> () const =0</td></tr>
<tr class="separator:a3c35074af2f6b686cea15db188b9c53f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53e0fb4c6f4d4b9ac37b6f1ca763a104"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a53e0fb4c6f4d4b9ac37b6f1ca763a104">_getToFFrameType</a> (<a class="el" href="a00393.xhtml#gaf2efbd2e80ce564e84387861880183c3">ToFFrameType</a> &amp;frameType) const </td></tr>
<tr class="separator:a53e0fb4c6f4d4b9ac37b6f1ca763a104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3a59471799f2526c520511f688d247c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#af3a59471799f2526c520511f688d247c">_is16BitModeEnabled</a> (<a class="el" href="a00398.xhtml">bool</a> &amp;mode16Bit)</td></tr>
<tr class="separator:af3a59471799f2526c520511f688d247c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52686f695d06876ef5a89e453c6a8ba3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a52686f695d06876ef5a89e453c6a8ba3">_initStartParams</a> ()</td></tr>
<tr class="separator:a52686f695d06876ef5a89e453c6a8ba3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ce6e98d8496efd0b62d926e73809034"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a5ce6e98d8496efd0b62d926e73809034">_applyCalibrationParams</a> ()=0</td></tr>
<tr class="separator:a5ce6e98d8496efd0b62d926e73809034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accb2b81d2ef01ba4fbe1ae19da43263a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#accb2b81d2ef01ba4fbe1ae19da43263a">_getCurrentProfileRegisterName</a> (<a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>)=0</td></tr>
<tr class="separator:accb2b81d2ef01ba4fbe1ae19da43263a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a967be15ba3e8a06e47861b83a0c12821"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a967be15ba3e8a06e47861b83a0c12821">_getCurrentProfileID</a> (<a class="el" href="a00397.xhtml">int</a> &amp;<a class="el" href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">id</a>)</td></tr>
<tr class="separator:a967be15ba3e8a06e47861b83a0c12821"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0e0e5e4394bae4bb6db858ec4916e28"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#ae0e0e5e4394bae4bb6db858ec4916e28">_saveCurrentProfileID</a> (const <a class="el" href="a00397.xhtml">int</a> <a class="el" href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">id</a>)</td></tr>
<tr class="separator:ae0e0e5e4394bae4bb6db858ec4916e28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b0e000ee9cebb4c946bc0e6ad6dcafc"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a3b0e000ee9cebb4c946bc0e6ad6dcafc">_reset</a> ()</td></tr>
<tr class="separator:a3b0e000ee9cebb4c946bc0e6ad6dcafc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_a00154"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a00154')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00154.xhtml">Voxel::TI::ToFCameraBase</a></td></tr>
<tr class="memitem:a63de4dcaedaf61faeda184f79e94e3b9 inherit pro_methods_a00154"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a63de4dcaedaf61faeda184f79e94e3b9">_captureRawUnprocessedFrame</a> (<a class="el" href="a00393.xhtml#ga525d4dd3a9a42ded749fe45be39103f4">RawFramePtr</a> &amp;rawFrame)</td></tr>
<tr class="separator:a63de4dcaedaf61faeda184f79e94e3b9 inherit pro_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a182d5c39cfad4b94a0a717a937752b9e inherit pro_methods_a00154"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a182d5c39cfad4b94a0a717a937752b9e">_convertToDepthFrame</a> (const <a class="el" href="a00393.xhtml#ga525d4dd3a9a42ded749fe45be39103f4">RawFramePtr</a> &amp;rawFrame, <a class="el" href="a00393.xhtml#gaab5e9fd7df233b5ca26def954c3b0b94">DepthFramePtr</a> &amp;depthFrame)</td></tr>
<tr class="separator:a182d5c39cfad4b94a0a717a937752b9e inherit pro_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a536998145a2cab4265de9e342a5920 inherit pro_methods_a00154"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a3a536998145a2cab4265de9e342a5920">_start</a> ()</td></tr>
<tr class="separator:a3a536998145a2cab4265de9e342a5920 inherit pro_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7a2eefa216b183100f4f21d64a1b225 inherit pro_methods_a00154"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#af7a2eefa216b183100f4f21d64a1b225">_stop</a> ()</td></tr>
<tr class="separator:af7a2eefa216b183100f4f21d64a1b225 inherit pro_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34c90601da611e5cb61bd7a35f03a5f7 inherit pro_methods_a00154"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a34c90601da611e5cb61bd7a35f03a5f7">_init</a> ()</td></tr>
<tr class="separator:a34c90601da611e5cb61bd7a35f03a5f7 inherit pro_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c7e80209e0a350ec9cfb601e7ec75e2 inherit pro_methods_a00154"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a4c7e80209e0a350ec9cfb601e7ec75e2">_onReset</a> ()</td></tr>
<tr class="separator:a4c7e80209e0a350ec9cfb601e7ec75e2 inherit pro_methods_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_a00036"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a00036')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00036.xhtml">Voxel::DepthCamera</a></td></tr>
<tr class="memitem:a677a46dca2838e514d3238fb19d3400e inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a677a46dca2838e514d3238fb19d3400e">_addParameters</a> (const <a class="el" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector</a>&lt; <a class="el" href="a00394.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">ParameterPtr</a> &gt; &amp;params)</td></tr>
<tr class="separator:a677a46dca2838e514d3238fb19d3400e inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcda3ef7cd9bfd167706016cd96e5daa inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#abcda3ef7cd9bfd167706016cd96e5daa">_callbackAndContinue</a> (uint32_t &amp;callBackTypesToBeCalled, <a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> type, const <a class="el" href="a00065.xhtml">Frame</a> &amp;frame)</td></tr>
<tr class="separator:abcda3ef7cd9bfd167706016cd96e5daa inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d0303d4bcac0324076b3dd8c25779ee inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a9d0303d4bcac0324076b3dd8c25779ee">_convertToPointCloudFrame</a> (const <a class="el" href="a00393.xhtml#gaab5e9fd7df233b5ca26def954c3b0b94">DepthFramePtr</a> &amp;depthFrame, <a class="el" href="a00393.xhtml#gaa76130d0eab72467d2bc95ff35b2a619">PointCloudFramePtr</a> &amp;pointCloudFrame)</td></tr>
<tr class="separator:a9d0303d4bcac0324076b3dd8c25779ee inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7b78a2c00ba1ff45f1f18e71ac9811 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a5f7b78a2c00ba1ff45f1f18e71ac9811">_captureLoop</a> ()</td></tr>
<tr class="separator:a5f7b78a2c00ba1ff45f1f18e71ac9811 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cf4eb0a80d99bb828a7939ba1eb1cf4 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a6cf4eb0a80d99bb828a7939ba1eb1cf4">_captureThreadWrapper</a> ()</td></tr>
<tr class="separator:a6cf4eb0a80d99bb828a7939ba1eb1cf4 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c6537c591d1ca2d8b8974856173c77f inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a4c6537c591d1ca2d8b8974856173c77f">_writeToFrameStream</a> (<a class="el" href="a00393.xhtml#ga525d4dd3a9a42ded749fe45be39103f4">RawFramePtr</a> &amp;rawUnprocessed)</td></tr>
<tr class="separator:a4c6537c591d1ca2d8b8974856173c77f inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac850b3829f41e647686610c283197ea6 inherit pro_methods_a00036"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac850b3829f41e647686610c283197ea6 inherit pro_methods_a00036"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, T &amp;value, <a class="el" href="a00398.xhtml">bool</a> refresh=false) const </td></tr>
<tr class="separator:ac850b3829f41e647686610c283197ea6 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a474dfafecfd8b2a97a924aeab8a82a3c inherit pro_methods_a00036"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a474dfafecfd8b2a97a924aeab8a82a3c inherit pro_methods_a00036"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a> (const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;<a class="el" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>, const T &amp;value)</td></tr>
<tr class="separator:a474dfafecfd8b2a97a924aeab8a82a3c inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81260a37bfc6da411b8d3d71342a2eda inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a81260a37bfc6da411b8d3d71342a2eda">_getMaximumFrameSize</a> (<a class="el" href="a00071.xhtml">FrameSize</a> &amp;s) const =0</td></tr>
<tr class="separator:a81260a37bfc6da411b8d3d71342a2eda inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf7acaaf80bd7a4f2f5bd936a238b794 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#acf7acaaf80bd7a4f2f5bd936a238b794">_getSupportedVideoModes</a> (<a class="el" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector</a>&lt; <a class="el" href="a00134.xhtml">SupportedVideoMode</a> &gt; &amp;supportedVideoModes) const =0</td></tr>
<tr class="separator:acf7acaaf80bd7a4f2f5bd936a238b794 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add8cc4b2d188a551ed0b38ae9a772c39 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#add8cc4b2d188a551ed0b38ae9a772c39">_getMaximumVideoMode</a> (<a class="el" href="a00181.xhtml">VideoMode</a> &amp;videoMode) const =0</td></tr>
<tr class="separator:add8cc4b2d188a551ed0b38ae9a772c39 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae09d2aaee73e56b4b488897f6081191e inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ae09d2aaee73e56b4b488897f6081191e">_getROI</a> (<a class="el" href="a00120.xhtml">RegionOfInterest</a> &amp;roi)=0</td></tr>
<tr class="separator:ae09d2aaee73e56b4b488897f6081191e inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf9d83ca0b30727b3a10c6fd61fa71d8 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aaf9d83ca0b30727b3a10c6fd61fa71d8">_setROI</a> (const <a class="el" href="a00120.xhtml">RegionOfInterest</a> &amp;roi)=0</td></tr>
<tr class="separator:aaf9d83ca0b30727b3a10c6fd61fa71d8 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd4032323e0fb81aa25c94975d1c8848 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#afd4032323e0fb81aa25c94975d1c8848">_allowedROI</a> (<a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;message)=0</td></tr>
<tr class="separator:afd4032323e0fb81aa25c94975d1c8848 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afff47fe9f8c277e0628f3bd63f81c0bb inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#afff47fe9f8c277e0628f3bd63f81c0bb">_getFieldOfView</a> (<a class="el" href="a00396.xhtml">float</a> &amp;fovHalfAngle) const =0</td></tr>
<tr class="separator:afff47fe9f8c277e0628f3bd63f81c0bb inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5dc62a724d86d03ddbdc89d0800d1a4 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ae5dc62a724d86d03ddbdc89d0800d1a4">_makeID</a> ()</td></tr>
<tr class="separator:ae5dc62a724d86d03ddbdc89d0800d1a4 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6175ce727cf70df66f06ae1d9b3a3266 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a6175ce727cf70df66f06ae1d9b3a3266">_applyConfigParams</a> (const <a class="el" href="a00029.xhtml">ConfigSet</a> *params)</td></tr>
<tr class="separator:a6175ce727cf70df66f06ae1d9b3a3266 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca7a6cb1df8643f0b38745286ac2844 inherit pro_methods_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aeca7a6cb1df8643f0b38745286ac2844">_init</a> ()</td></tr>
<tr class="separator:aeca7a6cb1df8643f0b38745286ac2844 inherit pro_methods_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a33b211a51910c3d766a01de8ad852bb3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00113.xhtml">Ptr</a>&lt; <a class="el" href="a00158.xhtml">ToFFrameGenerator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">_tofFrameGenerator</a></td></tr>
<tr class="separator:a33b211a51910c3d766a01de8ad852bb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_a00154"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_a00154')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a00154.xhtml">Voxel::TI::ToFCameraBase</a></td></tr>
<tr class="memitem:a57dd9fd869638f6c6fb0ddfc4eace41d inherit pro_attribs_a00154"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00393.xhtml#ga5ba7e0c57baf013d4f6aec578c449b68">RawDataFramePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a57dd9fd869638f6c6fb0ddfc4eace41d">_rawDataFrame</a></td></tr>
<tr class="separator:a57dd9fd869638f6c6fb0ddfc4eace41d inherit pro_attribs_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36ff4b899df57f8638dbb87ddf55358e inherit pro_attribs_a00154"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00113.xhtml">Ptr</a>&lt; <a class="el" href="a00157.xhtml">ToFDepthFrameGenerator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00154.xhtml#a36ff4b899df57f8638dbb87ddf55358e">_tofDepthFrameGenerator</a></td></tr>
<tr class="separator:a36ff4b899df57f8638dbb87ddf55358e inherit pro_attribs_a00154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_a00036"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_a00036')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a00036.xhtml">Voxel::DepthCamera</a></td></tr>
<tr class="memitem:a8104146f2193bdf7d8735322f6d7d4b8 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a8104146f2193bdf7d8735322f6d7d4b8">_device</a></td></tr>
<tr class="separator:a8104146f2193bdf7d8735322f6d7d4b8 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a686f8777c25329a48a072731dfb8f741 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a686f8777c25329a48a072731dfb8f741">_name</a></td></tr>
<tr class="separator:a686f8777c25329a48a072731dfb8f741 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d339872e6938f5f22f5f267a5e4ce1b inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a5d339872e6938f5f22f5f267a5e4ce1b">_id</a></td></tr>
<tr class="separator:a5d339872e6938f5f22f5f267a5e4ce1b inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d40cef0e3a18580b38d754384d46861 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map</a>&lt; <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>, <a class="el" href="a00394.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">ParameterPtr</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a1d40cef0e3a18580b38d754384d46861">_parameters</a></td></tr>
<tr class="separator:a1d40cef0e3a18580b38d754384d46861 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae0b0dd148ef1483d19b91075731c40d inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00113.xhtml">Ptr</a>&lt; <a class="el" href="a00121.xhtml">RegisterProgrammer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aae0b0dd148ef1483d19b91075731c40d">_programmer</a></td></tr>
<tr class="separator:aae0b0dd148ef1483d19b91075731c40d inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8acadbf3c84ceff6316daf87be27e198 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00113.xhtml">Ptr</a>&lt; <a class="el" href="a00129.xhtml">Streamer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a8acadbf3c84ceff6316daf87be27e198">_streamer</a></td></tr>
<tr class="separator:a8acadbf3c84ceff6316daf87be27e198 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a362721afc357a809ba414b004e02b179 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00387.xhtml#ae90ade57270a382c026b83858b2118cc">FrameGeneratorPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a362721afc357a809ba414b004e02b179">_frameGenerators</a> [3]</td></tr>
<tr class="separator:a362721afc357a809ba414b004e02b179 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88e8422f0cb0fb0d2cd35655f9311505 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00113.xhtml">Ptr</a>&lt; <a class="el" href="a00110.xhtml">PointCloudFrameGenerator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a88e8422f0cb0fb0d2cd35655f9311505">_pointCloudFrameGenerator</a></td></tr>
<tr class="separator:a88e8422f0cb0fb0d2cd35655f9311505 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a931a9c4f3784aac0e146445c679b76 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a9a931a9c4f3784aac0e146445c679b76">_parameterInit</a></td></tr>
<tr class="separator:a9a931a9c4f3784aac0e146445c679b76 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a306af8f6832b1d6f905cc0e889d4fb0e inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00067.xhtml">FrameBufferManager</a>&lt; <a class="el" href="a00119.xhtml">RawFrame</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a306af8f6832b1d6f905cc0e889d4fb0e">_rawFrameBuffers</a></td></tr>
<tr class="separator:a306af8f6832b1d6f905cc0e889d4fb0e inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56e0e2ce24fd8a1b7ce59079b3c8e188 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00067.xhtml">FrameBufferManager</a>&lt; <a class="el" href="a00040.xhtml">DepthFrame</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a56e0e2ce24fd8a1b7ce59079b3c8e188">_depthFrameBuffers</a></td></tr>
<tr class="separator:a56e0e2ce24fd8a1b7ce59079b3c8e188 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2def715a73e9c7cda9c25fe65c06a12 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00067.xhtml">FrameBufferManager</a><br class="typebreak"/>
&lt; <a class="el" href="a00109.xhtml">PointCloudFrame</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aa2def715a73e9c7cda9c25fe65c06a12">_pointCloudBuffers</a></td></tr>
<tr class="separator:aa2def715a73e9c7cda9c25fe65c06a12 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c29b26252d3c701cf3f7e1f0447a77a inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00062.xhtml">FilterSet</a>&lt; <a class="el" href="a00119.xhtml">RawFrame</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a2c29b26252d3c701cf3f7e1f0447a77a">_unprocessedFilters</a></td></tr>
<tr class="separator:a2c29b26252d3c701cf3f7e1f0447a77a inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c69e53cf937eda229cd31eb239d216 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00062.xhtml">FilterSet</a>&lt; <a class="el" href="a00119.xhtml">RawFrame</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#af8c69e53cf937eda229cd31eb239d216">_processedFilters</a></td></tr>
<tr class="separator:af8c69e53cf937eda229cd31eb239d216 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad572875597eef0cf7715e1b2da912312 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00062.xhtml">FilterSet</a>&lt; <a class="el" href="a00040.xhtml">DepthFrame</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#ad572875597eef0cf7715e1b2da912312">_depthFilters</a></td></tr>
<tr class="separator:ad572875597eef0cf7715e1b2da912312 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6de8673bd9a71b16a174dc70040ae1d9 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00387.xhtml#af3be04486cf40b361ee3f52134e56de3">FrameStreamWriterPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a6de8673bd9a71b16a174dc70040ae1d9">_frameStreamWriter</a></td></tr>
<tr class="separator:a6de8673bd9a71b16a174dc70040ae1d9 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14954c5dd88a2c9a97d1c26b3be8c25c inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00036.xhtml#a51b5a8e577f30c01995e56b5aeb8c503">CallbackType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a14954c5dd88a2c9a97d1c26b3be8c25c">_callback</a> [<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a84e021c4d6219fe494a434c9372ddd6f">FRAME_TYPE_COUNT</a>]</td></tr>
<tr class="separator:a14954c5dd88a2c9a97d1c26b3be8c25c inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6fefb4f250b38b849367d9097516538 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#aa6fefb4f250b38b849367d9097516538">_callBackTypesRegistered</a> = 0</td></tr>
<tr class="separator:aa6fefb4f250b38b849367d9097516538 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af045e164acb3df00c85a960bc69b236b inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00390.xhtml#ga8cfcff6ffb6df788d9e843c834f744bf">ThreadPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#af045e164acb3df00c85a960bc69b236b">_captureThread</a></td></tr>
<tr class="separator:af045e164acb3df00c85a960bc69b236b inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76bb2d1f6ca98e669f82fe46b5cf4b25 inherit pro_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00398.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a76bb2d1f6ca98e669f82fe46b5cf4b25">_running</a></td></tr>
<tr class="separator:a76bb2d1f6ca98e669f82fe46b5cf4b25 inherit pro_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a5b1efa220db6e60faa3b28e29391369a"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00153.xhtml#a5b1efa220db6e60faa3b28e29391369a">IntegrationTimeParameter</a></td></tr>
<tr class="separator:a5b1efa220db6e60faa3b28e29391369a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_a00036"><td colspan="2" onclick="javascript:toggleInherit('pub_types_a00036')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="a00036.xhtml">Voxel::DepthCamera</a></td></tr>
<tr class="memitem:a894e0d17fd2315cf1eedc1cb60114a91 inherit pub_types_a00036"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> { <br/>
&#160;&#160;<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">FRAME_RAW_FRAME_UNPROCESSED</a> = 0, 
<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">FRAME_RAW_FRAME_PROCESSED</a> = 1, 
<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a">FRAME_DEPTH_FRAME</a> = 2, 
<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a02adc8c3b4eea97c2fe50cd82f0e4b11">FRAME_XYZI_POINT_CLOUD_FRAME</a> = 3, 
<br/>
&#160;&#160;<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a84e021c4d6219fe494a434c9372ddd6f">FRAME_TYPE_COUNT</a> = 4
<br/>
 }</td></tr>
<tr class="separator:a894e0d17fd2315cf1eedc1cb60114a91 inherit pub_types_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51b5a8e577f30c01995e56b5aeb8c503 inherit pub_types_a00036"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="a00390.xhtml#ga8aaf1e39b1b92e5f2ae6cf09d3ca0623">Function</a>&lt; void(<a class="el" href="a00036.xhtml">DepthCamera</a> <br class="typebreak"/>
&amp;camera, const <a class="el" href="a00065.xhtml">Frame</a> &amp;frame, <br class="typebreak"/>
<a class="el" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">FrameType</a> callBackType)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a51b5a8e577f30c01995e56b5aeb8c503">CallbackType</a></td></tr>
<tr class="separator:a51b5a8e577f30c01995e56b5aeb8c503 inherit pub_types_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_a00036"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_a00036')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="a00036.xhtml">Voxel::DepthCamera</a></td></tr>
<tr class="memitem:a5dbe82899ae021d3f2cdd25ca2212f77 inherit pub_attribs_a00036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00096.xhtml">MainConfigurationFile</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a></td></tr>
<tr class="separator:a5dbe82899ae021d3f2cdd25ca2212f77 inherit pub_attribs_a00036"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="a00323_source.xhtml#l00099">99</a> of file <a class="el" href="a00323_source.xhtml">ToFCamera.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9edbd71eb5407521ff1430920fb19b10"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Voxel::TI::ToFCamera::ToFCamera </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00074">74</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00068">Voxel::DepthCamera::_frameGenerators</a>, <a class="el" href="a00325_source.xhtml#l00040">Voxel::TI::ToFCameraBase::_tofDepthFrameGenerator</a>, and <a class="el" href="a00323_source.xhtml#l00148">_tofFrameGenerator</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                                        : <a class="code" href="a00154.xhtml#a146c7d6cc98e2ce0783c399131a51288">ToFCameraBase</a>(name, device),</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<a class="code" href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">_tofFrameGenerator</a>(<span class="keyword">new</span> ToFFrameGenerator())</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <a class="code" href="a00036.xhtml#a362721afc357a809ba414b004e02b179">_frameGenerators</a>[0] = std::dynamic_pointer_cast&lt;FrameGenerator&gt;(<a class="code" href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">_tofFrameGenerator</a>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <a class="code" href="a00154.xhtml#a36ff4b899df57f8638dbb87ddf55358e">_tofDepthFrameGenerator</a>-&gt;setProcessedFrameGenerator(<a class="code" href="a00036.xhtml#a362721afc357a809ba414b004e02b179">_frameGenerators</a>[0]);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="ttc" id="a00154_xhtml_a146c7d6cc98e2ce0783c399131a51288"><div class="ttname"><a href="a00154.xhtml#a146c7d6cc98e2ce0783c399131a51288">Voxel::TI::ToFCameraBase::ToFCameraBase</a></div><div class="ttdeci">ToFCameraBase(const String &amp;name, DevicePtr device)</div><div class="ttdef"><b>Definition:</b> <a href="a00325_source.xhtml#l00043">ToFCameraBase.h:43</a></div></div>
<div class="ttc" id="a00036_xhtml_a362721afc357a809ba414b004e02b179"><div class="ttname"><a href="a00036.xhtml#a362721afc357a809ba414b004e02b179">Voxel::DepthCamera::_frameGenerators</a></div><div class="ttdeci">FrameGeneratorPtr _frameGenerators[3]</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00068">DepthCamera.h:68</a></div></div>
<div class="ttc" id="a00154_xhtml_a36ff4b899df57f8638dbb87ddf55358e"><div class="ttname"><a href="a00154.xhtml#a36ff4b899df57f8638dbb87ddf55358e">Voxel::TI::ToFCameraBase::_tofDepthFrameGenerator</a></div><div class="ttdeci">Ptr&lt; ToFDepthFrameGenerator &gt; _tofDepthFrameGenerator</div><div class="ttdef"><b>Definition:</b> <a href="a00325_source.xhtml#l00040">ToFCameraBase.h:40</a></div></div>
<div class="ttc" id="a00153_xhtml_a33b211a51910c3d766a01de8ad852bb3"><div class="ttname"><a href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">Voxel::TI::ToFCamera::_tofFrameGenerator</a></div><div class="ttdeci">Ptr&lt; ToFFrameGenerator &gt; _tofFrameGenerator</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00148">ToFCamera.h:148</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9af9f38b195594306c2949286f778b55"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Voxel::TI::ToFCamera::~ToFCamera </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00323_source.xhtml#l00158">158</a> of file <a class="el" href="a00323_source.xhtml">ToFCamera.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5ce6e98d8496efd0b62d926e73809034"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_applyCalibrationParams </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="a00152.xhtml#a7e4dc34e693e01f3a74d098b411a209f">Voxel::TI::ToFCalculusCamera</a>, <a class="el" href="a00164.xhtml#a8f4687aa4c53a91e680f1ea9805a9b06">Voxel::TI::ToFTintinCamera</a>, and <a class="el" href="a00159.xhtml#ae4ffc0d48d8bec78f4f7d9f9e1fde5ab">Voxel::TI::ToFHaddockCamera</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>.</p>

<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a5ce6e98d8496efd0b62d926e73809034_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0a4ebf0ead1c805fd1cdbe6eff0dacb3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getAmplitudeNormalizingFactor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00396.xhtml">float</a> &amp;&#160;</td>
          <td class="paramname"><em>factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00154.xhtml#aff5c5aefff04e8514ab56adde5e25c28">Voxel::TI::ToFCameraBase</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00340">340</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  factor = 1.0/(1 &lt;&lt; 12);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abb0e21a487e4d2ae08031d0078b0578d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getBinning </td>
          <td>(</td>
          <td class="paramtype">uint &amp;&#160;</td>
          <td class="paramname"><em>rowsToMerge</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint &amp;&#160;</td>
          <td class="paramname"><em>columnsToMerge</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00152.xhtml#a2ae0adf15a0b7951ea6c5fd5ed7d71c8">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00303">303</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00323_source.xhtml#l00031">BIN_COLS_TO_MERGE</a>, <a class="el" href="a00323_source.xhtml#l00030">BIN_ROWS_TO_MERGE</a>, <a class="el" href="a00323_source.xhtml#l00034">BINNING_EN</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, and <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>.</p>
<div class="fragment"><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;{</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="keywordtype">bool</span> binningEnabled;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="keywordflow">if</span>(!<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#a56f390f7e00e80a1b2cadaf910867be2">BINNING_EN</a>, binningEnabled))</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not get binning_en&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="keywordflow">if</span>(!binningEnabled)</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  {</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    rowsToMerge = columnsToMerge = 1;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="keywordflow">if</span>(!<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#a491729c22212139331d290fe120e5ad4">BIN_ROWS_TO_MERGE</a>, rowsToMerge) || !<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#a7ee992b483fa82544116ec464190c5d5">BIN_COLS_TO_MERGE</a>, columnsToMerge))</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set binning related parameters&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;}</div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00323_xhtml_a491729c22212139331d290fe120e5ad4"><div class="ttname"><a href="a00323.xhtml#a491729c22212139331d290fe120e5ad4">BIN_ROWS_TO_MERGE</a></div><div class="ttdeci">#define BIN_ROWS_TO_MERGE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00030">ToFCamera.h:30</a></div></div>
<div class="ttc" id="a00323_xhtml_a7ee992b483fa82544116ec464190c5d5"><div class="ttname"><a href="a00323.xhtml#a7ee992b483fa82544116ec464190c5d5">BIN_COLS_TO_MERGE</a></div><div class="ttdeci">#define BIN_COLS_TO_MERGE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00031">ToFCamera.h:31</a></div></div>
<div class="ttc" id="a00323_xhtml_a56f390f7e00e80a1b2cadaf910867be2"><div class="ttname"><a href="a00323.xhtml#a56f390f7e00e80a1b2cadaf910867be2">BINNING_EN</a></div><div class="ttdeci">#define BINNING_EN</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00034">ToFCamera.h:34</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_abb0e21a487e4d2ae08031d0078b0578d_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="acf6c3a732c5a47f38f2d461d76709091"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getBytesPerPixel </td>
          <td>(</td>
          <td class="paramtype">uint &amp;&#160;</td>
          <td class="paramname"><em>bpp</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#a1c54da1edd7c0c5e367cf980b13be313">Voxel::DepthCamera</a>.</p>

<p>Reimplemented in <a class="el" href="a00152.xhtml#a68216293b638e716a5ccb421d0eeee65">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00261">261</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00353">Voxel::DepthCamera::_get()</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, and <a class="el" href="a00323_source.xhtml#l00043">PIXEL_DATA_SIZE</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00452">_getMaximumFrameRate()</a>, <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>, and <a class="el" href="a00322_source.xhtml#l00165">_setFrameSize()</a>.</p>
<div class="fragment"><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;{</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordtype">int</span> b;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#a9f7523defb3a4cf023393ae8c1208964">PIXEL_DATA_SIZE</a>, b))</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not get current bytes per pixel&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  bpp = (uint)b;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ac850b3829f41e647686610c283197ea6"><div class="ttname"><a href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">Voxel::DepthCamera::_get</a></div><div class="ttdeci">bool _get(const String &amp;name, T &amp;value, bool refresh=false) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00353">DepthCamera.h:353</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00323_xhtml_a9f7523defb3a4cf023393ae8c1208964"><div class="ttname"><a href="a00323.xhtml#a9f7523defb3a4cf023393ae8c1208964">PIXEL_DATA_SIZE</a></div><div class="ttdeci">#define PIXEL_DATA_SIZE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00043">ToFCamera.h:43</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_acf6c3a732c5a47f38f2d461d76709091_cgraph.svg" width="606" height="103"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_acf6c3a732c5a47f38f2d461d76709091_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a967be15ba3e8a06e47861b83a0c12821"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getCurrentProfileID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00397.xhtml">int</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#a3b88dacf88d024f94764b2643b05e7f8">Voxel::DepthCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00649">649</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00353">Voxel::DepthCamera::_get()</a>, <a class="el" href="a00153.xhtml#accb2b81d2ef01ba4fbe1ae19da43263a">_getCurrentProfileRegisterName()</a>, and <a class="el" href="a00234_source.xhtml#l00162">Voxel::DepthCamera::name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;{</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;  <a class="code" href="a00130.xhtml">String</a> <a class="code" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#accb2b81d2ef01ba4fbe1ae19da43263a">_getCurrentProfileRegisterName</a>(name))</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;  </div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;  uint i;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(name, i, <span class="keyword">true</span>))</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;  {</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <span class="keywordtype">id</span> = i;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    </div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <span class="keywordflow">if</span>(<span class="keywordtype">id</span> == 0)</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    </div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;  }</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ae3d6fcc6d4a20d1ad2de809ad65ecc34"><div class="ttname"><a href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">Voxel::DepthCamera::name</a></div><div class="ttdeci">const String &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00162">DepthCamera.h:162</a></div></div>
<div class="ttc" id="a00036_xhtml_ac850b3829f41e647686610c283197ea6"><div class="ttname"><a href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">Voxel::DepthCamera::_get</a></div><div class="ttdeci">bool _get(const String &amp;name, T &amp;value, bool refresh=false) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00353">DepthCamera.h:353</a></div></div>
<div class="ttc" id="a00130_xhtml"><div class="ttname"><a href="a00130.xhtml">String</a></div></div>
<div class="ttc" id="a00153_xhtml_accb2b81d2ef01ba4fbe1ae19da43263a"><div class="ttname"><a href="a00153.xhtml#accb2b81d2ef01ba4fbe1ae19da43263a">Voxel::TI::ToFCamera::_getCurrentProfileRegisterName</a></div><div class="ttdeci">virtual bool _getCurrentProfileRegisterName(String &amp;name)=0</div></div>
</div><!-- fragment -->
<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a967be15ba3e8a06e47861b83a0c12821_cgraph.svg" width="100%" height="426"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="accb2b81d2ef01ba4fbe1ae19da43263a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getCurrentProfileRegisterName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="a00152.xhtml#a5fa54026ef0cd20c60b8273aeceffc52">Voxel::TI::ToFCalculusCamera</a>, <a class="el" href="a00164.xhtml#ae87dd774f151c8442cf19a4c2c99c05a">Voxel::TI::ToFTintinCamera</a>, and <a class="el" href="a00159.xhtml#a237738a268bc786e4ded86a5a2343c1e">Voxel::TI::ToFHaddockCamera</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00649">_getCurrentProfileID()</a>, and <a class="el" href="a00322_source.xhtml#l00668">_saveCurrentProfileID()</a>.</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_accb2b81d2ef01ba4fbe1ae19da43263a_icgraph.svg" width="438" height="116"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a6f61d229b9f83102d07d25d88ea03efa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getDepthScalingFactor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00396.xhtml">float</a> &amp;&#160;</td>
          <td class="paramname"><em>factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00154.xhtml#a8e7ab32dbadf1d8c7fd4e7611e7e63c4">Voxel::TI::ToFCameraBase</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00500">500</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00153.xhtml#a5d92b8693fedf8a76572074c2e2aeca1">_getIlluminationFrequency()</a>, <a class="el" href="a00322_source.xhtml#l00346">_is16BitModeEnabled()</a>, <a class="el" href="a00225_source.xhtml#l00023">CALIB_DISABLE</a>, <a class="el" href="a00225_source.xhtml#l00017">CALIB_SECT_FREQUENCY</a>, <a class="el" href="a00234_source.xhtml#l00152">Voxel::DepthCamera::configFile</a>, <a class="el" href="a00323_source.xhtml#l00064">DEALIAS_EN</a>, <a class="el" href="a00323_source.xhtml#l00066">DEALIASED_PHASE_MASK</a>, <a class="el" href="a00223_source.xhtml#l00133">FLOAT_EPSILON</a>, <a class="el" href="a00224_source.xhtml#l00375">Voxel::ConfigurationFile::getFloat()</a>, <a class="el" href="a00224_source.xhtml#l00354">Voxel::ConfigurationFile::getInteger()</a>, <a class="el" href="a00224_source.xhtml#l01109">Voxel::MainConfigurationFile::isPresent()</a>, <a class="el" href="a00323_source.xhtml#l00061">MA</a>, <a class="el" href="a00323_source.xhtml#l00062">MB</a>, and <a class="el" href="a00323_source.xhtml#l00083">SPEED_OF_LIGHT</a>.</p>
<div class="fragment"><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;{</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="keywordtype">bool</span> dealiasingEnabled;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  </div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  <span class="keywordflow">if</span>(!<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#ad6f06ffa4e8061d3454ddb53859bf903">DEALIAS_EN</a>, dealiasingEnabled))</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;  </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;  <span class="keywordtype">float</span> illuminationFrequency;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#a5d92b8693fedf8a76572074c2e2aeca1">_getIlluminationFrequency</a>(illuminationFrequency))</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  </div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;  <span class="keywordtype">bool</span> frequencyCorrectionPresent = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;  <span class="keywordtype">float</span> frequencyCorrection = 1.0f;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  </div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;  <span class="keywordtype">bool</span> frequencyCalibEnable = (<a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#aeefbdefcac8743d6f08c25109480da2f">getInteger</a>(<span class="stringliteral">&quot;calib&quot;</span>, <a class="code" href="a00225.xhtml#ae55e84aac4891989671236c687d72ee6">CALIB_DISABLE</a>) &amp; <a class="code" href="a00225.xhtml#a9dc5aeabc0d142f1f9af7aa84f44b815">CALIB_SECT_FREQUENCY</a>) == 0;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  </div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;  <span class="keywordflow">if</span>(frequencyCalibEnable &amp;&amp; <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00096.xhtml#a0d061a6b01c29c40af3288f4783c3c07">isPresent</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;freq_corr&quot;</span>))</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  {</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    frequencyCorrection = <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;freq_corr&quot;</span>);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    </div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keywordflow">if</span>(frequencyCorrection &lt; <a class="code" href="a00390.xhtml#gab1f73cdbc25f0b24f246249efa98ee14">FLOAT_EPSILON</a>)</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;      frequencyCorrectionPresent = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      frequencyCorrectionPresent = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  }</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  </div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;  <span class="keywordflow">if</span>(dealiasingEnabled)</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;  {</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="keywordtype">bool</span> is16BitMode;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <span class="keywordtype">int</span> dealiasedPhaseMask;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    uint ma, mb;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    </div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#af3a59471799f2526c520511f688d247c">_is16BitModeEnabled</a>(is16BitMode) || !<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#adbe83c8d05ca0dbca4b01c206c7ee6b9">DEALIASED_PHASE_MASK</a>, dealiasedPhaseMask) </div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;      || !<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#a11702dcb3f3ec928229185eb96686127">MA</a>, ma) || !<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#aa6b38d492364d98453284934ed7caee9">MB</a>, mb))</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    </div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="keywordflow">if</span>(frequencyCorrectionPresent)</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;      illuminationFrequency *= frequencyCorrection;</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    </div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="keywordflow">if</span>(is16BitMode)</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;      factor = <a class="code" href="a00323.xhtml#a7b5cb503d827fae6b26874e21254d68f">SPEED_OF_LIGHT</a>/1E6f/(2*(1 &lt;&lt; 16)*illuminationFrequency)*(1 &lt;&lt; (5 - dealiasedPhaseMask))*1.0f/ma/mb;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;      factor = <a class="code" href="a00323.xhtml#a7b5cb503d827fae6b26874e21254d68f">SPEED_OF_LIGHT</a>/1E6f/(2*(1 &lt;&lt; 12)*illuminationFrequency)*(1 &lt;&lt; (5 - dealiasedPhaseMask))*1.0f/ma/mb;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    </div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  }</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  {</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordflow">if</span>(frequencyCorrectionPresent)</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;      illuminationFrequency *= frequencyCorrection;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    </div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    factor = <a class="code" href="a00323.xhtml#a7b5cb503d827fae6b26874e21254d68f">SPEED_OF_LIGHT</a>/1E6f/2/illuminationFrequency/(1 &lt;&lt; 12);</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;}</div>
<div class="ttc" id="a00031_xhtml_aeefbdefcac8743d6f08c25109480da2f"><div class="ttname"><a href="a00031.xhtml#aeefbdefcac8743d6f08c25109480da2f">Voxel::ConfigurationFile::getInteger</a></div><div class="ttdeci">int getInteger(const String &amp;section, const String &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l00354">Configuration.cpp:354</a></div></div>
<div class="ttc" id="a00096_xhtml_a0d061a6b01c29c40af3288f4783c3c07"><div class="ttname"><a href="a00096.xhtml#a0d061a6b01c29c40af3288f4783c3c07">Voxel::MainConfigurationFile::isPresent</a></div><div class="ttdeci">virtual bool isPresent(const String &amp;section, const String &amp;name, bool includeParent=true) const </div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l01109">Configuration.cpp:1109</a></div></div>
<div class="ttc" id="a00153_xhtml_af3a59471799f2526c520511f688d247c"><div class="ttname"><a href="a00153.xhtml#af3a59471799f2526c520511f688d247c">Voxel::TI::ToFCamera::_is16BitModeEnabled</a></div><div class="ttdeci">virtual bool _is16BitModeEnabled(bool &amp;mode16Bit)</div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00346">ToFCamera.cpp:346</a></div></div>
<div class="ttc" id="a00323_xhtml_a7b5cb503d827fae6b26874e21254d68f"><div class="ttname"><a href="a00323.xhtml#a7b5cb503d827fae6b26874e21254d68f">SPEED_OF_LIGHT</a></div><div class="ttdeci">#define SPEED_OF_LIGHT</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00083">ToFCamera.h:83</a></div></div>
<div class="ttc" id="a00323_xhtml_adbe83c8d05ca0dbca4b01c206c7ee6b9"><div class="ttname"><a href="a00323.xhtml#adbe83c8d05ca0dbca4b01c206c7ee6b9">DEALIASED_PHASE_MASK</a></div><div class="ttdeci">#define DEALIASED_PHASE_MASK</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00066">ToFCamera.h:66</a></div></div>
<div class="ttc" id="a00390_xhtml_gab1f73cdbc25f0b24f246249efa98ee14"><div class="ttname"><a href="a00390.xhtml#gab1f73cdbc25f0b24f246249efa98ee14">FLOAT_EPSILON</a></div><div class="ttdeci">#define FLOAT_EPSILON</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00133">Common.h:133</a></div></div>
<div class="ttc" id="a00225_xhtml_a9dc5aeabc0d142f1f9af7aa84f44b815"><div class="ttname"><a href="a00225.xhtml#a9dc5aeabc0d142f1f9af7aa84f44b815">CALIB_SECT_FREQUENCY</a></div><div class="ttdeci">#define CALIB_SECT_FREQUENCY</div><div class="ttdef"><b>Definition:</b> <a href="a00225_source.xhtml#l00017">Configuration.h:17</a></div></div>
<div class="ttc" id="a00225_xhtml_ae55e84aac4891989671236c687d72ee6"><div class="ttname"><a href="a00225.xhtml#ae55e84aac4891989671236c687d72ee6">CALIB_DISABLE</a></div><div class="ttdeci">#define CALIB_DISABLE</div><div class="ttdef"><b>Definition:</b> <a href="a00225_source.xhtml#l00023">Configuration.h:23</a></div></div>
<div class="ttc" id="a00323_xhtml_ad6f06ffa4e8061d3454ddb53859bf903"><div class="ttname"><a href="a00323.xhtml#ad6f06ffa4e8061d3454ddb53859bf903">DEALIAS_EN</a></div><div class="ttdeci">#define DEALIAS_EN</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00064">ToFCamera.h:64</a></div></div>
<div class="ttc" id="a00323_xhtml_aa6b38d492364d98453284934ed7caee9"><div class="ttname"><a href="a00323.xhtml#aa6b38d492364d98453284934ed7caee9">MB</a></div><div class="ttdeci">#define MB</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00062">ToFCamera.h:62</a></div></div>
<div class="ttc" id="a00323_xhtml_a11702dcb3f3ec928229185eb96686127"><div class="ttname"><a href="a00323.xhtml#a11702dcb3f3ec928229185eb96686127">MA</a></div><div class="ttdeci">#define MA</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00061">ToFCamera.h:61</a></div></div>
<div class="ttc" id="a00036_xhtml_a5dbe82899ae021d3f2cdd25ca2212f77"><div class="ttname"><a href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">Voxel::DepthCamera::configFile</a></div><div class="ttdeci">MainConfigurationFile configFile</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00152">DepthCamera.h:152</a></div></div>
<div class="ttc" id="a00153_xhtml_a5d92b8693fedf8a76572074c2e2aeca1"><div class="ttname"><a href="a00153.xhtml#a5d92b8693fedf8a76572074c2e2aeca1">Voxel::TI::ToFCamera::_getIlluminationFrequency</a></div><div class="ttdeci">virtual bool _getIlluminationFrequency(float &amp;frequency) const =0</div></div>
<div class="ttc" id="a00031_xhtml_a3145251f8115c7ada128556345a41c62"><div class="ttname"><a href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">Voxel::ConfigurationFile::getFloat</a></div><div class="ttdeci">float getFloat(const String &amp;section, const String &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l00375">Configuration.cpp:375</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a6f61d229b9f83102d07d25d88ea03efa_cgraph.svg" width="100%" height="586"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae43bdefe2031786701b133ce173ad603"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getFrameRate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00069.xhtml">FrameRate</a> &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#a78ac107b9b2ab07b7af7efa9e3cd76cb">Voxel::DepthCamera</a>.</p>

<p>Reimplemented in <a class="el" href="a00152.xhtml#a5b79e231b0c76de19c1d1a3250696618">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00097">97</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00353">Voxel::DepthCamera::_get()</a>, <a class="el" href="a00153.xhtml#ae2c116b5f3e0598f9a449c70f8ff5b6a">_getSystemClockFrequency()</a>, <a class="el" href="a00359_source.xhtml#l00054">Voxel::FrameRate::denominator</a>, <a class="el" href="a00222_source.xhtml#l00135">Voxel::gcd()</a>, <a class="el" href="a00359_source.xhtml#l00054">Voxel::FrameRate::numerator</a>, <a class="el" href="a00323_source.xhtml#l00016">PIX_CNT_MAX</a>, <a class="el" href="a00323_source.xhtml#l00015">PIX_CNT_MAX_SET_FAILED</a>, <a class="el" href="a00321_source.xhtml#l00036">QUAD_CNT_MAX</a>, and <a class="el" href="a00323_source.xhtml#l00018">SUBFRAME_CNT_MAX</a>.</p>

<p>Referenced by <a class="el" href="a00360_source.xhtml#l00164">Voxel::TI::Voxel14Camera::_setStreamerFrameSize()</a>, <a class="el" href="a00366_source.xhtml#l00173">Voxel::TI::VoxelDCamera::_setStreamerFrameSize()</a>, <a class="el" href="a00310_source.xhtml#l00399">Voxel::TI::TintinCDKCamera::_setStreamerFrameSize()</a>, <a class="el" href="a00334_source.xhtml#l00189">Voxel::TI::HaddockUnambiguousRangeParameter::set()</a>, and <a class="el" href="a00336_source.xhtml#l00219">Voxel::TI::TintinUnambiguousRangeParameter::set()</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">bool</span> pixCountSetFailed;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  uint pixCount, sysClkFrequency;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">int</span> quadCount, subFrameCount;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#ab9913dc2b4a5e57e1dcd3c4a2b91c5fe">PIX_CNT_MAX_SET_FAILED</a>, pixCountSetFailed) || pixCountSetFailed)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#ab3ac8a2c94094276db080b7312db2da8">PIX_CNT_MAX</a>, pixCount) || !<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00321.xhtml#a577ff428750eeeb618f2e3fda84fa6da">QUAD_CNT_MAX</a>, quadCount) || !<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#a37c581dd28d3179f8342c19579c7ae7b">SUBFRAME_CNT_MAX</a>, subFrameCount) || !<a class="code" href="a00153.xhtml#ae2c116b5f3e0598f9a449c70f8ff5b6a">_getSystemClockFrequency</a>(sysClkFrequency))</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  uint numerator = sysClkFrequency*1000000,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  denominator = pixCount*quadCount*subFrameCount;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  uint g = <a class="code" href="a00390.xhtml#ga148a066c676b3c831918800b78a2f056">gcd</a>(numerator, denominator);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <a class="code" href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>.numerator = numerator/g;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <a class="code" href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>.denominator = denominator/g;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ac850b3829f41e647686610c283197ea6"><div class="ttname"><a href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">Voxel::DepthCamera::_get</a></div><div class="ttdeci">bool _get(const String &amp;name, T &amp;value, bool refresh=false) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00353">DepthCamera.h:353</a></div></div>
<div class="ttc" id="a00378_xhtml_a56ca3083cd3df8d8feeac39ad5d44478"><div class="ttname"><a href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">CameraSystemIQFrameTest.r</a></div><div class="ttdeci">tuple r</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00018">CameraSystemIQFrameTest.py:18</a></div></div>
<div class="ttc" id="a00153_xhtml_ae2c116b5f3e0598f9a449c70f8ff5b6a"><div class="ttname"><a href="a00153.xhtml#ae2c116b5f3e0598f9a449c70f8ff5b6a">Voxel::TI::ToFCamera::_getSystemClockFrequency</a></div><div class="ttdeci">virtual bool _getSystemClockFrequency(uint &amp;frequency) const =0</div></div>
<div class="ttc" id="a00390_xhtml_ga148a066c676b3c831918800b78a2f056"><div class="ttname"><a href="a00390.xhtml#ga148a066c676b3c831918800b78a2f056">Voxel::gcd</a></div><div class="ttdeci">uint gcd(uint n, uint m)</div><div class="ttdef"><b>Definition:</b> <a href="a00222_source.xhtml#l00135">Common.cpp:135</a></div></div>
<div class="ttc" id="a00323_xhtml_ab3ac8a2c94094276db080b7312db2da8"><div class="ttname"><a href="a00323.xhtml#ab3ac8a2c94094276db080b7312db2da8">PIX_CNT_MAX</a></div><div class="ttdeci">#define PIX_CNT_MAX</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00016">ToFCamera.h:16</a></div></div>
<div class="ttc" id="a00323_xhtml_ab9913dc2b4a5e57e1dcd3c4a2b91c5fe"><div class="ttname"><a href="a00323.xhtml#ab9913dc2b4a5e57e1dcd3c4a2b91c5fe">PIX_CNT_MAX_SET_FAILED</a></div><div class="ttdeci">#define PIX_CNT_MAX_SET_FAILED</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00015">ToFCamera.h:15</a></div></div>
<div class="ttc" id="a00321_xhtml_a577ff428750eeeb618f2e3fda84fa6da"><div class="ttname"><a href="a00321.xhtml#a577ff428750eeeb618f2e3fda84fa6da">QUAD_CNT_MAX</a></div><div class="ttdeci">#define QUAD_CNT_MAX</div><div class="ttdef"><b>Definition:</b> <a href="a00321_source.xhtml#l00036">ToFCalculusCamera.h:36</a></div></div>
<div class="ttc" id="a00323_xhtml_a37c581dd28d3179f8342c19579c7ae7b"><div class="ttname"><a href="a00323.xhtml#a37c581dd28d3179f8342c19579c7ae7b">SUBFRAME_CNT_MAX</a></div><div class="ttdeci">#define SUBFRAME_CNT_MAX</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00018">ToFCamera.h:18</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_ae43bdefe2031786701b133ce173ad603_cgraph.svg" width="656" height="191"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_ae43bdefe2031786701b133ce173ad603_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0a0a64555070bb8804baacb1cdaabfc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getFrameSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00071.xhtml">Voxel::FrameSize</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#a7cca2c2413b60d0d2ef26e0cb8802118">Voxel::DepthCamera</a>.</p>

<p>Reimplemented in <a class="el" href="a00152.xhtml#ae5f99bc01f02bff50db1bb8ebf1e2a30">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00148">148</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00353">Voxel::DepthCamera::_get()</a>, <a class="el" href="a00323_source.xhtml#l00033">BIN_COLUMN_COUNT</a>, <a class="el" href="a00323_source.xhtml#l00032">BIN_ROW_COUNT</a>, <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::height</a>, and <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::width</a>.</p>

<p>Referenced by <a class="el" href="a00262_source.xhtml#l00165">Voxel::TI::HaddockCDKCamera::_initStartParams()</a>, <a class="el" href="a00334_source.xhtml#l00483">Voxel::TI::ToFHaddockCamera::_setROI()</a>, and <a class="el" href="a00336_source.xhtml#l00461">Voxel::TI::ToFTintinCamera::_setROI()</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  uint binRowCount, binColumnCount;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#aa5e588224d388c09eefe1219697d1ce9">BIN_ROW_COUNT</a>, binRowCount) || !<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#a1f40ad65901bfbd577b9ade30c0f2203">BIN_COLUMN_COUNT</a>, binColumnCount))</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  s.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> = binColumnCount;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  s.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> = binRowCount;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ac850b3829f41e647686610c283197ea6"><div class="ttname"><a href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">Voxel::DepthCamera::_get</a></div><div class="ttdeci">bool _get(const String &amp;name, T &amp;value, bool refresh=false) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00353">DepthCamera.h:353</a></div></div>
<div class="ttc" id="a00071_xhtml_ae6de6f5d7fed5fd0af1985f86e3b9e55"><div class="ttname"><a href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">Voxel::FrameSize::height</a></div><div class="ttdeci">uint32_t height</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00022">VideoMode.h:22</a></div></div>
<div class="ttc" id="a00323_xhtml_aa5e588224d388c09eefe1219697d1ce9"><div class="ttname"><a href="a00323.xhtml#aa5e588224d388c09eefe1219697d1ce9">BIN_ROW_COUNT</a></div><div class="ttdeci">#define BIN_ROW_COUNT</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00032">ToFCamera.h:32</a></div></div>
<div class="ttc" id="a00323_xhtml_a1f40ad65901bfbd577b9ade30c0f2203"><div class="ttname"><a href="a00323.xhtml#a1f40ad65901bfbd577b9ade30c0f2203">BIN_COLUMN_COUNT</a></div><div class="ttdeci">#define BIN_COLUMN_COUNT</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00033">ToFCamera.h:33</a></div></div>
<div class="ttc" id="a00071_xhtml_ac3d47cd9b7887dc3de31d95c7b39e8a7"><div class="ttname"><a href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">Voxel::FrameSize::width</a></div><div class="ttdeci">uint32_t width</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00022">VideoMode.h:22</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_a0a0a64555070bb8804baacb1cdaabfc9_cgraph.svg" width="606" height="103"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_a0a0a64555070bb8804baacb1cdaabfc9_icgraph.svg" width="422" height="182"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a5d92b8693fedf8a76572074c2e2aeca1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getIlluminationFrequency </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00396.xhtml">float</a> &amp;&#160;</td>
          <td class="paramname"><em>frequency</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="a00164.xhtml#a18c4ac0c2c51b6f3f211ce9deece45cd">Voxel::TI::ToFTintinCamera</a>, <a class="el" href="a00152.xhtml#a980ca490a7ad223cfb81fb940b1960fd">Voxel::TI::ToFCalculusCamera</a>, and <a class="el" href="a00159.xhtml#a98cd598bb82b407f3e3627e779e3a2b3">Voxel::TI::ToFHaddockCamera</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00500">_getDepthScalingFactor()</a>.</p>

<p><div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_a5d92b8693fedf8a76572074c2e2aeca1_icgraph.svg" width="414" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a3e338b01dde4b43a180b6ebccd4272f5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getMaximumFrameRate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00069.xhtml">FrameRate</a> &amp;&#160;</td>
          <td class="paramname"><em>frameRate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;&#160;</td>
          <td class="paramname"><em>forFrameSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#ae72c02c47f9b4bbf05472b57db48f981">Voxel::DepthCamera</a>.</p>

<p>Reimplemented in <a class="el" href="a00137.xhtml#a29a69e2abead76ff1687621ff0020808">Voxel::TI::TintinCDKCamera</a>, <a class="el" href="a00077.xhtml#ab743b0ea9bc3d1678bd51d4b59b0f8d7">Voxel::TI::HaddockCDKCamera</a>, and <a class="el" href="a00013.xhtml#a9c9f15b80f58686e8d553b5ff90fc272">Voxel::TI::CalculusCDKCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00452">452</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00322_source.xhtml#l00261">_getBytesPerPixel()</a>, <a class="el" href="a00036.xhtml#acf7acaaf80bd7a4f2f5bd936a238b794">Voxel::DepthCamera::_getSupportedVideoModes()</a>, <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::height</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, and <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::width</a>.</p>
<div class="fragment"><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;{</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  Vector&lt;SupportedVideoMode&gt; supportedVideoModes;</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;  </div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;  uint bytesPerPixel;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;  </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#acf7acaaf80bd7a4f2f5bd936a238b794">_getSupportedVideoModes</a>(supportedVideoModes) || !<a class="code" href="a00153.xhtml#acf6c3a732c5a47f38f2d461d76709091">_getBytesPerPixel</a>(bytesPerPixel))</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;  {</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not get supported video modes or current bytes per pixel, to get nearest valid frame size&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  }</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="keywordtype">int</span> minScore = 0;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  <a class="code" href="a00390.xhtml#gac270571570e8333b43ffd3dc6eeed155">IndexType</a> index = -1;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  <span class="keywordtype">int</span> area = forFrameSize.height*forFrameSize.width;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;  </div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  <span class="keywordflow">if</span>(supportedVideoModes.size() &gt; 0)</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keywordflow">for</span>(<a class="code" href="a00390.xhtml#gac270571570e8333b43ffd3dc6eeed155">IndexType</a> i = 0; i &lt; supportedVideoModes.size(); i++)</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    {</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      <span class="keyword">auto</span> &amp;a = supportedVideoModes[i];</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      </div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;      <span class="keywordtype">int</span> scoreA = a.frameSize.width*a.frameSize.height;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      scoreA = (bytesPerPixel != a.bytesPerPixel || scoreA &lt; area || </div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        a.frameSize.width &lt; forFrameSize.width || a.frameSize.height &lt; forFrameSize.height)?0:scoreA;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      </div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;      <span class="keywordflow">if</span>(scoreA &lt; minScore)</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      {</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        minScore = scoreA;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        index = i;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      }</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    </div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keywordflow">if</span>(index &lt; 0)</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    {</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: No supported frame size exists close to the desired frame size. Could not set frame size.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    }</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    frameRate = supportedVideoModes[index].frameRate;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  }</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;  {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: No video modes available for this depth camera.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  }  </div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;}</div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00036_xhtml_acf7acaaf80bd7a4f2f5bd936a238b794"><div class="ttname"><a href="a00036.xhtml#acf7acaaf80bd7a4f2f5bd936a238b794">Voxel::DepthCamera::_getSupportedVideoModes</a></div><div class="ttdeci">virtual bool _getSupportedVideoModes(Vector&lt; SupportedVideoMode &gt; &amp;supportedVideoModes) const =0</div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00390_xhtml_gac270571570e8333b43ffd3dc6eeed155"><div class="ttname"><a href="a00390.xhtml#gac270571570e8333b43ffd3dc6eeed155">Voxel::IndexType</a></div><div class="ttdeci">int IndexType</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00084">Common.h:84</a></div></div>
<div class="ttc" id="a00153_xhtml_acf6c3a732c5a47f38f2d461d76709091"><div class="ttname"><a href="a00153.xhtml#acf6c3a732c5a47f38f2d461d76709091">Voxel::TI::ToFCamera::_getBytesPerPixel</a></div><div class="ttdeci">virtual bool _getBytesPerPixel(uint &amp;bpp) const </div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00261">ToFCamera.cpp:261</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a3e338b01dde4b43a180b6ebccd4272f5_cgraph.svg" width="100%" height="405"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a8722e9125739af3cd8c9291b7b6f126a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getOpDataArrangeMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00397.xhtml">int</a> &amp;&#160;</td>
          <td class="paramname"><em>dataArrangeMode</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00152.xhtml#a0db3c53dd774e063356f8c8632d43853">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00289">289</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, and <a class="el" href="a00323_source.xhtml#l00044">OP_DATA_ARRANGE_MODE</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>.</p>
<div class="fragment"><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;{</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <span class="keywordtype">int</span> b;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordflow">if</span>(!<span class="keyword">get</span>(<a class="code" href="a00323.xhtml#af070193e4584117da1084f946ce0026e">OP_DATA_ARRANGE_MODE</a>, b))</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not get data arrange mode&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  }</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  dataArrangeMode = b;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;}</div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00323_xhtml_af070193e4584117da1084f946ce0026e"><div class="ttname"><a href="a00323.xhtml#af070193e4584117da1084f946ce0026e">OP_DATA_ARRANGE_MODE</a></div><div class="ttdeci">#define OP_DATA_ARRANGE_MODE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00044">ToFCamera.h:44</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a8722e9125739af3cd8c9291b7b6f126a_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae2c116b5f3e0598f9a449c70f8ff5b6a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getSystemClockFrequency </td>
          <td>(</td>
          <td class="paramtype">uint &amp;&#160;</td>
          <td class="paramname"><em>frequency</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="a00164.xhtml#a793dd51b034de659906683a35920b09f">Voxel::TI::ToFTintinCamera</a>, <a class="el" href="a00152.xhtml#a6b9a8cc9fe50a3017cc2a03147c02b7a">Voxel::TI::ToFCalculusCamera</a>, and <a class="el" href="a00159.xhtml#a01be99984c412b2deb15f736a4cd2fef">Voxel::TI::ToFHaddockCamera</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00097">_getFrameRate()</a>, and <a class="el" href="a00322_source.xhtml#l00120">_setFrameRate()</a>.</p>

<p><div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_ae2c116b5f3e0598f9a449c70f8ff5b6a_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a53e0fb4c6f4d4b9ac37b6f1ca763a104"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_getToFFrameType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00393.xhtml#gaf2efbd2e80ce564e84387861880183c3">ToFFrameType</a> &amp;&#160;</td>
          <td class="paramname"><em>frameType</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00152.xhtml#aa845124d2abf45c5afdbb6cb97bd6460">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00558">558</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00353">Voxel::DepthCamera::_get()</a>, <a class="el" href="a00215_source.xhtml#l00018">CameraSystemIQFrameTest::r</a>, <a class="el" href="a00323_source.xhtml#l00080">ToF_FRAME_TYPE</a>, <a class="el" href="a00256_source.xhtml#l00164">Voxel::ToF_I_Q</a>, <a class="el" href="a00256_source.xhtml#l00163">Voxel::ToF_PHASE_AMPLITUDE</a>, and <a class="el" href="a00256_source.xhtml#l00165">Voxel::ToF_QUAD</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>, and <a class="el" href="a00262_source.xhtml#l00188">Voxel::TI::HaddockCDKCamera::_setStreamerFrameSize()</a>.</p>
<div class="fragment"><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;{</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  </div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#ae8188b3098b2648d21e1ea70b70f12e6">ToF_FRAME_TYPE</a>, r))</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;  {</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    frameType = <a class="code" href="a00393.xhtml#ggaf2efbd2e80ce564e84387861880183c3a46597d64b21ac1e72e03726887731c18">ToF_PHASE_AMPLITUDE</a>;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;  }</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;  </div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;  <span class="keywordflow">if</span>(r == 1)</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    frameType = <a class="code" href="a00393.xhtml#ggaf2efbd2e80ce564e84387861880183c3a9c633015a0d24549efc7a9454e5dbf9a">ToF_I_Q</a>;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(r == 0)</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    frameType = <a class="code" href="a00393.xhtml#ggaf2efbd2e80ce564e84387861880183c3a46597d64b21ac1e72e03726887731c18">ToF_PHASE_AMPLITUDE</a>;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(r == 15)</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    frameType = <a class="code" href="a00393.xhtml#ggaf2efbd2e80ce564e84387861880183c3ad84ef700394985f8de6bf2035981c740">ToF_QUAD</a>;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// Unknown frame type</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    </div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ac850b3829f41e647686610c283197ea6"><div class="ttname"><a href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">Voxel::DepthCamera::_get</a></div><div class="ttdeci">bool _get(const String &amp;name, T &amp;value, bool refresh=false) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00353">DepthCamera.h:353</a></div></div>
<div class="ttc" id="a00393_xhtml_ggaf2efbd2e80ce564e84387861880183c3a46597d64b21ac1e72e03726887731c18"><div class="ttname"><a href="a00393.xhtml#ggaf2efbd2e80ce564e84387861880183c3a46597d64b21ac1e72e03726887731c18">Voxel::ToF_PHASE_AMPLITUDE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00163">Frame.h:163</a></div></div>
<div class="ttc" id="a00378_xhtml_a56ca3083cd3df8d8feeac39ad5d44478"><div class="ttname"><a href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">CameraSystemIQFrameTest.r</a></div><div class="ttdeci">tuple r</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00018">CameraSystemIQFrameTest.py:18</a></div></div>
<div class="ttc" id="a00393_xhtml_ggaf2efbd2e80ce564e84387861880183c3a9c633015a0d24549efc7a9454e5dbf9a"><div class="ttname"><a href="a00393.xhtml#ggaf2efbd2e80ce564e84387861880183c3a9c633015a0d24549efc7a9454e5dbf9a">Voxel::ToF_I_Q</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00164">Frame.h:164</a></div></div>
<div class="ttc" id="a00323_xhtml_ae8188b3098b2648d21e1ea70b70f12e6"><div class="ttname"><a href="a00323.xhtml#ae8188b3098b2648d21e1ea70b70f12e6">ToF_FRAME_TYPE</a></div><div class="ttdeci">#define ToF_FRAME_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00080">ToFCamera.h:80</a></div></div>
<div class="ttc" id="a00393_xhtml_ggaf2efbd2e80ce564e84387861880183c3ad84ef700394985f8de6bf2035981c740"><div class="ttname"><a href="a00393.xhtml#ggaf2efbd2e80ce564e84387861880183c3ad84ef700394985f8de6bf2035981c740">Voxel::ToF_QUAD</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00165">Frame.h:165</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_a53e0fb4c6f4d4b9ac37b6f1ca763a104_cgraph.svg" width="606" height="103"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a53e0fb4c6f4d4b9ac37b6f1ca763a104_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a8fd9aae6546d426f494b20633a881442"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_init </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00082">82</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00233_source.xhtml#l00055">Voxel::DepthCamera::_addParameters()</a>, <a class="el" href="a00324_source.xhtml#l00015">Voxel::TI::ToFCameraBase::_init()</a>, <a class="el" href="a00234_source.xhtml#l00064">Voxel::DepthCamera::_programmer</a>, and <a class="el" href="a00323_source.xhtml#l00160">IntegrationTimeParameter</a>.</p>

<p>Referenced by <a class="el" href="a00334_source.xhtml#l00343">Voxel::TI::ToFHaddockCamera::_init()</a>, <a class="el" href="a00320_source.xhtml#l00365">Voxel::TI::ToFCalculusCamera::_init()</a>, and <a class="el" href="a00336_source.xhtml#l00363">Voxel::TI::ToFTintinCamera::_init()</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#a677a46dca2838e514d3238fb19d3400e">_addParameters</a>({</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="a00394.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">ParameterPtr</a>(<span class="keyword">new</span> <a class="code" href="a00153.xhtml#a5b1efa220db6e60faa3b28e29391369a">IntegrationTimeParameter</a>(*<span class="keyword">this</span>, *<a class="code" href="a00036.xhtml#aae0b0dd148ef1483d19b91075731c40d">_programmer</a>))</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  }))</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00154.xhtml#a34c90601da611e5cb61bd7a35f03a5f7">ToFCameraBase::_init</a>())</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_aae0b0dd148ef1483d19b91075731c40d"><div class="ttname"><a href="a00036.xhtml#aae0b0dd148ef1483d19b91075731c40d">Voxel::DepthCamera::_programmer</a></div><div class="ttdeci">Ptr&lt; RegisterProgrammer &gt; _programmer</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00064">DepthCamera.h:64</a></div></div>
<div class="ttc" id="a00154_xhtml_a34c90601da611e5cb61bd7a35f03a5f7"><div class="ttname"><a href="a00154.xhtml#a34c90601da611e5cb61bd7a35f03a5f7">Voxel::TI::ToFCameraBase::_init</a></div><div class="ttdeci">bool _init()</div><div class="ttdef"><b>Definition:</b> <a href="a00324_source.xhtml#l00015">ToFCameraBase.cpp:15</a></div></div>
<div class="ttc" id="a00394_xhtml_ga43826f19575cabc6b78bf62c0c1acd31"><div class="ttname"><a href="a00394.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">Voxel::ParameterPtr</a></div><div class="ttdeci">Ptr&lt; Parameter &gt; ParameterPtr</div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00086">Parameter.h:86</a></div></div>
<div class="ttc" id="a00153_xhtml_a5b1efa220db6e60faa3b28e29391369a"><div class="ttname"><a href="a00153.xhtml#a5b1efa220db6e60faa3b28e29391369a">Voxel::TI::ToFCamera::IntegrationTimeParameter</a></div><div class="ttdeci">friend class IntegrationTimeParameter</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00160">ToFCamera.h:160</a></div></div>
<div class="ttc" id="a00036_xhtml_a677a46dca2838e514d3238fb19d3400e"><div class="ttname"><a href="a00036.xhtml#a677a46dca2838e514d3238fb19d3400e">Voxel::DepthCamera::_addParameters</a></div><div class="ttdeci">bool _addParameters(const Vector&lt; ParameterPtr &gt; &amp;params)</div><div class="ttdef"><b>Definition:</b> <a href="a00233_source.xhtml#l00055">DepthCamera.cpp:55</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a8fd9aae6546d426f494b20633a881442_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a8fd9aae6546d426f494b20633a881442_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a52686f695d06876ef5a89e453c6a8ba3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_initStartParams </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="a00154.xhtml#aceb0704d27455da6268e3d5b4a92c411">Voxel::TI::ToFCameraBase</a>.</p>

<p>Reimplemented in <a class="el" href="a00164.xhtml#a17729406fadceea890b4e0e079aede46">Voxel::TI::ToFTintinCamera</a>, <a class="el" href="a00152.xhtml#adf420ba5e95dcb0cbd3da90f446242d9">Voxel::TI::ToFCalculusCamera</a>, <a class="el" href="a00137.xhtml#a35274b5fd95ea088be4bc0637328d5f4">Voxel::TI::TintinCDKCamera</a>, <a class="el" href="a00077.xhtml#a4e8e32000eca9b81bc6401a8d512cbc7">Voxel::TI::HaddockCDKCamera</a>, <a class="el" href="a00013.xhtml#a2474713056342fa6774ff5a165961052">Voxel::TI::CalculusCDKCamera</a>, <a class="el" href="a00186.xhtml#ae0706724a5ebbb978d41fb2633af5040">Voxel::TI::VoxelDCamera</a>, <a class="el" href="a00182.xhtml#ad5dcde935444ac28a6e0b5705f504573">Voxel::TI::Voxel14Camera</a>, and <a class="el" href="a00159.xhtml#ae87b0ca3c8867d1b520c0165d526e79d">Voxel::TI::ToFHaddockCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00367">367</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00153.xhtml#a5ce6e98d8496efd0b62d926e73809034">_applyCalibrationParams()</a>, <a class="el" href="a00322_source.xhtml#l00303">_getBinning()</a>, <a class="el" href="a00322_source.xhtml#l00261">_getBytesPerPixel()</a>, <a class="el" href="a00322_source.xhtml#l00289">_getOpDataArrangeMode()</a>, <a class="el" href="a00322_source.xhtml#l00558">_getToFFrameType()</a>, <a class="el" href="a00324_source.xhtml#l00105">Voxel::TI::ToFCameraBase::_initStartParams()</a>, <a class="el" href="a00322_source.xhtml#l00346">_is16BitModeEnabled()</a>, <a class="el" href="a00153.xhtml#a3c35074af2f6b686cea15db188b9c53f">_isHistogramEnabled()</a>, <a class="el" href="a00234_source.xhtml#l00070">Voxel::DepthCamera::_pointCloudFrameGenerator</a>, <a class="el" href="a00323_source.xhtml#l00148">_tofFrameGenerator</a>, <a class="el" href="a00225_source.xhtml#l00023">CALIB_DISABLE</a>, <a class="el" href="a00225_source.xhtml#l00018">CALIB_SECT_CROSS_TALK</a>, <a class="el" href="a00225_source.xhtml#l00016">CALIB_SECT_LENS</a>, <a class="el" href="a00225_source.xhtml#l00022">CALIB_SECT_PIXELWISE_OFFSET</a>, <a class="el" href="a00234_source.xhtml#l00152">Voxel::DepthCamera::configFile</a>, <a class="el" href="a00219_source.xhtml#l00052">CameraSystemTest::frameSize</a>, <a class="el" href="a00224_source.xhtml#l01094">Voxel::MainConfigurationFile::get()</a>, <a class="el" href="a00225_source.xhtml#l00404">Voxel::MainConfigurationFile::getFile()</a>, <a class="el" href="a00224_source.xhtml#l00375">Voxel::ConfigurationFile::getFloat()</a>, <a class="el" href="a00234_source.xhtml#l00284">Voxel::DepthCamera::getFrameSize()</a>, <a class="el" href="a00224_source.xhtml#l00354">Voxel::ConfigurationFile::getInteger()</a>, <a class="el" href="a00234_source.xhtml#l00296">Voxel::DepthCamera::getMaximumFrameSize()</a>, <a class="el" href="a00234_source.xhtml#l00340">Voxel::DepthCamera::getROI()</a>, <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::height</a>, <a class="el" href="a00224_source.xhtml#l01109">Voxel::MainConfigurationFile::isPresent()</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="a00323_source.xhtml#l00044">OP_DATA_ARRANGE_MODE</a>, <a class="el" href="a00323_source.xhtml#l00043">PIXEL_DATA_SIZE</a>, <a class="el" href="a00321_source.xhtml#l00036">QUAD_CNT_MAX</a>, <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::width</a>, <a class="el" href="a00359_source.xhtml#l00038">Voxel::RegionOfInterest::x</a>, and <a class="el" href="a00359_source.xhtml#l00038">Voxel::RegionOfInterest::y</a>.</p>

<p>Referenced by <a class="el" href="a00334_source.xhtml#l00440">Voxel::TI::ToFHaddockCamera::_initStartParams()</a>, <a class="el" href="a00262_source.xhtml#l00165">Voxel::TI::HaddockCDKCamera::_initStartParams()</a>, <a class="el" href="a00320_source.xhtml#l00417">Voxel::TI::ToFCalculusCamera::_initStartParams()</a>, and <a class="el" href="a00336_source.xhtml#l00414">Voxel::TI::ToFTintinCamera::_initStartParams()</a>.</p>
<div class="fragment"><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;{</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  RegionOfInterest roi;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  uint rowsToMerge, columnsToMerge;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  </div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#abb0e21a487e4d2ae08031d0078b0578d">_getBinning</a>(rowsToMerge, columnsToMerge) ||</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    !<a class="code" href="a00036.xhtml#ab2be6abc24dd344f63e082c19273d833">getROI</a>(roi))</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="keywordtype">int</span> lensCalibEnable = (<a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#aeefbdefcac8743d6f08c25109480da2f">getInteger</a>(<span class="stringliteral">&quot;calib&quot;</span>, <a class="code" href="a00225.xhtml#ae55e84aac4891989671236c687d72ee6">CALIB_DISABLE</a>) &amp; <a class="code" href="a00225.xhtml#ad6efafa2c360e8848c3627e605202b33">CALIB_SECT_LENS</a>) == 0;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#a88e8422f0cb0fb0d2cd35655f9311505">_pointCloudFrameGenerator</a>-&gt;setParameters(</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    roi.x, roi.y, roi.width, roi.height,</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    rowsToMerge, columnsToMerge,</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;fx&quot;</span>)*lensCalibEnable, <span class="comment">// fx</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;fy&quot;</span>)*lensCalibEnable, <span class="comment">// fy</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;cx&quot;</span>)*lensCalibEnable,<span class="comment">// cx</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;cy&quot;</span>)*lensCalibEnable,<span class="comment">// cy</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;k1&quot;</span>)*lensCalibEnable,<span class="comment">// k1</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;k2&quot;</span>)*lensCalibEnable,<span class="comment">// k2</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;k3&quot;</span>)*lensCalibEnable,<span class="comment">// k3</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;p1&quot;</span>)*lensCalibEnable,<span class="comment">// p1</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">getFloat</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;p2&quot;</span>)*lensCalibEnable <span class="comment">// p2</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  ))</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set parameters to PointCloudFrameGenerator&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  </div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  FrameSize maxFrameSize, <a class="code" href="a00379.xhtml#ac0913e3b4768858f3236123c3040a226">frameSize</a>;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#aa229ee837c73aa2c78a8bd7a26fa0955">getMaximumFrameSize</a>(maxFrameSize) || !<a class="code" href="a00036.xhtml#a52d1041f172901ff9206b1b409d4711d">getFrameSize</a>(frameSize))</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  {</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not get frame related parameters. Cannot convert raw data to ToF data&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  uint bytesPerPixel;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  <span class="keywordtype">int</span> dataArrangeMode;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="keywordtype">int</span> quadCount;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  <a class="code" href="a00393.xhtml#gaf2efbd2e80ce564e84387861880183c3">ToFFrameType</a> type;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  </div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="keywordtype">bool</span> dealiased16BitMode;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#acf6c3a732c5a47f38f2d461d76709091">_getBytesPerPixel</a>(bytesPerPixel) || !<a class="code" href="a00153.xhtml#a8722e9125739af3cd8c9291b7b6f126a">_getOpDataArrangeMode</a>(dataArrangeMode) || !<a class="code" href="a00153.xhtml#a53e0fb4c6f4d4b9ac37b6f1ca763a104">_getToFFrameType</a>(type) ||</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    !<a class="code" href="a00153.xhtml#af3a59471799f2526c520511f688d247c">_is16BitModeEnabled</a>(dealiased16BitMode) || !<span class="keyword">get</span>(<a class="code" href="a00321.xhtml#a577ff428750eeeb618f2e3fda84fa6da">QUAD_CNT_MAX</a>, quadCount))</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  {</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Failed to read &quot;</span> &lt;&lt; <a class="code" href="a00323.xhtml#a9f7523defb3a4cf023393ae8c1208964">PIXEL_DATA_SIZE</a> &lt;&lt; <span class="stringliteral">&quot; or &quot;</span> </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    &lt;&lt; <a class="code" href="a00323.xhtml#af070193e4584117da1084f946ce0026e">OP_DATA_ARRANGE_MODE</a> &lt;&lt; <span class="stringliteral">&quot; or &quot;</span> &lt;&lt; type &lt;&lt; std::endl;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  </div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  Vector&lt;int16_t&gt; phaseOffsets;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  <a class="code" href="a00130.xhtml">String</a> phaseOffsetFileName;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  </div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  <span class="keywordtype">bool</span> pixelwiseCalibEnable = (<a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#aeefbdefcac8743d6f08c25109480da2f">getInteger</a>(<span class="stringliteral">&quot;calib&quot;</span>, <a class="code" href="a00225.xhtml#ae55e84aac4891989671236c687d72ee6">CALIB_DISABLE</a>) &amp; <a class="code" href="a00225.xhtml#a7edf7eb3203e3dc3e7ce4ef28d430a29">CALIB_SECT_PIXELWISE_OFFSET</a>) == 0;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="keywordtype">bool</span> crossTalkCalibEnable = (<a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00031.xhtml#aeefbdefcac8743d6f08c25109480da2f">getInteger</a>(<span class="stringliteral">&quot;calib&quot;</span>, <a class="code" href="a00225.xhtml#ae55e84aac4891989671236c687d72ee6">CALIB_DISABLE</a>) &amp; <a class="code" href="a00225.xhtml#a418214b9d2088cdbf002b474a67a1522">CALIB_SECT_CROSS_TALK</a>) == 0;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  </div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;pixel-wise phase offset active = &quot;</span> &lt;&lt; pixelwiseCalibEnable &lt;&lt; std::endl;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keywordflow">if</span>(pixelwiseCalibEnable &amp;&amp; <a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00096.xhtml#a0d061a6b01c29c40af3288f4783c3c07">isPresent</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;phasecorrection&quot;</span>) &amp;&amp; !<a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00096.xhtml#a700e33f6f37c59f24bdea5db5a037898">getFile</a>&lt;int16_t&gt;(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;phasecorrection&quot;</span>, phaseOffsetFileName, phaseOffsets))</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  {</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not read phase offset correction file&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  </div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">_tofFrameGenerator</a>-&gt;setParameters(phaseOffsetFileName, phaseOffsets, bytesPerPixel, </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    dataArrangeMode, roi, maxFrameSize, frameSize, rowsToMerge, columnsToMerge, <a class="code" href="a00153.xhtml#a3c35074af2f6b686cea15db188b9c53f">_isHistogramEnabled</a>(),</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                                        crossTalkCalibEnable?<a class="code" href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">configFile</a>.<a class="code" href="a00096.xhtml#a0450eaddb1180226c1a3e898e978aba4">get</a>(<span class="stringliteral">&quot;calib&quot;</span>, <span class="stringliteral">&quot;cross_talk_coeff&quot;</span>):<span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                                        type, (uint32_t) quadCount, dealiased16BitMode</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  ))</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  {</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set parameters to ToFFrameGenerator&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  }</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  </div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#a5ce6e98d8496efd0b62d926e73809034">_applyCalibrationParams</a>() || !<a class="code" href="a00154.xhtml#aceb0704d27455da6268e3d5b4a92c411">ToFCameraBase::_initStartParams</a>())</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  {</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set calibration parameters&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;  }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;  </div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ab2be6abc24dd344f63e082c19273d833"><div class="ttname"><a href="a00036.xhtml#ab2be6abc24dd344f63e082c19273d833">Voxel::DepthCamera::getROI</a></div><div class="ttdeci">bool getROI(RegionOfInterest &amp;roi)</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00340">DepthCamera.h:340</a></div></div>
<div class="ttc" id="a00031_xhtml_aeefbdefcac8743d6f08c25109480da2f"><div class="ttname"><a href="a00031.xhtml#aeefbdefcac8743d6f08c25109480da2f">Voxel::ConfigurationFile::getInteger</a></div><div class="ttdeci">int getInteger(const String &amp;section, const String &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l00354">Configuration.cpp:354</a></div></div>
<div class="ttc" id="a00225_xhtml_a418214b9d2088cdbf002b474a67a1522"><div class="ttname"><a href="a00225.xhtml#a418214b9d2088cdbf002b474a67a1522">CALIB_SECT_CROSS_TALK</a></div><div class="ttdeci">#define CALIB_SECT_CROSS_TALK</div><div class="ttdef"><b>Definition:</b> <a href="a00225_source.xhtml#l00018">Configuration.h:18</a></div></div>
<div class="ttc" id="a00096_xhtml_a0d061a6b01c29c40af3288f4783c3c07"><div class="ttname"><a href="a00096.xhtml#a0d061a6b01c29c40af3288f4783c3c07">Voxel::MainConfigurationFile::isPresent</a></div><div class="ttdeci">virtual bool isPresent(const String &amp;section, const String &amp;name, bool includeParent=true) const </div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l01109">Configuration.cpp:1109</a></div></div>
<div class="ttc" id="a00096_xhtml_a0450eaddb1180226c1a3e898e978aba4"><div class="ttname"><a href="a00096.xhtml#a0450eaddb1180226c1a3e898e978aba4">Voxel::MainConfigurationFile::get</a></div><div class="ttdeci">virtual String get(const String &amp;section, const String &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l01094">Configuration.cpp:1094</a></div></div>
<div class="ttc" id="a00153_xhtml_af3a59471799f2526c520511f688d247c"><div class="ttname"><a href="a00153.xhtml#af3a59471799f2526c520511f688d247c">Voxel::TI::ToFCamera::_is16BitModeEnabled</a></div><div class="ttdeci">virtual bool _is16BitModeEnabled(bool &amp;mode16Bit)</div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00346">ToFCamera.cpp:346</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00225_xhtml_a7edf7eb3203e3dc3e7ce4ef28d430a29"><div class="ttname"><a href="a00225.xhtml#a7edf7eb3203e3dc3e7ce4ef28d430a29">CALIB_SECT_PIXELWISE_OFFSET</a></div><div class="ttdeci">#define CALIB_SECT_PIXELWISE_OFFSET</div><div class="ttdef"><b>Definition:</b> <a href="a00225_source.xhtml#l00022">Configuration.h:22</a></div></div>
<div class="ttc" id="a00130_xhtml"><div class="ttname"><a href="a00130.xhtml">String</a></div></div>
<div class="ttc" id="a00153_xhtml_a3c35074af2f6b686cea15db188b9c53f"><div class="ttname"><a href="a00153.xhtml#a3c35074af2f6b686cea15db188b9c53f">Voxel::TI::ToFCamera::_isHistogramEnabled</a></div><div class="ttdeci">virtual bool _isHistogramEnabled() const =0</div></div>
<div class="ttc" id="a00225_xhtml_ad6efafa2c360e8848c3627e605202b33"><div class="ttname"><a href="a00225.xhtml#ad6efafa2c360e8848c3627e605202b33">CALIB_SECT_LENS</a></div><div class="ttdeci">#define CALIB_SECT_LENS</div><div class="ttdef"><b>Definition:</b> <a href="a00225_source.xhtml#l00016">Configuration.h:16</a></div></div>
<div class="ttc" id="a00153_xhtml_a5ce6e98d8496efd0b62d926e73809034"><div class="ttname"><a href="a00153.xhtml#a5ce6e98d8496efd0b62d926e73809034">Voxel::TI::ToFCamera::_applyCalibrationParams</a></div><div class="ttdeci">virtual bool _applyCalibrationParams()=0</div></div>
<div class="ttc" id="a00036_xhtml_aa229ee837c73aa2c78a8bd7a26fa0955"><div class="ttname"><a href="a00036.xhtml#aa229ee837c73aa2c78a8bd7a26fa0955">Voxel::DepthCamera::getMaximumFrameSize</a></div><div class="ttdeci">bool getMaximumFrameSize(FrameSize &amp;s) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00296">DepthCamera.h:296</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00393_xhtml_gaf2efbd2e80ce564e84387861880183c3"><div class="ttname"><a href="a00393.xhtml#gaf2efbd2e80ce564e84387861880183c3">Voxel::ToFFrameType</a></div><div class="ttdeci">ToFFrameType</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00162">Frame.h:162</a></div></div>
<div class="ttc" id="a00153_xhtml_abb0e21a487e4d2ae08031d0078b0578d"><div class="ttname"><a href="a00153.xhtml#abb0e21a487e4d2ae08031d0078b0578d">Voxel::TI::ToFCamera::_getBinning</a></div><div class="ttdeci">virtual bool _getBinning(uint &amp;rowsToMerge, uint &amp;columnsToMerge) const </div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00303">ToFCamera.cpp:303</a></div></div>
<div class="ttc" id="a00225_xhtml_ae55e84aac4891989671236c687d72ee6"><div class="ttname"><a href="a00225.xhtml#ae55e84aac4891989671236c687d72ee6">CALIB_DISABLE</a></div><div class="ttdeci">#define CALIB_DISABLE</div><div class="ttdef"><b>Definition:</b> <a href="a00225_source.xhtml#l00023">Configuration.h:23</a></div></div>
<div class="ttc" id="a00323_xhtml_af070193e4584117da1084f946ce0026e"><div class="ttname"><a href="a00323.xhtml#af070193e4584117da1084f946ce0026e">OP_DATA_ARRANGE_MODE</a></div><div class="ttdeci">#define OP_DATA_ARRANGE_MODE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00044">ToFCamera.h:44</a></div></div>
<div class="ttc" id="a00153_xhtml_a53e0fb4c6f4d4b9ac37b6f1ca763a104"><div class="ttname"><a href="a00153.xhtml#a53e0fb4c6f4d4b9ac37b6f1ca763a104">Voxel::TI::ToFCamera::_getToFFrameType</a></div><div class="ttdeci">virtual bool _getToFFrameType(ToFFrameType &amp;frameType) const </div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00558">ToFCamera.cpp:558</a></div></div>
<div class="ttc" id="a00321_xhtml_a577ff428750eeeb618f2e3fda84fa6da"><div class="ttname"><a href="a00321.xhtml#a577ff428750eeeb618f2e3fda84fa6da">QUAD_CNT_MAX</a></div><div class="ttdeci">#define QUAD_CNT_MAX</div><div class="ttdef"><b>Definition:</b> <a href="a00321_source.xhtml#l00036">ToFCalculusCamera.h:36</a></div></div>
<div class="ttc" id="a00036_xhtml_a88e8422f0cb0fb0d2cd35655f9311505"><div class="ttname"><a href="a00036.xhtml#a88e8422f0cb0fb0d2cd35655f9311505">Voxel::DepthCamera::_pointCloudFrameGenerator</a></div><div class="ttdeci">Ptr&lt; PointCloudFrameGenerator &gt; _pointCloudFrameGenerator</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00070">DepthCamera.h:70</a></div></div>
<div class="ttc" id="a00153_xhtml_a8722e9125739af3cd8c9291b7b6f126a"><div class="ttname"><a href="a00153.xhtml#a8722e9125739af3cd8c9291b7b6f126a">Voxel::TI::ToFCamera::_getOpDataArrangeMode</a></div><div class="ttdeci">virtual bool _getOpDataArrangeMode(int &amp;dataArrangeMode) const </div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00289">ToFCamera.cpp:289</a></div></div>
<div class="ttc" id="a00379_xhtml_ac0913e3b4768858f3236123c3040a226"><div class="ttname"><a href="a00379.xhtml#ac0913e3b4768858f3236123c3040a226">CameraSystemTest.frameSize</a></div><div class="ttdeci">tuple frameSize</div><div class="ttdef"><b>Definition:</b> <a href="a00219_source.xhtml#l00052">CameraSystemTest.py:52</a></div></div>
<div class="ttc" id="a00154_xhtml_aceb0704d27455da6268e3d5b4a92c411"><div class="ttname"><a href="a00154.xhtml#aceb0704d27455da6268e3d5b4a92c411">Voxel::TI::ToFCameraBase::_initStartParams</a></div><div class="ttdeci">virtual bool _initStartParams()</div><div class="ttdef"><b>Definition:</b> <a href="a00324_source.xhtml#l00105">ToFCameraBase.cpp:105</a></div></div>
<div class="ttc" id="a00036_xhtml_a52d1041f172901ff9206b1b409d4711d"><div class="ttname"><a href="a00036.xhtml#a52d1041f172901ff9206b1b409d4711d">Voxel::DepthCamera::getFrameSize</a></div><div class="ttdeci">bool getFrameSize(FrameSize &amp;s) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00284">DepthCamera.h:284</a></div></div>
<div class="ttc" id="a00153_xhtml_a33b211a51910c3d766a01de8ad852bb3"><div class="ttname"><a href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">Voxel::TI::ToFCamera::_tofFrameGenerator</a></div><div class="ttdeci">Ptr&lt; ToFFrameGenerator &gt; _tofFrameGenerator</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00148">ToFCamera.h:148</a></div></div>
<div class="ttc" id="a00036_xhtml_a5dbe82899ae021d3f2cdd25ca2212f77"><div class="ttname"><a href="a00036.xhtml#a5dbe82899ae021d3f2cdd25ca2212f77">Voxel::DepthCamera::configFile</a></div><div class="ttdeci">MainConfigurationFile configFile</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00152">DepthCamera.h:152</a></div></div>
<div class="ttc" id="a00153_xhtml_acf6c3a732c5a47f38f2d461d76709091"><div class="ttname"><a href="a00153.xhtml#acf6c3a732c5a47f38f2d461d76709091">Voxel::TI::ToFCamera::_getBytesPerPixel</a></div><div class="ttdeci">virtual bool _getBytesPerPixel(uint &amp;bpp) const </div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00261">ToFCamera.cpp:261</a></div></div>
<div class="ttc" id="a00323_xhtml_a9f7523defb3a4cf023393ae8c1208964"><div class="ttname"><a href="a00323.xhtml#a9f7523defb3a4cf023393ae8c1208964">PIXEL_DATA_SIZE</a></div><div class="ttdeci">#define PIXEL_DATA_SIZE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00043">ToFCamera.h:43</a></div></div>
<div class="ttc" id="a00031_xhtml_a3145251f8115c7ada128556345a41c62"><div class="ttname"><a href="a00031.xhtml#a3145251f8115c7ada128556345a41c62">Voxel::ConfigurationFile::getFloat</a></div><div class="ttdeci">float getFloat(const String &amp;section, const String &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l00375">Configuration.cpp:375</a></div></div>
<div class="ttc" id="a00096_xhtml_a700e33f6f37c59f24bdea5db5a037898"><div class="ttname"><a href="a00096.xhtml#a700e33f6f37c59f24bdea5db5a037898">Voxel::MainConfigurationFile::getFile</a></div><div class="ttdeci">bool getFile(const String &amp;section, const String &amp;name, String &amp;fileName, Vector&lt; T &gt; &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="a00225_source.xhtml#l00404">Configuration.h:404</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a52686f695d06876ef5a89e453c6a8ba3_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a52686f695d06876ef5a89e453c6a8ba3_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="af3a59471799f2526c520511f688d247c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_is16BitModeEnabled </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00398.xhtml">bool</a> &amp;&#160;</td>
          <td class="paramname"><em>mode16Bit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00152.xhtml#a2fd54119f2dedce23fb3ba34285c8412">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00346">346</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00323_source.xhtml#l00065">DEALIAS_16BIT_OP_ENABLE</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00500">_getDepthScalingFactor()</a>, and <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>.</p>
<div class="fragment"><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">get</span>(<a class="code" href="a00323.xhtml#a9bfb324c7631b4409720989e1b835dc6">DEALIAS_16BIT_OP_ENABLE</a>, mode16Bit);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div>
<div class="ttc" id="a00323_xhtml_a9bfb324c7631b4409720989e1b835dc6"><div class="ttname"><a href="a00323.xhtml#a9bfb324c7631b4409720989e1b835dc6">DEALIAS_16BIT_OP_ENABLE</a></div><div class="ttdeci">#define DEALIAS_16BIT_OP_ENABLE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00065">ToFCamera.h:65</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_af3a59471799f2526c520511f688d247c_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a3c35074af2f6b686cea15db188b9c53f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_isHistogramEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="a00152.xhtml#acacec7d730d4ee148cdaae77fe20174e">Voxel::TI::ToFCalculusCamera</a>, <a class="el" href="a00164.xhtml#a5e833d269e32fe13e4bb3d8110610c8e">Voxel::TI::ToFTintinCamera</a>, and <a class="el" href="a00159.xhtml#acefce35a07b1fbc4b16c64326d1e76af">Voxel::TI::ToFHaddockCamera</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>.</p>

<p><div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a3c35074af2f6b686cea15db188b9c53f_icgraph.svg" width="100%" height="534"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa0cafec75f5994ed727f4de2a448efa9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_processRawFrame </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00393.xhtml#ga525d4dd3a9a42ded749fe45be39103f4">RawFramePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>rawFrameInput</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00393.xhtml#ga525d4dd3a9a42ded749fe45be39103f4">RawFramePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>rawFrameOutput</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#ae261f29fddf1a44937aa60953adbceb3">Voxel::DepthCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00351">351</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00323_source.xhtml#l00148">_tofFrameGenerator</a>, <a class="el" href="a00268_source.xhtml#l00018">LensCalibrationTest::p1</a>, and <a class="el" href="a00268_source.xhtml#l00019">LensCalibrationTest::p2</a>.</p>
<div class="fragment"><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;{</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <a class="code" href="a00393.xhtml#gab87cda13e81bb3795571b50983350b97">FramePtr</a> <a class="code" href="a00380.xhtml#a7709843a973932e0b1313ac1628ece59">p1</a> = std::dynamic_pointer_cast&lt;Frame&gt;(rawFrameInput);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <a class="code" href="a00393.xhtml#gab87cda13e81bb3795571b50983350b97">FramePtr</a> <a class="code" href="a00380.xhtml#a8cd39b525ac87092acb7f7bd4be6911a">p2</a> = std::dynamic_pointer_cast&lt;Frame&gt;(rawFrameOutput);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  <span class="keywordtype">bool</span> ret = <a class="code" href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">_tofFrameGenerator</a>-&gt;generate(p1, p2);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  <span class="keywordflow">if</span>(ret)</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  {</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    rawFrameOutput = std::dynamic_pointer_cast&lt;RawFrame&gt;(<a class="code" href="a00380.xhtml#a8cd39b525ac87092acb7f7bd4be6911a">p2</a>);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  }</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;}</div>
<div class="ttc" id="a00393_xhtml_gab87cda13e81bb3795571b50983350b97"><div class="ttname"><a href="a00393.xhtml#gab87cda13e81bb3795571b50983350b97">Voxel::FramePtr</a></div><div class="ttdeci">Ptr&lt; Frame &gt; FramePtr</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00053">Frame.h:53</a></div></div>
<div class="ttc" id="a00380_xhtml_a7709843a973932e0b1313ac1628ece59"><div class="ttname"><a href="a00380.xhtml#a7709843a973932e0b1313ac1628ece59">LensCalibrationTest.p1</a></div><div class="ttdeci">float p1</div><div class="ttdef"><b>Definition:</b> <a href="a00268_source.xhtml#l00018">LensCalibrationTest.py:18</a></div></div>
<div class="ttc" id="a00380_xhtml_a8cd39b525ac87092acb7f7bd4be6911a"><div class="ttname"><a href="a00380.xhtml#a8cd39b525ac87092acb7f7bd4be6911a">LensCalibrationTest.p2</a></div><div class="ttdeci">float p2</div><div class="ttdef"><b>Definition:</b> <a href="a00268_source.xhtml#l00019">LensCalibrationTest.py:19</a></div></div>
<div class="ttc" id="a00153_xhtml_a33b211a51910c3d766a01de8ad852bb3"><div class="ttname"><a href="a00153.xhtml#a33b211a51910c3d766a01de8ad852bb3">Voxel::TI::ToFCamera::_tofFrameGenerator</a></div><div class="ttdeci">Ptr&lt; ToFFrameGenerator &gt; _tofFrameGenerator</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00148">ToFCamera.h:148</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3b0e000ee9cebb4c946bc0e6ad6dcafc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#ac90898776b55e5f4174dc8bae46c7a95">Voxel::DepthCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00581">581</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00260">Voxel::DepthCamera::set()</a>, and <a class="el" href="a00323_source.xhtml#l00081">SOFTWARE_RESET</a>.</p>
<div class="fragment"><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;{</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="a00036.xhtml#a4f1c6d826c1842d7bc3fbeea5ebb9616">set</a>(<a class="code" href="a00323.xhtml#a037e040e09163f56b458554229b045f1">SOFTWARE_RESET</a>, <span class="keyword">true</span>); <span class="comment">// Reset the chipset</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;}</div>
<div class="ttc" id="a00323_xhtml_a037e040e09163f56b458554229b045f1"><div class="ttname"><a href="a00323.xhtml#a037e040e09163f56b458554229b045f1">SOFTWARE_RESET</a></div><div class="ttdeci">#define SOFTWARE_RESET</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00081">ToFCamera.h:81</a></div></div>
<div class="ttc" id="a00036_xhtml_a4f1c6d826c1842d7bc3fbeea5ebb9616"><div class="ttname"><a href="a00036.xhtml#a4f1c6d826c1842d7bc3fbeea5ebb9616">Voxel::DepthCamera::set</a></div><div class="ttdeci">bool set(const String &amp;name, const T &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00260">DepthCamera.h:260</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a3b0e000ee9cebb4c946bc0e6ad6dcafc_cgraph.svg" width="100%" height="377"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae0e0e5e4394bae4bb6db858ec4916e28"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_saveCurrentProfileID </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00397.xhtml">int</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#ae83d835673eb530c1202138be0270d4c">Voxel::DepthCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00668">668</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00153.xhtml#accb2b81d2ef01ba4fbe1ae19da43263a">_getCurrentProfileRegisterName()</a>, <a class="el" href="a00234_source.xhtml#l00383">Voxel::DepthCamera::_set()</a>, <a class="el" href="a00234_source.xhtml#l00164">Voxel::DepthCamera::id()</a>, and <a class="el" href="a00234_source.xhtml#l00162">Voxel::DepthCamera::name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;{</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;  <a class="code" href="a00130.xhtml">String</a> <a class="code" href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">name</a>;</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#accb2b81d2ef01ba4fbe1ae19da43263a">_getCurrentProfileRegisterName</a>(name))</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  </div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;  uint i = <a class="code" href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">id</a>;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(name, i);</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ad9fa96ac56384c771fcdfcc76c0e3b2b"><div class="ttname"><a href="a00036.xhtml#ad9fa96ac56384c771fcdfcc76c0e3b2b">Voxel::DepthCamera::id</a></div><div class="ttdeci">const String &amp; id() const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00164">DepthCamera.h:164</a></div></div>
<div class="ttc" id="a00036_xhtml_ae3d6fcc6d4a20d1ad2de809ad65ecc34"><div class="ttname"><a href="a00036.xhtml#ae3d6fcc6d4a20d1ad2de809ad65ecc34">Voxel::DepthCamera::name</a></div><div class="ttdeci">const String &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00162">DepthCamera.h:162</a></div></div>
<div class="ttc" id="a00130_xhtml"><div class="ttname"><a href="a00130.xhtml">String</a></div></div>
<div class="ttc" id="a00153_xhtml_accb2b81d2ef01ba4fbe1ae19da43263a"><div class="ttname"><a href="a00153.xhtml#accb2b81d2ef01ba4fbe1ae19da43263a">Voxel::TI::ToFCamera::_getCurrentProfileRegisterName</a></div><div class="ttdeci">virtual bool _getCurrentProfileRegisterName(String &amp;name)=0</div></div>
<div class="ttc" id="a00036_xhtml_a474dfafecfd8b2a97a924aeab8a82a3c"><div class="ttname"><a href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">Voxel::DepthCamera::_set</a></div><div class="ttdeci">bool _set(const String &amp;name, const T &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00383">DepthCamera.h:383</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_ae0e0e5e4394bae4bb6db858ec4916e28_cgraph.svg" width="100%" height="465"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="af38a4f151946d570f66f17f148575695"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_setBinning </td>
          <td>(</td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>rowsToMerge</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>columnsToMerge</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;&#160;</td>
          <td class="paramname"><em>frameSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="a00152.xhtml#a3599f989b4afc7847e189989540e4a8b">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00328">328</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00383">Voxel::DepthCamera::_set()</a>, <a class="el" href="a00323_source.xhtml#l00031">BIN_COLS_TO_MERGE</a>, <a class="el" href="a00323_source.xhtml#l00033">BIN_COLUMN_COUNT</a>, <a class="el" href="a00323_source.xhtml#l00032">BIN_ROW_COUNT</a>, <a class="el" href="a00323_source.xhtml#l00030">BIN_ROWS_TO_MERGE</a>, <a class="el" href="a00323_source.xhtml#l00034">BINNING_EN</a>, <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::height</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, and <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::width</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00165">_setFrameSize()</a>, <a class="el" href="a00334_source.xhtml#l00483">Voxel::TI::ToFHaddockCamera::_setROI()</a>, and <a class="el" href="a00336_source.xhtml#l00461">Voxel::TI::ToFTintinCamera::_setROI()</a>.</p>
<div class="fragment"><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;{</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#a491729c22212139331d290fe120e5ad4">BIN_ROWS_TO_MERGE</a>, rowsToMerge) || !<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#a7ee992b483fa82544116ec464190c5d5">BIN_COLS_TO_MERGE</a>, columnsToMerge) ||</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    !<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#aa5e588224d388c09eefe1219697d1ce9">BIN_ROW_COUNT</a>, (uint)<a class="code" href="a00379.xhtml#ac0913e3b4768858f3236123c3040a226">frameSize</a>.height) || !<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#a1f40ad65901bfbd577b9ade30c0f2203">BIN_COLUMN_COUNT</a>, (uint)<a class="code" href="a00379.xhtml#ac0913e3b4768858f3236123c3040a226">frameSize</a>.width)</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;     || !<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#a56f390f7e00e80a1b2cadaf910867be2">BINNING_EN</a>, <span class="keyword">true</span>))</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set binning related parameters&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00323_xhtml_aa5e588224d388c09eefe1219697d1ce9"><div class="ttname"><a href="a00323.xhtml#aa5e588224d388c09eefe1219697d1ce9">BIN_ROW_COUNT</a></div><div class="ttdeci">#define BIN_ROW_COUNT</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00032">ToFCamera.h:32</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00323_xhtml_a491729c22212139331d290fe120e5ad4"><div class="ttname"><a href="a00323.xhtml#a491729c22212139331d290fe120e5ad4">BIN_ROWS_TO_MERGE</a></div><div class="ttdeci">#define BIN_ROWS_TO_MERGE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00030">ToFCamera.h:30</a></div></div>
<div class="ttc" id="a00036_xhtml_a474dfafecfd8b2a97a924aeab8a82a3c"><div class="ttname"><a href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">Voxel::DepthCamera::_set</a></div><div class="ttdeci">bool _set(const String &amp;name, const T &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00383">DepthCamera.h:383</a></div></div>
<div class="ttc" id="a00323_xhtml_a1f40ad65901bfbd577b9ade30c0f2203"><div class="ttname"><a href="a00323.xhtml#a1f40ad65901bfbd577b9ade30c0f2203">BIN_COLUMN_COUNT</a></div><div class="ttdeci">#define BIN_COLUMN_COUNT</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00033">ToFCamera.h:33</a></div></div>
<div class="ttc" id="a00379_xhtml_ac0913e3b4768858f3236123c3040a226"><div class="ttname"><a href="a00379.xhtml#ac0913e3b4768858f3236123c3040a226">CameraSystemTest.frameSize</a></div><div class="ttdeci">tuple frameSize</div><div class="ttdef"><b>Definition:</b> <a href="a00219_source.xhtml#l00052">CameraSystemTest.py:52</a></div></div>
<div class="ttc" id="a00323_xhtml_a7ee992b483fa82544116ec464190c5d5"><div class="ttname"><a href="a00323.xhtml#a7ee992b483fa82544116ec464190c5d5">BIN_COLS_TO_MERGE</a></div><div class="ttdeci">#define BIN_COLS_TO_MERGE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00031">ToFCamera.h:31</a></div></div>
<div class="ttc" id="a00323_xhtml_a56f390f7e00e80a1b2cadaf910867be2"><div class="ttname"><a href="a00323.xhtml#a56f390f7e00e80a1b2cadaf910867be2">BINNING_EN</a></div><div class="ttdeci">#define BINNING_EN</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00034">ToFCamera.h:34</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_af38a4f151946d570f66f17f148575695_cgraph.svg" width="606" height="103"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_af38a4f151946d570f66f17f148575695_icgraph.svg" width="416" height="182"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a7a5758e07abe83cba9f90733bd8d35c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_setBytesPerPixel </td>
          <td>(</td>
          <td class="paramtype">const uint &amp;&#160;</td>
          <td class="paramname"><em>bpp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#a6ce66e4e439bb2858c1eb69588e3e500">Voxel::DepthCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00275">275</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00383">Voxel::DepthCamera::_set()</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="a00323_source.xhtml#l00044">OP_DATA_ARRANGE_MODE</a>, and <a class="el" href="a00323_source.xhtml#l00043">PIXEL_DATA_SIZE</a>.</p>
<div class="fragment"><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordtype">int</span> b = (<a class="code" href="a00397.xhtml">int</a>)bpp;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keywordtype">int</span> dataArrangeMode = (b == 4)?2:0;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#a9f7523defb3a4cf023393ae8c1208964">PIXEL_DATA_SIZE</a>, b) || !<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#af070193e4584117da1084f946ce0026e">OP_DATA_ARRANGE_MODE</a>, dataArrangeMode))</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set bytes per pixel or data arrange mode&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div>
<div class="ttc" id="a00397_xhtml"><div class="ttname"><a href="a00397.xhtml">int</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00323_xhtml_af070193e4584117da1084f946ce0026e"><div class="ttname"><a href="a00323.xhtml#af070193e4584117da1084f946ce0026e">OP_DATA_ARRANGE_MODE</a></div><div class="ttdeci">#define OP_DATA_ARRANGE_MODE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00044">ToFCamera.h:44</a></div></div>
<div class="ttc" id="a00036_xhtml_a474dfafecfd8b2a97a924aeab8a82a3c"><div class="ttname"><a href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">Voxel::DepthCamera::_set</a></div><div class="ttdeci">bool _set(const String &amp;name, const T &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00383">DepthCamera.h:383</a></div></div>
<div class="ttc" id="a00323_xhtml_a9f7523defb3a4cf023393ae8c1208964"><div class="ttname"><a href="a00323.xhtml#a9f7523defb3a4cf023393ae8c1208964">PIXEL_DATA_SIZE</a></div><div class="ttdeci">#define PIXEL_DATA_SIZE</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00043">ToFCamera.h:43</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_a7a5758e07abe83cba9f90733bd8d35c7_cgraph.svg" width="606" height="103"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae864d54427493e7bb25c41f9732385cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_setFrameRate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00069.xhtml">FrameRate</a> &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#ac0411adeff324bf5d77a907726de05bc">Voxel::DepthCamera</a>.</p>

<p>Reimplemented in <a class="el" href="a00152.xhtml#a08585ce6f9addac0eac8976f1b987fa4">Voxel::TI::ToFCalculusCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00120">120</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00353">Voxel::DepthCamera::_get()</a>, <a class="el" href="a00153.xhtml#ae2c116b5f3e0598f9a449c70f8ff5b6a">_getSystemClockFrequency()</a>, <a class="el" href="a00234_source.xhtml#l00383">Voxel::DepthCamera::_set()</a>, <a class="el" href="a00359_source.xhtml#l00054">Voxel::FrameRate::denominator</a>, <a class="el" href="a00323_source.xhtml#l00049">INTG_TIME</a>, <a class="el" href="a00274_source.xhtml#l00030">Voxel::LOG_DEBUG</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="a00359_source.xhtml#l00054">Voxel::FrameRate::numerator</a>, <a class="el" href="a00323_source.xhtml#l00016">PIX_CNT_MAX</a>, <a class="el" href="a00323_source.xhtml#l00015">PIX_CNT_MAX_SET_FAILED</a>, <a class="el" href="a00321_source.xhtml#l00036">QUAD_CNT_MAX</a>, and <a class="el" href="a00323_source.xhtml#l00018">SUBFRAME_CNT_MAX</a>.</p>

<p>Referenced by <a class="el" href="a00334_source.xhtml#l00189">Voxel::TI::HaddockUnambiguousRangeParameter::set()</a>, and <a class="el" href="a00336_source.xhtml#l00219">Voxel::TI::TintinUnambiguousRangeParameter::set()</a>.</p>
<div class="fragment"><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">bool</span> pixCountSetFailed;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  uint sysClkFrequency, pixCount;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">int</span> quadCount, subFrameCount;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00321.xhtml#a577ff428750eeeb618f2e3fda84fa6da">QUAD_CNT_MAX</a>, quadCount) || !<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#a37c581dd28d3179f8342c19579c7ae7b">SUBFRAME_CNT_MAX</a>, subFrameCount) || !<a class="code" href="a00153.xhtml#ae2c116b5f3e0598f9a449c70f8ff5b6a">_getSystemClockFrequency</a>(sysClkFrequency))</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>.numerator == 0 || quadCount == 0 || subFrameCount == 0)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  pixCount = (uint)((((uint64_t)<a class="code" href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>.denominator)*sysClkFrequency*1000000L)/(((uint64_t)quadCount)*subFrameCount*<a class="code" href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>.numerator));</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">LOG_DEBUG</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Setting &quot;</span> &lt;&lt; <a class="code" href="a00323.xhtml#ab3ac8a2c94094276db080b7312db2da8">PIX_CNT_MAX</a> &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; pixCount &lt;&lt; std::endl;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#ab3ac8a2c94094276db080b7312db2da8">PIX_CNT_MAX</a>, pixCount) || !<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#ab9913dc2b4a5e57e1dcd3c4a2b91c5fe">PIX_CNT_MAX_SET_FAILED</a>, pixCountSetFailed) || pixCountSetFailed)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  uint integrationTime;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">_get</a>(<a class="code" href="a00323.xhtml#a4ae218c4b928bfd1254e4af6bd091bb0">INTG_TIME</a>, integrationTime) || !<a class="code" href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">_set</a>(<a class="code" href="a00323.xhtml#a4ae218c4b928bfd1254e4af6bd091bb0">INTG_TIME</a>, integrationTime))</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_ac850b3829f41e647686610c283197ea6"><div class="ttname"><a href="a00036.xhtml#ac850b3829f41e647686610c283197ea6">Voxel::DepthCamera::_get</a></div><div class="ttdeci">bool _get(const String &amp;name, T &amp;value, bool refresh=false) const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00353">DepthCamera.h:353</a></div></div>
<div class="ttc" id="a00378_xhtml_a56ca3083cd3df8d8feeac39ad5d44478"><div class="ttname"><a href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">CameraSystemIQFrameTest.r</a></div><div class="ttdeci">tuple r</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00018">CameraSystemIQFrameTest.py:18</a></div></div>
<div class="ttc" id="a00323_xhtml_a4ae218c4b928bfd1254e4af6bd091bb0"><div class="ttname"><a href="a00323.xhtml#a4ae218c4b928bfd1254e4af6bd091bb0">INTG_TIME</a></div><div class="ttdeci">#define INTG_TIME</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00049">ToFCamera.h:49</a></div></div>
<div class="ttc" id="a00153_xhtml_ae2c116b5f3e0598f9a449c70f8ff5b6a"><div class="ttname"><a href="a00153.xhtml#ae2c116b5f3e0598f9a449c70f8ff5b6a">Voxel::TI::ToFCamera::_getSystemClockFrequency</a></div><div class="ttdeci">virtual bool _getSystemClockFrequency(uint &amp;frequency) const =0</div></div>
<div class="ttc" id="a00323_xhtml_ab3ac8a2c94094276db080b7312db2da8"><div class="ttname"><a href="a00323.xhtml#ab3ac8a2c94094276db080b7312db2da8">PIX_CNT_MAX</a></div><div class="ttdeci">#define PIX_CNT_MAX</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00016">ToFCamera.h:16</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00323_xhtml_ab9913dc2b4a5e57e1dcd3c4a2b91c5fe"><div class="ttname"><a href="a00323.xhtml#ab9913dc2b4a5e57e1dcd3c4a2b91c5fe">PIX_CNT_MAX_SET_FAILED</a></div><div class="ttdeci">#define PIX_CNT_MAX_SET_FAILED</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00015">ToFCamera.h:15</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">Voxel::LOG_DEBUG</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00030">Logger.h:30</a></div></div>
<div class="ttc" id="a00321_xhtml_a577ff428750eeeb618f2e3fda84fa6da"><div class="ttname"><a href="a00321.xhtml#a577ff428750eeeb618f2e3fda84fa6da">QUAD_CNT_MAX</a></div><div class="ttdeci">#define QUAD_CNT_MAX</div><div class="ttdef"><b>Definition:</b> <a href="a00321_source.xhtml#l00036">ToFCalculusCamera.h:36</a></div></div>
<div class="ttc" id="a00036_xhtml_a474dfafecfd8b2a97a924aeab8a82a3c"><div class="ttname"><a href="a00036.xhtml#a474dfafecfd8b2a97a924aeab8a82a3c">Voxel::DepthCamera::_set</a></div><div class="ttdeci">bool _set(const String &amp;name, const T &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00383">DepthCamera.h:383</a></div></div>
<div class="ttc" id="a00323_xhtml_a37c581dd28d3179f8342c19579c7ae7b"><div class="ttname"><a href="a00323.xhtml#a37c581dd28d3179f8342c19579c7ae7b">SUBFRAME_CNT_MAX</a></div><div class="ttdeci">#define SUBFRAME_CNT_MAX</div><div class="ttdef"><b>Definition:</b> <a href="a00323_source.xhtml#l00018">ToFCamera.h:18</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-30" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-30-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-30-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-30-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_ae864d54427493e7bb25c41f9732385cf_cgraph.svg" width="656" height="182"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-31" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-31-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-31-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-31-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_ae864d54427493e7bb25c41f9732385cf_icgraph.svg" width="100%" height="387"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="acdcfa070468d49469af82f721f971fec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_setFrameSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="a00036.xhtml#adbaa74374a360666453cb5837c116d68">Voxel::DepthCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00160">160</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>Referenced by <a class="el" href="a00334_source.xhtml#l00483">Voxel::TI::ToFHaddockCamera::_setROI()</a>, <a class="el" href="a00336_source.xhtml#l00461">Voxel::TI::ToFTintinCamera::_setROI()</a>, and <a class="el" href="a00320_source.xhtml#l00541">Voxel::TI::ToFCalculusCamera::_setROI()</a>.</p>
<div class="fragment"><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="a00153.xhtml#acdcfa070468d49469af82f721f971fec">_setFrameSize</a>(s, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
<div class="ttc" id="a00153_xhtml_acdcfa070468d49469af82f721f971fec"><div class="ttname"><a href="a00153.xhtml#acdcfa070468d49469af82f721f971fec">Voxel::TI::ToFCamera::_setFrameSize</a></div><div class="ttdeci">virtual bool _setFrameSize(const FrameSize &amp;s)</div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00160">ToFCamera.cpp:160</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-32" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-32-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-32-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-32-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_acdcfa070468d49469af82f721f971fec_icgraph.svg" width="416" height="182"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a732a6cb4d0a909776abf8004f2ddf4ee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_setFrameSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00398.xhtml">bool</a>&#160;</td>
          <td class="paramname"><em>resetROI</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00165">165</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00322_source.xhtml#l00261">_getBytesPerPixel()</a>, <a class="el" href="a00036.xhtml#a81260a37bfc6da411b8d3d71342a2eda">Voxel::DepthCamera::_getMaximumFrameSize()</a>, <a class="el" href="a00036.xhtml#ae09d2aaee73e56b4b488897f6081191e">Voxel::DepthCamera::_getROI()</a>, <a class="el" href="a00036.xhtml#acf7acaaf80bd7a4f2f5bd936a238b794">Voxel::DepthCamera::_getSupportedVideoModes()</a>, <a class="el" href="a00322_source.xhtml#l00328">_setBinning()</a>, <a class="el" href="a00036.xhtml#aaf9d83ca0b30727b3a10c6fd61fa71d8">Voxel::DepthCamera::_setROI()</a>, <a class="el" href="a00153.xhtml#aeb1ca26782d200e18261e76254712477">_setStreamerFrameSize()</a>, <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::height</a>, <a class="el" href="a00234_source.xhtml#l00171">Voxel::DepthCamera::isRunning()</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="a00359_source.xhtml#l00022">Voxel::FrameSize::width</a>, <a class="el" href="a00359_source.xhtml#l00038">Voxel::RegionOfInterest::x</a>, and <a class="el" href="a00359_source.xhtml#l00038">Voxel::RegionOfInterest::y</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00036.xhtml#a1ff46a5643f0a02a6970236e0b6a7634">isRunning</a>())</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Cannot set frame size while the camera is streaming&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  RegionOfInterest roi;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordflow">if</span>(resetROI)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    FrameSize maxFrameSize;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#a81260a37bfc6da411b8d3d71342a2eda">_getMaximumFrameSize</a>(maxFrameSize))</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not get maximum frame size. Need that to reset ROI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    roi.x = roi.y = 0;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    roi.width = maxFrameSize.width;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    roi.height = maxFrameSize.height;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#aaf9d83ca0b30727b3a10c6fd61fa71d8">_setROI</a>(roi))</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not reset ROI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#ae09d2aaee73e56b4b488897f6081191e">_getROI</a>(roi))</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not get current ROI, to set frame size&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  FrameSize toSet;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  toSet.width = (s.width &lt;= roi.width)?s.width:roi.width;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  toSet.height = (s.height &lt;= roi.height)?s.height:roi.height;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  Vector&lt;SupportedVideoMode&gt; supportedVideoModes;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  uint bytesPerPixel;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00036.xhtml#acf7acaaf80bd7a4f2f5bd936a238b794">_getSupportedVideoModes</a>(supportedVideoModes) || !<a class="code" href="a00153.xhtml#acf6c3a732c5a47f38f2d461d76709091">_getBytesPerPixel</a>(bytesPerPixel))</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not get supported video modes or current bytes per pixel, to get nearest valid frame size&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keywordtype">int</span> maxScore = 0;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <a class="code" href="a00390.xhtml#gac270571570e8333b43ffd3dc6eeed155">IndexType</a> index = -1;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordtype">int</span> area = toSet.height*toSet.width;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="keywordflow">if</span>(supportedVideoModes.size() &gt; 0)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">for</span>(<a class="code" href="a00390.xhtml#gac270571570e8333b43ffd3dc6eeed155">IndexType</a> i = 0; i &lt; supportedVideoModes.size(); i++)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keyword">auto</span> &amp;a = supportedVideoModes[i];</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordtype">int</span> scoreA = a.frameSize.width*a.frameSize.height;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      scoreA = (bytesPerPixel != a.bytesPerPixel || scoreA &gt; area || a.frameSize.width &gt; toSet.width || a.frameSize.height &gt; toSet.height)?0:scoreA;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keywordflow">if</span>(scoreA &gt; maxScore)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        maxScore = scoreA;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        index = i;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">if</span>(index &lt; 0)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: No supported frame size exists close to the desired frame size. Could not set frame size.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    toSet = supportedVideoModes[index].frameSize;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  uint rowsToMerge = (roi.height + toSet.height - 1)/toSet.height,</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  columnsToMerge = (roi.width + toSet.width - 1)/toSet.width;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#af38a4f151946d570f66f17f148575695">_setBinning</a>(rowsToMerge, columnsToMerge, toSet))</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set binning for required frame size&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00153.xhtml#aeb1ca26782d200e18261e76254712477">_setStreamerFrameSize</a>(toSet))</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not get streamer&#39;s frame size&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_aaf9d83ca0b30727b3a10c6fd61fa71d8"><div class="ttname"><a href="a00036.xhtml#aaf9d83ca0b30727b3a10c6fd61fa71d8">Voxel::DepthCamera::_setROI</a></div><div class="ttdeci">virtual bool _setROI(const RegionOfInterest &amp;roi)=0</div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00153_xhtml_af38a4f151946d570f66f17f148575695"><div class="ttname"><a href="a00153.xhtml#af38a4f151946d570f66f17f148575695">Voxel::TI::ToFCamera::_setBinning</a></div><div class="ttdeci">virtual bool _setBinning(uint rowsToMerge, uint columnsToMerge, const FrameSize &amp;frameSize)</div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00328">ToFCamera.cpp:328</a></div></div>
<div class="ttc" id="a00036_xhtml_acf7acaaf80bd7a4f2f5bd936a238b794"><div class="ttname"><a href="a00036.xhtml#acf7acaaf80bd7a4f2f5bd936a238b794">Voxel::DepthCamera::_getSupportedVideoModes</a></div><div class="ttdeci">virtual bool _getSupportedVideoModes(Vector&lt; SupportedVideoMode &gt; &amp;supportedVideoModes) const =0</div></div>
<div class="ttc" id="a00036_xhtml_a81260a37bfc6da411b8d3d71342a2eda"><div class="ttname"><a href="a00036.xhtml#a81260a37bfc6da411b8d3d71342a2eda">Voxel::DepthCamera::_getMaximumFrameSize</a></div><div class="ttdeci">virtual bool _getMaximumFrameSize(FrameSize &amp;s) const =0</div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00036_xhtml_a1ff46a5643f0a02a6970236e0b6a7634"><div class="ttname"><a href="a00036.xhtml#a1ff46a5643f0a02a6970236e0b6a7634">Voxel::DepthCamera::isRunning</a></div><div class="ttdeci">bool isRunning() const </div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00171">DepthCamera.h:171</a></div></div>
<div class="ttc" id="a00036_xhtml_ae09d2aaee73e56b4b488897f6081191e"><div class="ttname"><a href="a00036.xhtml#ae09d2aaee73e56b4b488897f6081191e">Voxel::DepthCamera::_getROI</a></div><div class="ttdeci">virtual bool _getROI(RegionOfInterest &amp;roi)=0</div></div>
<div class="ttc" id="a00390_xhtml_gac270571570e8333b43ffd3dc6eeed155"><div class="ttname"><a href="a00390.xhtml#gac270571570e8333b43ffd3dc6eeed155">Voxel::IndexType</a></div><div class="ttdeci">int IndexType</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00084">Common.h:84</a></div></div>
<div class="ttc" id="a00153_xhtml_acf6c3a732c5a47f38f2d461d76709091"><div class="ttname"><a href="a00153.xhtml#acf6c3a732c5a47f38f2d461d76709091">Voxel::TI::ToFCamera::_getBytesPerPixel</a></div><div class="ttdeci">virtual bool _getBytesPerPixel(uint &amp;bpp) const </div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00261">ToFCamera.cpp:261</a></div></div>
<div class="ttc" id="a00153_xhtml_aeb1ca26782d200e18261e76254712477"><div class="ttname"><a href="a00153.xhtml#aeb1ca26782d200e18261e76254712477">Voxel::TI::ToFCamera::_setStreamerFrameSize</a></div><div class="ttdeci">virtual bool _setStreamerFrameSize(const FrameSize &amp;s)=0</div></div>
</div><!-- fragment -->
<p><div id="dynsection-33" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-33-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-33-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-33-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00153_a732a6cb4d0a909776abf8004f2ddf4ee_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aeb1ca26782d200e18261e76254712477"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::_setStreamerFrameSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00071.xhtml">FrameSize</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="a00137.xhtml#a2ffbaceb53ded2b382116ac66b787698">Voxel::TI::TintinCDKCamera</a>, <a class="el" href="a00077.xhtml#a70d14d1308b84e604c0da43e994efa53">Voxel::TI::HaddockCDKCamera</a>, <a class="el" href="a00186.xhtml#aa13368de49716d5ec7ed82df1010a6b0">Voxel::TI::VoxelDCamera</a>, <a class="el" href="a00013.xhtml#abee6f4a34c8189727a99bf01983ff1ab">Voxel::TI::CalculusCDKCamera</a>, and <a class="el" href="a00182.xhtml#afeb9b488760b3c32cf6d5decb25bfdcf">Voxel::TI::Voxel14Camera</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00165">_setFrameSize()</a>.</p>

<p><div id="dynsection-34" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-34-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-34-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-34-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_aeb1ca26782d200e18261e76254712477_icgraph.svg" width="382" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a61feee092ef4496fb12d80c32e5a3954"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00398.xhtml">bool</a> Voxel::TI::ToFCamera::setSerialNumber </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a> &amp;&#160;</td>
          <td class="paramname"><em>serialNumber</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="a00036.xhtml#a28e7a25b1f40d17664ef678697e692eb">Voxel::DepthCamera</a>.</p>

<p>Definition at line <a class="el" href="a00322_source.xhtml#l00617">617</a> of file <a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a>.</p>

<p>References <a class="el" href="a00234_source.xhtml#l00058">Voxel::DepthCamera::_device</a>, <a class="el" href="a00234_source.xhtml#l00064">Voxel::DepthCamera::_programmer</a>, <a class="el" href="a00375_source.xhtml#l00043">Voxel::TI::VoxelUSBProgrammer::getUSBIO()</a>, <a class="el" href="a00274_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="a00274_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="a00341_source.xhtml#l00042">Voxel::USBIO::RECIPIENT_DEVICE</a>, <a class="el" href="a00341_source.xhtml#l00036">Voxel::USBIO::REQUEST_VENDOR</a>, <a class="el" href="a00233_source.xhtml#l00703">Voxel::DepthCamera::setSerialNumber()</a>, <a class="el" href="a00322_source.xhtml#l00013">TI_SERIAL_NUMBER_SIZE</a>, <a class="el" href="a00322_source.xhtml#l00012">TI_USBIO_SERIAL_NUMBER</a>, and <a class="el" href="a00341_source.xhtml#l00028">Voxel::USBIO::TO_DEVICE</a>.</p>
<div class="fragment"><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;{</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;  <span class="keywordflow">if</span>(serialNumber.size() &gt; <a class="code" href="a00322.xhtml#a190ffeaaf9669aee8efa22cf52ec9db7">TI_SERIAL_NUMBER_SIZE</a>)</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;  {</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Please specify serial number with at most &#39;&quot;</span> &lt;&lt; <a class="code" href="a00322.xhtml#a190ffeaaf9669aee8efa22cf52ec9db7">TI_SERIAL_NUMBER_SIZE</a> &lt;&lt; <span class="stringliteral">&quot;&#39; bytes.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;  }</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  </div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;  VoxelUSBProgrammer *p = <span class="keyword">dynamic_cast&lt;</span>VoxelUSBProgrammer *<span class="keyword">&gt;</span>(&amp;*<a class="code" href="a00036.xhtml#aae0b0dd148ef1483d19b91075731c40d">_programmer</a>);</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;  </div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;  <span class="keywordflow">if</span>(p)</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;  {</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <a class="code" href="a00387.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a> usbIO = p-&gt;getUSBIO();</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    </div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    uint16_t length = serialNumber.size();</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    </div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <span class="keywordflow">if</span>(!usbIO-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, <a class="code" href="a00322.xhtml#aa0ff4146a8ca490be7823d917e0f0141">TI_USBIO_SERIAL_NUMBER</a>, 0, 0,</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;      (uint8_t *)serialNumber.c_str(), length))</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    {</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;ToFCamera: Could not set serial number from depth camera.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    }</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    {</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      <a class="code" href="a00036.xhtml#a8104146f2193bdf7d8735322f6d7d4b8">_device</a>-&gt;setSerialNumber(serialNumber);</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    }</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;  }</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;  </div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="a00036.xhtml#a28e7a25b1f40d17664ef678697e692eb">DepthCamera::setSerialNumber</a>(serialNumber);</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;}</div>
<div class="ttc" id="a00036_xhtml_aae0b0dd148ef1483d19b91075731c40d"><div class="ttname"><a href="a00036.xhtml#aae0b0dd148ef1483d19b91075731c40d">Voxel::DepthCamera::_programmer</a></div><div class="ttdeci">Ptr&lt; RegisterProgrammer &gt; _programmer</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00064">DepthCamera.h:64</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00170_xhtml_a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22"><div class="ttname"><a href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">Voxel::USBIO::RECIPIENT_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00042">USBIO.h:42</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00322_xhtml_aa0ff4146a8ca490be7823d917e0f0141"><div class="ttname"><a href="a00322.xhtml#aa0ff4146a8ca490be7823d917e0f0141">TI_USBIO_SERIAL_NUMBER</a></div><div class="ttdeci">#define TI_USBIO_SERIAL_NUMBER</div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00012">ToFCamera.cpp:12</a></div></div>
<div class="ttc" id="a00387_xhtml_ab98797c1045f61c0ee5da790ee4e47c8"><div class="ttname"><a href="a00387.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">Voxel::USBIOPtr</a></div><div class="ttdeci">Ptr&lt; USBIO &gt; USBIOPtr</div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00062">USBIO.h:62</a></div></div>
<div class="ttc" id="a00036_xhtml_a8104146f2193bdf7d8735322f6d7d4b8"><div class="ttname"><a href="a00036.xhtml#a8104146f2193bdf7d8735322f6d7d4b8">Voxel::DepthCamera::_device</a></div><div class="ttdeci">DevicePtr _device</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00058">DepthCamera.h:58</a></div></div>
<div class="ttc" id="a00322_xhtml_a190ffeaaf9669aee8efa22cf52ec9db7"><div class="ttname"><a href="a00322.xhtml#a190ffeaaf9669aee8efa22cf52ec9db7">TI_SERIAL_NUMBER_SIZE</a></div><div class="ttdeci">#define TI_SERIAL_NUMBER_SIZE</div><div class="ttdef"><b>Definition:</b> <a href="a00322_source.xhtml#l00013">ToFCamera.cpp:13</a></div></div>
<div class="ttc" id="a00036_xhtml_a28e7a25b1f40d17664ef678697e692eb"><div class="ttname"><a href="a00036.xhtml#a28e7a25b1f40d17664ef678697e692eb">Voxel::DepthCamera::setSerialNumber</a></div><div class="ttdeci">virtual bool setSerialNumber(const String &amp;serialNumber)</div><div class="ttdef"><b>Definition:</b> <a href="a00233_source.xhtml#l00703">DepthCamera.cpp:703</a></div></div>
<div class="ttc" id="a00170_xhtml_a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1"><div class="ttname"><a href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">Voxel::USBIO::REQUEST_VENDOR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00036">USBIO.h:36</a></div></div>
<div class="ttc" id="a00170_xhtml_a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5"><div class="ttname"><a href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">Voxel::USBIO::TO_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00028">USBIO.h:28</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-35" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-35-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-35-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-35-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00153_a61feee092ef4496fb12d80c32e5a3954_cgraph.svg" width="427" height="116"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="a5b1efa220db6e60faa3b28e29391369a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="a00089.xhtml">IntegrationTimeParameter</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00323_source.xhtml#l00160">160</a> of file <a class="el" href="a00323_source.xhtml">ToFCamera.h</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00082">_init()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a33b211a51910c3d766a01de8ad852bb3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00113.xhtml">Ptr</a>&lt;<a class="el" href="a00158.xhtml">ToFFrameGenerator</a>&gt; Voxel::TI::ToFCamera::_tofFrameGenerator</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="a00323_source.xhtml#l00148">148</a> of file <a class="el" href="a00323_source.xhtml">ToFCamera.h</a>.</p>

<p>Referenced by <a class="el" href="a00322_source.xhtml#l00367">_initStartParams()</a>, <a class="el" href="a00322_source.xhtml#l00351">_processRawFrame()</a>, and <a class="el" href="a00322_source.xhtml#l00074">ToFCamera()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00323_source.xhtml">ToFCamera.h</a></li>
<li><a class="el" href="a00322_source.xhtml">ToFCamera.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 12 2015 21:49:59 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
