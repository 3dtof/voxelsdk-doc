<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: TintinEEPROMDownloader.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_15084b10ffde3b770ebb4469406358eb.xhtml">TI3DToF</a></li><li class="navelem"><a class="el" href="dir_be2c02f355bab862214d9d800e941b4f.xhtml">boards</a></li><li class="navelem"><a class="el" href="dir_3feeec63b515f630fcd875cd15f48403.xhtml">TintinCDK</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">TintinEEPROMDownloader.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00316.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00317.xhtml">TintinEEPROMDownloader.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00377.xhtml">VoxelXUProgrammer.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00311.xhtml">TintinCDKCamera.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span>Voxel</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span>TI</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="a00388.xhtml#a673462e50deef9f04e4bdc68f6214539">   17</a></span>&#160;uint8_t <a class="code" href="a00388.xhtml#a673462e50deef9f04e4bdc68f6214539">bitReverseTable</a>[256] = {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  0x00, 0x80, 0x40, 0xC0, 0x20, 0xA0, 0x60, 0xE0, 0x10, 0x90, 0x50, 0xD0, 0x30, 0xB0, 0x70, 0xF0, </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  0x08, 0x88, 0x48, 0xC8, 0x28, 0xA8, 0x68, 0xE8, 0x18, 0x98, 0x58, 0xD8, 0x38, 0xB8, 0x78, 0xF8, </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  0x04, 0x84, 0x44, 0xC4, 0x24, 0xA4, 0x64, 0xE4, 0x14, 0x94, 0x54, 0xD4, 0x34, 0xB4, 0x74, 0xF4, </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  0x0C, 0x8C, 0x4C, 0xCC, 0x2C, 0xAC, 0x6C, 0xEC, 0x1C, 0x9C, 0x5C, 0xDC, 0x3C, 0xBC, 0x7C, 0xFC, </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  0x02, 0x82, 0x42, 0xC2, 0x22, 0xA2, 0x62, 0xE2, 0x12, 0x92, 0x52, 0xD2, 0x32, 0xB2, 0x72, 0xF2, </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  0x0A, 0x8A, 0x4A, 0xCA, 0x2A, 0xAA, 0x6A, 0xEA, 0x1A, 0x9A, 0x5A, 0xDA, 0x3A, 0xBA, 0x7A, 0xFA,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  0x06, 0x86, 0x46, 0xC6, 0x26, 0xA6, 0x66, 0xE6, 0x16, 0x96, 0x56, 0xD6, 0x36, 0xB6, 0x76, 0xF6, </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  0x0E, 0x8E, 0x4E, 0xCE, 0x2E, 0xAE, 0x6E, 0xEE, 0x1E, 0x9E, 0x5E, 0xDE, 0x3E, 0xBE, 0x7E, 0xFE,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  0x01, 0x81, 0x41, 0xC1, 0x21, 0xA1, 0x61, 0xE1, 0x11, 0x91, 0x51, 0xD1, 0x31, 0xB1, 0x71, 0xF1,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  0x09, 0x89, 0x49, 0xC9, 0x29, 0xA9, 0x69, 0xE9, 0x19, 0x99, 0x59, 0xD9, 0x39, 0xB9, 0x79, 0xF9, </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  0x05, 0x85, 0x45, 0xC5, 0x25, 0xA5, 0x65, 0xE5, 0x15, 0x95, 0x55, 0xD5, 0x35, 0xB5, 0x75, 0xF5,</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  0x0D, 0x8D, 0x4D, 0xCD, 0x2D, 0xAD, 0x6D, 0xED, 0x1D, 0x9D, 0x5D, 0xDD, 0x3D, 0xBD, 0x7D, 0xFD,</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  0x03, 0x83, 0x43, 0xC3, 0x23, 0xA3, 0x63, 0xE3, 0x13, 0x93, 0x53, 0xD3, 0x33, 0xB3, 0x73, 0xF3, </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  0x0B, 0x8B, 0x4B, 0xCB, 0x2B, 0xAB, 0x6B, 0xEB, 0x1B, 0x9B, 0x5B, 0xDB, 0x3B, 0xBB, 0x7B, 0xFB,</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  0x07, 0x87, 0x47, 0xC7, 0x27, 0xA7, 0x67, 0xE7, 0x17, 0x97, 0x57, 0xD7, 0x37, 0xB7, 0x77, 0xF7, </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  0x0F, 0x8F, 0x4F, 0xCF, 0x2F, 0xAF, 0x6F, 0xEF, 0x1F, 0x9F, 0x5F, 0xDF, 0x3F, 0xBF, 0x7F, 0xFF</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;};</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="a00148.xhtml#a2adb94a5e0b1a66f8a2e21ce0931d46f">   37</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00148.xhtml#a2adb94a5e0b1a66f8a2e21ce0931d46f">TintinEEPROMDownloader::_configureForDownload</a>()</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="comment">// Perform reset</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <a class="code" href="a00167.xhtml">USBDevice</a> &amp;d = (<a class="code" href="a00167.xhtml">USBDevice</a> &amp;)*<a class="code" href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">_device</a>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <a class="code" href="a00113.xhtml">DevicePtr</a> controlDevice;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">if</span> (d.<a class="code" href="a00167.xhtml#a733db00843f6522b28a07719c943e1fe">productID</a>() == <a class="code" href="a00311.xhtml#a6002cfe994e740c6047d453e6d71606c">TINTIN_CDK_PRODUCT_UVC</a>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Reseting device...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Reseting device...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="a00193.xhtml">VoxelXUProgrammer</a> p({}, <a class="code" href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">_device</a>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    p.<a class="code" href="a00193.xhtml#a44d63f580f52b0f3ff8e801b9a5d266e">reset</a>();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// Wait for 10 seconds</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Waiting for device reenumeration...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Waiting for device reenumeration...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    std::this_thread::sleep_for(std::chrono::seconds(10));</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    controlDevice = <a class="code" href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>(<span class="keyword">new</span> <a class="code" href="a00167.xhtml">USBDevice</a>(<a class="code" href="a00311.xhtml#a7c835321c5d7fcf1a3caff3018c3601d">TINTIN_CDK_VENDOR_ID</a>, <a class="code" href="a00311.xhtml#a3a037bf6865f81e124992ae6e5c37624">TINTIN_CDK_PRODUCT_BULK</a>, <a class="code" href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">_device</a>-&gt;serialNumber(), </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                            <a class="code" href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">_device</a>-&gt;channelID(), <a class="code" href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">_device</a>-&gt;description(), <a class="code" href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">_device</a>-&gt;serialIndex(), <span class="keyword">true</span>));</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    controlDevice = <a class="code" href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">_device</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <a class="code" href="a00047.xhtml#ae9b2538c8a0b2907157c6b003d12b01c">_setProgress</a>(10);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>.reset(); <span class="comment">// Remove reference to USBIO structure</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a> = <a class="code" href="a00387.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a>(<span class="keyword">new</span> <a class="code" href="a00170.xhtml">USBIO</a>(controlDevice));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;isInitialized())</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Could not open device&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Could not open device&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  uint16_t length;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="comment">// Write init</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  uint8_t writeInit[] = { 0x06 };</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  length = 1;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      0x17, 0x00, 0x00, writeInit, length))</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to init write in EEPROM&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to init write in EEPROM&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="comment">// JEDEC ID</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  uint8_t jedecID[3];</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  length = 3;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">USBIO::FROM_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      0x1D, 0x00, 0x00, jedecID, length))</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to read JEDEC ID&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to read JEDEC ID&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: EEPROM JEDEC ID = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)jedecID[0] &lt;&lt; (uint)jedecID[1] &lt;&lt; (uint)jedecID[2] &lt;&lt; std::endl;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;EEPROM JEDEC ID = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)jedecID[0] &lt;&lt; (uint)jedecID[1] &lt;&lt; (uint)jedecID[2] &lt;&lt; std::endl;;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  uint8_t eepromStatus;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00148.xhtml#a5ff321c1febeefd38de47f4af6d1921f">_getEEPROMStatus</a>(eepromStatus))</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00148.xhtml#a5e8d288c9261361f1d769dfaac5cb920">_printEEPROMFirst64Bytes</a>())</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="comment">// Write enable</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  length = 1;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    0x1E, 0x00, 0x00, writeInit, length))</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to enable write&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to enable write&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00148.xhtml#a5ff321c1febeefd38de47f4af6d1921f">_getEEPROMStatus</a>(eepromStatus))</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Write enable, EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Write enable, EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="comment">// EEPROM Erase</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  uint8_t eepromEraseCommand[] = {0xC7};</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  length = 1;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    0x1E, 0x00, 0x00, eepromEraseCommand, length))</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to erase EEPROM&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to erase EEPROM&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00148.xhtml#a5ff321c1febeefd38de47f4af6d1921f">_getEEPROMStatus</a>(eepromStatus))</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Erase, EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Erase, EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <a class="code" href="a00047.xhtml#ae9b2538c8a0b2907157c6b003d12b01c">_setProgress</a>(15);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="comment">// Wait for 30 seconds</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Waiting for erase...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Waiting for erase...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  std::this_thread::sleep_for(std::chrono::seconds(30));</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00148.xhtml#a5ff321c1febeefd38de47f4af6d1921f">_getEEPROMStatus</a>(eepromStatus))</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Erase done, EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Erase done, EEPROM Status = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; (uint)eepromStatus &lt;&lt; std::endl;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00148.xhtml#a5e8d288c9261361f1d769dfaac5cb920">_printEEPROMFirst64Bytes</a>())</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <a class="code" href="a00047.xhtml#ae9b2538c8a0b2907157c6b003d12b01c">_setProgress</a>(40);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="a00148.xhtml#a5ff321c1febeefd38de47f4af6d1921f">  164</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00148.xhtml#a5ff321c1febeefd38de47f4af6d1921f">TintinEEPROMDownloader::_getEEPROMStatus</a>(uint8_t &amp;eepromStatus)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  uint16_t length;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="comment">// EEPROM status</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  uint8_t eepromStat[1];</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  length = 1;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">USBIO::FROM_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    0x1B, 0x00, 0x00, eepromStat, length))</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to read EEPROM status&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to read EEPROM status&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  eepromStatus = eepromStat[0];</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="a00148.xhtml#a5e8d288c9261361f1d769dfaac5cb920">  183</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00148.xhtml#a5e8d288c9261361f1d769dfaac5cb920">TintinEEPROMDownloader::_printEEPROMFirst64Bytes</a>()</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;{</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  uint8_t bytes[64];</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  uint16_t length = 64;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">USBIO::FROM_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    0x19, 0x00, 0x00, bytes, length))</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to read EEPROM bytes&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to read EEPROM bytes&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;First 64 bytes = &quot;</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;First 64 bytes = &quot;</span>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = 0; i &lt; 64; i++)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a> &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; std::hex &lt;&lt; (uint)bytes[i] &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; std::hex &lt;&lt; (uint)bytes[i] &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;}</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="a00148.xhtml#aee93da719b43fd9c2feb509fa2f5b5d6">  211</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00148.xhtml#aee93da719b43fd9c2feb509fa2f5b5d6">TintinEEPROMDownloader::_download</a>(<a class="code" href="a00390.xhtml#gaf37e7f5948ef68c00b6597335b3eedc4">InputFileStream</a> &amp;file, <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> filesize)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;{</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Starting EEPROM write...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Starting EEPROM write...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;uint8_t&gt;</a> data(filesize), dataReverse;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  dataReverse.reserve(filesize);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  file.read((<span class="keywordtype">char</span> *)data.data(), filesize);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="comment">// bit-reverse all the bytes</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordflow">for</span>(<span class="keyword">auto</span> d: data)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    dataReverse.push_back(<a class="code" href="a00388.xhtml#a673462e50deef9f04e4bdc68f6214539">bitReverseTable</a>[d]);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  uint32_t stepSize = 64, startAddress = 0, bytesRemaining = filesize, i = 0, bytesToSend;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="keywordtype">float</span> p = <a class="code" href="a00047.xhtml#a452a2b0c18ec856b16fa5317cf7a5a33">getProgress</a>();</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <span class="keywordflow">while</span>(bytesRemaining)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  {</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span>(bytesRemaining &gt; stepSize)</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      bytesToSend = stepSize;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      bytesToSend = bytesRemaining;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="comment">// Write enable</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    uint8_t writeInit[] = { 0x06 };</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    uint16_t length = 1;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      0x1E, 0x00, 0x00, writeInit, length))</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to enable write&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to enable write&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    length = bytesToSend;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">_usbIO</a>-&gt;controlTransfer(<a class="code" href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      0x18, startAddress &amp; 0xFFFF, (startAddress &gt;&gt; 16) &amp; 0x00FF, dataReverse.data() + startAddress, length))</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Failed to write bytes at address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; startAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Failed to write bytes at address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; startAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">if</span>(i % 8192 == 0)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Pending &quot;</span> &lt;&lt; std::dec &lt;&lt; bytesRemaining &lt;&lt; <span class="stringliteral">&quot; bytes...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Pending &quot;</span> &lt;&lt; std::dec &lt;&lt; bytesRemaining &lt;&lt; <span class="stringliteral">&quot; bytes...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    }</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    bytesRemaining -= bytesToSend;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    startAddress += bytesToSend;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    i++;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="a00047.xhtml#ae9b2538c8a0b2907157c6b003d12b01c">_setProgress</a>(p + (100 - p)*(startAddress*1.0/filesize));</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  }</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: EEPROM writes finished...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;EEPROM writes finished...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00148.xhtml#a5e8d288c9261361f1d769dfaac5cb920">_printEEPROMFirst64Bytes</a>())</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">LOG_INFO</a>) &lt;&lt; <span class="stringliteral">&quot;TintinEEPROMDownloader: Done!&quot;</span> &lt;&lt; std::dec &lt;&lt; std::endl;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <a class="code" href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">_outStream</a> &lt;&lt; <span class="stringliteral">&quot;Done!&quot;</span> &lt;&lt; std::dec &lt;&lt; std::endl;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;}</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  </div>
<div class="ttc" id="a00167_xhtml_a733db00843f6522b28a07719c943e1fe"><div class="ttname"><a href="a00167.xhtml#a733db00843f6522b28a07719c943e1fe">Voxel::USBDevice::productID</a></div><div class="ttdeci">uint16_t productID() const </div><div class="ttdef"><b>Definition:</b> <a href="a00239_source.xhtml#l00091">Device.h:91</a></div></div>
<div class="ttc" id="a00193_xhtml_a44d63f580f52b0f3ff8e801b9a5d266e"><div class="ttname"><a href="a00193.xhtml#a44d63f580f52b0f3ff8e801b9a5d266e">Voxel::TI::VoxelXUProgrammer::reset</a></div><div class="ttdeci">virtual bool reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00376_source.xhtml#l00164">VoxelXUProgrammer.cpp:164</a></div></div>
<div class="ttc" id="a00311_xhtml_a6002cfe994e740c6047d453e6d71606c"><div class="ttname"><a href="a00311.xhtml#a6002cfe994e740c6047d453e6d71606c">TINTIN_CDK_PRODUCT_UVC</a></div><div class="ttdeci">#define TINTIN_CDK_PRODUCT_UVC</div><div class="ttdef"><b>Definition:</b> <a href="a00311_source.xhtml#l00015">TintinCDKCamera.h:15</a></div></div>
<div class="ttc" id="a00167_xhtml"><div class="ttname"><a href="a00167.xhtml">Voxel::USBDevice</a></div><div class="ttdef"><b>Definition:</b> <a href="a00239_source.xhtml#l00081">Device.h:81</a></div></div>
<div class="ttc" id="a00047_xhtml_a2caa3049d026afb04e922bb1e7c0a2a8"><div class="ttname"><a href="a00047.xhtml#a2caa3049d026afb04e922bb1e7c0a2a8">Voxel::Downloader::_device</a></div><div class="ttdeci">DevicePtr _device</div><div class="ttdef"><b>Definition:</b> <a href="a00247_source.xhtml#l00029">Downloader.h:29</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00170_xhtml"><div class="ttname"><a href="a00170.xhtml">Voxel::USBIO</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00017">USBIO.h:17</a></div></div>
<div class="ttc" id="a00113_xhtml"><div class="ttname"><a href="a00113.xhtml">Voxel::Ptr&lt; Device &gt;</a></div></div>
<div class="ttc" id="a00193_xhtml"><div class="ttname"><a href="a00193.xhtml">Voxel::TI::VoxelXUProgrammer</a></div><div class="ttdef"><b>Definition:</b> <a href="a00377_source.xhtml#l00019">VoxelXUProgrammer.h:19</a></div></div>
<div class="ttc" id="a00148_xhtml_a2adb94a5e0b1a66f8a2e21ce0931d46f"><div class="ttname"><a href="a00148.xhtml#a2adb94a5e0b1a66f8a2e21ce0931d46f">Voxel::TI::TintinEEPROMDownloader::_configureForDownload</a></div><div class="ttdeci">virtual bool _configureForDownload()</div><div class="ttdef"><b>Definition:</b> <a href="a00316_source.xhtml#l00037">TintinEEPROMDownloader.cpp:37</a></div></div>
<div class="ttc" id="a00390_xhtml_ga8a21cf7475356ae552da8952ebf885b4"><div class="ttname"><a href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Voxel::Vector</a></div><div class="ttdeci">std::vector&lt; T &gt; Vector</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00051">Common.h:51</a></div></div>
<div class="ttc" id="a00047_xhtml_ae9b2538c8a0b2907157c6b003d12b01c"><div class="ttname"><a href="a00047.xhtml#ae9b2538c8a0b2907157c6b003d12b01c">Voxel::Downloader::_setProgress</a></div><div class="ttdeci">void _setProgress(float progress)</div><div class="ttdef"><b>Definition:</b> <a href="a00247_source.xhtml#l00037">Downloader.h:37</a></div></div>
<div class="ttc" id="a00170_xhtml_a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c"><div class="ttname"><a href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">Voxel::USBIO::FROM_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00029">USBIO.h:29</a></div></div>
<div class="ttc" id="a00170_xhtml_a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22"><div class="ttname"><a href="a00170.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">Voxel::USBIO::RECIPIENT_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00042">USBIO.h:42</a></div></div>
<div class="ttc" id="a00047_xhtml_a452a2b0c18ec856b16fa5317cf7a5a33"><div class="ttname"><a href="a00047.xhtml#a452a2b0c18ec856b16fa5317cf7a5a33">Voxel::Downloader::getProgress</a></div><div class="ttdeci">float getProgress()</div><div class="ttdef"><b>Definition:</b> <a href="a00247_source.xhtml#l00063">Downloader.h:63</a></div></div>
<div class="ttc" id="a00148_xhtml_aee93da719b43fd9c2feb509fa2f5b5d6"><div class="ttname"><a href="a00148.xhtml#aee93da719b43fd9c2feb509fa2f5b5d6">Voxel::TI::TintinEEPROMDownloader::_download</a></div><div class="ttdeci">virtual bool _download(InputFileStream &amp;file, long unsigned int filesize)</div><div class="ttdef"><b>Definition:</b> <a href="a00316_source.xhtml#l00211">TintinEEPROMDownloader.cpp:211</a></div></div>
<div class="ttc" id="a00148_xhtml_a5ff321c1febeefd38de47f4af6d1921f"><div class="ttname"><a href="a00148.xhtml#a5ff321c1febeefd38de47f4af6d1921f">Voxel::TI::TintinEEPROMDownloader::_getEEPROMStatus</a></div><div class="ttdeci">bool _getEEPROMStatus(uint8_t &amp;eepromStatus)</div><div class="ttdef"><b>Definition:</b> <a href="a00316_source.xhtml#l00164">TintinEEPROMDownloader.cpp:164</a></div></div>
<div class="ttc" id="a00311_xhtml_a3a037bf6865f81e124992ae6e5c37624"><div class="ttname"><a href="a00311.xhtml#a3a037bf6865f81e124992ae6e5c37624">TINTIN_CDK_PRODUCT_BULK</a></div><div class="ttdeci">#define TINTIN_CDK_PRODUCT_BULK</div><div class="ttdef"><b>Definition:</b> <a href="a00311_source.xhtml#l00014">TintinCDKCamera.h:14</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00387_xhtml_ab98797c1045f61c0ee5da790ee4e47c8"><div class="ttname"><a href="a00387.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">Voxel::USBIOPtr</a></div><div class="ttdeci">Ptr&lt; USBIO &gt; USBIOPtr</div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00062">USBIO.h:62</a></div></div>
<div class="ttc" id="a00311_xhtml"><div class="ttname"><a href="a00311.xhtml">TintinCDKCamera.h</a></div></div>
<div class="ttc" id="a00047_xhtml_a1f42de5d5feabcb8e7563597a3acac1d"><div class="ttname"><a href="a00047.xhtml#a1f42de5d5feabcb8e7563597a3acac1d">Voxel::Downloader::_outStream</a></div><div class="ttdeci">LoggerOutStream _outStream</div><div class="ttdef"><b>Definition:</b> <a href="a00247_source.xhtml#l00030">Downloader.h:30</a></div></div>
<div class="ttc" id="a00148_xhtml_a5e8d288c9261361f1d769dfaac5cb920"><div class="ttname"><a href="a00148.xhtml#a5e8d288c9261361f1d769dfaac5cb920">Voxel::TI::TintinEEPROMDownloader::_printEEPROMFirst64Bytes</a></div><div class="ttdeci">bool _printEEPROMFirst64Bytes()</div><div class="ttdef"><b>Definition:</b> <a href="a00316_source.xhtml#l00183">TintinEEPROMDownloader.cpp:183</a></div></div>
<div class="ttc" id="a00390_xhtml_gaf37e7f5948ef68c00b6597335b3eedc4"><div class="ttname"><a href="a00390.xhtml#gaf37e7f5948ef68c00b6597335b3eedc4">Voxel::InputFileStream</a></div><div class="ttdeci">std::ifstream InputFileStream</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00100">Common.h:100</a></div></div>
<div class="ttc" id="a00170_xhtml_a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1"><div class="ttname"><a href="a00170.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">Voxel::USBIO::REQUEST_VENDOR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00036">USBIO.h:36</a></div></div>
<div class="ttc" id="a00170_xhtml_a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5"><div class="ttname"><a href="a00170.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">Voxel::USBIO::TO_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00341_source.xhtml#l00028">USBIO.h:28</a></div></div>
<div class="ttc" id="a00169_xhtml_a89b3f58b3eb901457dc6fea89d7dd09d"><div class="ttname"><a href="a00169.xhtml#a89b3f58b3eb901457dc6fea89d7dd09d">Voxel::USBDownloader::_usbIO</a></div><div class="ttdeci">USBIOPtr _usbIO</div><div class="ttdef"><b>Definition:</b> <a href="a00247_source.xhtml#l00073">Downloader.h:73</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758a927dfc961ff499047d5b1c67981bbd31">Voxel::LOG_INFO</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00029">Logger.h:29</a></div></div>
<div class="ttc" id="a00388_xhtml_a673462e50deef9f04e4bdc68f6214539"><div class="ttname"><a href="a00388.xhtml#a673462e50deef9f04e4bdc68f6214539">Voxel::TI::bitReverseTable</a></div><div class="ttdeci">uint8_t bitReverseTable[256]</div><div class="ttdef"><b>Definition:</b> <a href="a00316_source.xhtml#l00017">TintinEEPROMDownloader.cpp:17</a></div></div>
<div class="ttc" id="a00389_xhtml_ga8b8c5a5f71759c97cc49332cfeb89d79"><div class="ttname"><a href="a00389.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">Voxel::DevicePtr</a></div><div class="ttdeci">Ptr&lt; Device &gt; DevicePtr</div><div class="ttdef"><b>Definition:</b> <a href="a00239_source.xhtml#l00079">Device.h:79</a></div></div>
<div class="ttc" id="a00317_xhtml"><div class="ttname"><a href="a00317.xhtml">TintinEEPROMDownloader.h</a></div></div>
<div class="ttc" id="a00311_xhtml_a7c835321c5d7fcf1a3caff3018c3601d"><div class="ttname"><a href="a00311.xhtml#a7c835321c5d7fcf1a3caff3018c3601d">TINTIN_CDK_VENDOR_ID</a></div><div class="ttdeci">#define TINTIN_CDK_VENDOR_ID</div><div class="ttdef"><b>Definition:</b> <a href="a00311_source.xhtml#l00013">TintinCDKCamera.h:13</a></div></div>
<div class="ttc" id="a00377_xhtml"><div class="ttname"><a href="a00377.xhtml">VoxelXUProgrammer.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 12 2015 21:49:55 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
