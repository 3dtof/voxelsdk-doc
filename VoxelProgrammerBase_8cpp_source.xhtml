<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: VoxelProgrammerBase.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_15084b10ffde3b770ebb4469406358eb.xhtml">TI3DToF</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">VoxelProgrammerBase.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="VoxelProgrammerBase_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="VoxelProgrammerBase_8h.xhtml">VoxelProgrammerBase.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Parameter_8h.xhtml">Parameter.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Logger_8h.xhtml">Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span>Voxel</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span>TI</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aefb09c0e28b139e3a0f1fbd948e37d78">   17</a></span>&#160;<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aefb09c0e28b139e3a0f1fbd948e37d78">VoxelProgrammerBase::VoxelProgrammerBase</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">SlaveAddressToByteMap</a> &amp;map, <a class="code" href="classVoxel_1_1Ptr.xhtml">DevicePtr</a> device): _slaveAddressToByteMap(map)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a2bc04ac3af8b7686363888ea5e533354">_device</a> = device;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a7b01ce528713db194fad742a5d2a7976">   22</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a7b01ce528713db194fad742a5d2a7976">VoxelProgrammerBase::readRegister</a>(uint32_t address, uint32_t &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="comment">//LogLevelChanger _(LOG_DEBUG);</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="group__Util.xhtml#ga88e6d392d20b7ba61aa8db477acc3721">Lock&lt;Mutex&gt;</a> _(<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a31021dbbc3bf1306d382598d4bc964f0">_mutex</a>);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml#a65cd8b5334e47888543669af23590d1e">isInitialized</a>())</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Not initialized.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  uint16_t slaveAddress, registerAddress;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  slaveAddress = (address &amp; 0xFF00) &gt;&gt; 8; <span class="comment">// I2C slave address</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  registerAddress = (address &amp; 0xFF); <span class="comment">// I2C register address</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keyword">auto</span> <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> = <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a73dc089c8d75b235f7eaa9fdc6ad39c3">_slaveAddressToByteMap</a>.find(slaveAddress);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> == <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a73dc089c8d75b235f7eaa9fdc6ad39c3">_slaveAddressToByteMap</a>.end())</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Unknown slave address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; std::endl;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  uint byteCount = <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>-&gt;second;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a5237ab869ef24b2e19610e2a47dcbe05">_readRegister</a>(slaveAddress, registerAddress, value, byteCount))</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address  &lt;&lt; std::dec &lt;&lt; std::endl;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">LOG_DEBUG</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: register read @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; value &lt;&lt; std::dec &lt;&lt; std::endl;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#af25f669684ac5322aeda5cfced536af0">   60</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#af25f669684ac5322aeda5cfced536af0">VoxelProgrammerBase::writeRegister</a>(uint32_t address, uint32_t value)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="comment">//LogLevelChanger _(LOG_DEBUG);</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <a class="code" href="group__Util.xhtml#ga88e6d392d20b7ba61aa8db477acc3721">Lock&lt;Mutex&gt;</a> _(<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a31021dbbc3bf1306d382598d4bc964f0">_mutex</a>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml#a65cd8b5334e47888543669af23590d1e">isInitialized</a>())</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Not initialized.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  uint16_t slaveAddress, registerAddress;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  slaveAddress = (address &amp; 0xFF00) &gt;&gt; 8;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  registerAddress = (address &amp; 0xFF);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keyword">auto</span> <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> = <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a73dc089c8d75b235f7eaa9fdc6ad39c3">_slaveAddressToByteMap</a>.find(slaveAddress);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> == <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a73dc089c8d75b235f7eaa9fdc6ad39c3">_slaveAddressToByteMap</a>.end())</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Unknown slave address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  uint byteCount = <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>-&gt;second;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a3fb6de6004b61707a4f4608e5c2107e6">_writeRegister</a>(slaveAddress, registerAddress, value, byteCount))</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address  &lt;&lt; std::dec &lt;&lt; std::endl;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">LOG_DEBUG</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: register write @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; value  &lt;&lt; std::dec &lt;&lt; std::endl;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a5722a686959cb8252b757b458fb20b24">   97</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a5722a686959cb8252b757b458fb20b24">VoxelProgrammerBase::getValue</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Parameter.xhtml">Voxel::Parameter</a> &amp;param, uint32_t &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  uint32_t registerValue;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordflow">if</span>(param.<a class="code" href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">mask</a>() == -1)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// No way to read value</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a7b01ce528713db194fad742a5d2a7976">readRegister</a>(param.<a class="code" href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">address</a>(), registerValue))</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  value = (registerValue &amp; ~param.<a class="code" href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">mask</a>()) &gt;&gt; param.<a class="code" href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">lsb</a>();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#ac0ad35d2e8619b2cb4894fe93e007475">  111</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#ac0ad35d2e8619b2cb4894fe93e007475">VoxelProgrammerBase::setValue</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Parameter.xhtml">Parameter</a> &amp;param, uint32_t value, <span class="keywordtype">bool</span> writeOnly)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  uint32_t registerValue;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordflow">if</span>(param.<a class="code" href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">mask</a>() == -1)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>; <span class="comment">// Fictitiously accept set</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">if</span>(!writeOnly)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a7b01ce528713db194fad742a5d2a7976">readRegister</a>(param.<a class="code" href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">address</a>(), registerValue))</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    registerValue = 0; <span class="comment">// Start with zero value for write-only registers</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  registerValue = ((registerValue &amp; param.<a class="code" href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">mask</a>()) | (value &lt;&lt; param.<a class="code" href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">lsb</a>()));</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#af25f669684ac5322aeda5cfced536af0">writeRegister</a>(param.<a class="code" href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">address</a>(), registerValue);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a2887f02c0a7415dc05b9b063a21389ff"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">Voxel::Parameter::lsb</a></div><div class="ttdeci">uint8_t lsb() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00072">Parameter.h:72</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_af25f669684ac5322aeda5cfced536af0"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#af25f669684ac5322aeda5cfced536af0">Voxel::TI::VoxelProgrammerBase::writeRegister</a></div><div class="ttdeci">virtual bool writeRegister(uint32_t address, uint32_t value)</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8cpp_source.xhtml#l00060">VoxelProgrammerBase.cpp:60</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml">Voxel::Parameter</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00030">Parameter.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_aa5fd87c5c5f54df09b1d53f92e91dac2"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">Voxel::TI::VoxelProgrammerBase::SlaveAddressToByteMap</a></div><div class="ttdeci">Map&lt; uint, uint &gt; SlaveAddressToByteMap</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8h_source.xhtml#l00024">VoxelProgrammerBase.h:24</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_ac0ad35d2e8619b2cb4894fe93e007475"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#ac0ad35d2e8619b2cb4894fe93e007475">Voxel::TI::VoxelProgrammerBase::setValue</a></div><div class="ttdeci">virtual bool setValue(const Parameter &amp;param, uint32_t value, bool writeOnly=false)</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8cpp_source.xhtml#l00111">VoxelProgrammerBase.cpp:111</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a31021dbbc3bf1306d382598d4bc964f0"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a31021dbbc3bf1306d382598d4bc964f0">Voxel::TI::VoxelProgrammerBase::_mutex</a></div><div class="ttdeci">Mutex _mutex</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8h_source.xhtml#l00029">VoxelProgrammerBase.h:29</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a2bc04ac3af8b7686363888ea5e533354"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a2bc04ac3af8b7686363888ea5e533354">Voxel::TI::VoxelProgrammerBase::_device</a></div><div class="ttdeci">DevicePtr _device</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8h_source.xhtml#l00027">VoxelProgrammerBase.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1Ptr_xhtml"><div class="ttname"><a href="classVoxel_1_1Ptr.xhtml">Voxel::Ptr&lt; Device &gt;</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a9a636ff878a110ce8f4951ee6935244d"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">Voxel::Parameter::mask</a></div><div class="ttdeci">uint32_t mask() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00071">Parameter.h:71</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a3fb6de6004b61707a4f4608e5c2107e6"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a3fb6de6004b61707a4f4608e5c2107e6">Voxel::TI::VoxelProgrammerBase::_writeRegister</a></div><div class="ttdeci">virtual bool _writeRegister(uint16_t slaveAddress, uint16_t registerAddress, uint32_t value, uint8_t length)=0</div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a7b01ce528713db194fad742a5d2a7976"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a7b01ce528713db194fad742a5d2a7976">Voxel::TI::VoxelProgrammerBase::readRegister</a></div><div class="ttdeci">virtual bool readRegister(uint32_t address, uint32_t &amp;value) const </div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8cpp_source.xhtml#l00022">VoxelProgrammerBase.cpp:22</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga88e6d392d20b7ba61aa8db477acc3721"><div class="ttname"><a href="group__Util.xhtml#ga88e6d392d20b7ba61aa8db477acc3721">Voxel::Lock</a></div><div class="ttdeci">std::unique_lock&lt; T &gt; Lock</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00069">Common.h:69</a></div></div>
<div class="ttc" id="Logger_8h_xhtml"><div class="ttname"><a href="Logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a73dc089c8d75b235f7eaa9fdc6ad39c3"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a73dc089c8d75b235f7eaa9fdc6ad39c3">Voxel::TI::VoxelProgrammerBase::_slaveAddressToByteMap</a></div><div class="ttdeci">SlaveAddressToByteMap _slaveAddressToByteMap</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8h_source.xhtml#l00031">VoxelProgrammerBase.h:31</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_ae87f19fcc856d69680f0b7cbc495d20a"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">Voxel::Parameter::address</a></div><div class="ttdeci">uint32_t address() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00069">Parameter.h:69</a></div></div>
<div class="ttc" id="namespaceLensCalibrationTest_xhtml_a0013363a9b9db12e50b9307b3d8be7cb"><div class="ttname"><a href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">LensCalibrationTest.x</a></div><div class="ttdeci">tuple x</div><div class="ttdef"><b>Definition:</b> <a href="LensCalibrationTest_8py_source.xhtml#l00021">LensCalibrationTest.py:21</a></div></div>
<div class="ttc" id="VoxelProgrammerBase_8h_xhtml"><div class="ttname"><a href="VoxelProgrammerBase_8h.xhtml">VoxelProgrammerBase.h</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a5722a686959cb8252b757b458fb20b24"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a5722a686959cb8252b757b458fb20b24">Voxel::TI::VoxelProgrammerBase::getValue</a></div><div class="ttdeci">virtual bool getValue(const Parameter &amp;param, uint32_t &amp;value) const </div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8cpp_source.xhtml#l00097">VoxelProgrammerBase.cpp:97</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_a5237ab869ef24b2e19610e2a47dcbe05"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a5237ab869ef24b2e19610e2a47dcbe05">Voxel::TI::VoxelProgrammerBase::_readRegister</a></div><div class="ttdeci">virtual bool _readRegister(uint16_t slaveAddress, uint16_t registerAddress, uint32_t &amp;value, uint8_t length) const =0</div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="Parameter_8h_xhtml"><div class="ttname"><a href="Parameter_8h.xhtml">Parameter.h</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">Voxel::LOG_DEBUG</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00030">Logger.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_aefb09c0e28b139e3a0f1fbd948e37d78"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aefb09c0e28b139e3a0f1fbd948e37d78">Voxel::TI::VoxelProgrammerBase::VoxelProgrammerBase</a></div><div class="ttdeci">VoxelProgrammerBase(const SlaveAddressToByteMap &amp;map, DevicePtr device)</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8cpp_source.xhtml#l00017">VoxelProgrammerBase.cpp:17</a></div></div>
<div class="ttc" id="classVoxel_1_1RegisterProgrammer_xhtml_a65cd8b5334e47888543669af23590d1e"><div class="ttname"><a href="classVoxel_1_1RegisterProgrammer.xhtml#a65cd8b5334e47888543669af23590d1e">Voxel::RegisterProgrammer::isInitialized</a></div><div class="ttdeci">virtual bool isInitialized() const =0</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 21 2015 20:56:03 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
