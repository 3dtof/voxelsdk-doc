<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: DMLParseTest.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_37618a71d99bdfed5979e976980d5eec.xhtml">Test</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DMLParseTest.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00245.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;SimpleOpt.h&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00223.xhtml">Common.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00274.xhtml">Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;iomanip&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00319.xhtml">TinyXML2.h</a>&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00281.xhtml">ParameterDMLParser.h</a>&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using namespace </span>Voxel;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using namespace </span>TinyXML2;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="a00049.xhtml">   20</a></span>&#160;<span class="keyword">class </span><a class="code" href="a00049.xhtml">DummyRegisterProgrammer</a>: <span class="keyword">public</span> <a class="code" href="a00121.xhtml">RegisterProgrammer</a></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="a00049.xhtml#a2487f3ed7130853a9e9ccd3da1ec49ff">   22</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00049.xhtml#a2487f3ed7130853a9e9ccd3da1ec49ff">getValue</a>(<span class="keyword">const</span> <a class="code" href="a00101.xhtml">Parameter</a> &amp;param, uint32_t &amp;value)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="a00049.xhtml#afd46c401e9915a43d7c17db91a4e5a16">   23</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00049.xhtml#afd46c401e9915a43d7c17db91a4e5a16">isInitialized</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="a00049.xhtml#a2c8d404446f3b91d96ef1dd9c0644701">   24</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00049.xhtml#a2c8d404446f3b91d96ef1dd9c0644701">readRegister</a>(uint32_t address, uint32_t &amp;value)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="a00049.xhtml#a130b833d9017a1c97a573f6e08cd46d5">   25</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00049.xhtml#a130b833d9017a1c97a573f6e08cd46d5">reset</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="a00049.xhtml#a572126c755b6b141b9f276fc3c90db26">   26</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00049.xhtml#a572126c755b6b141b9f276fc3c90db26">setValue</a>(<span class="keyword">const</span> <a class="code" href="a00101.xhtml">Parameter</a> &amp;param, uint32_t value, <span class="keywordtype">bool</span> writeOnly = <span class="keyword">false</span>) { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="a00049.xhtml#a78e28dcd801f01506b551e350a0b54a6">   27</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00049.xhtml#a78e28dcd801f01506b551e350a0b54a6">writeRegister</a>(uint32_t address, uint32_t value) { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;};</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="a00245.xhtml#adf7c3ac791f996a56160a12f379cbd99">   30</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="a00216.xhtml#adf7c3ac791f996a56160a12f379cbd99">Options</a></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="a00245.xhtml#adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7">   32</a></span>&#160;  <a class="code" href="a00245.xhtml#adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7">XML_FILE</a> = 0,</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;};</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="a00245.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">   35</a></span>&#160;<a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;CSimpleOpt::SOption&gt;</a> <a class="code" href="a00245.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a> = </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  { <a class="code" href="a00245.xhtml#adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7">XML_FILE</a>,    <span class="stringliteral">&quot;-x&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;XML file name&quot;</span>},</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  SO_END_OF_OPTIONS</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="a00245.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">   41</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00245.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>()</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;DMLParseTest v1.0&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  CSimpleOpt::SOption *option = <a class="code" href="a00245.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a>.data();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">while</span>(option-&gt;nId &gt;= 0)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    std::cout &lt;&lt; option-&gt;pszArg &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; option-&gt;helpInfo &lt;&lt; std::endl;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    option++;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="a00245.xhtml#a0ddf1224851353fc92bfbff6f499fa97">   55</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="a00245.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  CSimpleOpt s(argc, argv, <a class="code" href="a00245.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a>);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>.<a class="code" href="a00093.xhtml#a24cc93971582344584a5c9064d897cbe">setDefaultLogLevel</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">LOG_DEBUG</a>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <a class="code" href="a00130.xhtml">String</a> xmlFile;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">while</span> (s.Next())</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span> (s.LastError() != SO_SUCCESS)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      std::cout &lt;&lt; s.GetLastErrorText(s.LastError()) &lt;&lt; <span class="stringliteral">&quot;: &#39;&quot;</span> &lt;&lt; s.OptionText() &lt;&lt; <span class="stringliteral">&quot;&#39; (use -h to get command line help)&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <a class="code" href="a00245.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">//std::cout &lt;&lt; s.OptionId() &lt;&lt; &quot;: &quot; &lt;&lt; s.OptionArg() &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> splits;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">switch</span> (s.OptionId())</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="a00245.xhtml#adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7">XML_FILE</a>:</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        xmlFile = s.OptionArg();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="a00245.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    };</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">if</span>(xmlFile.size() == 0)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Required argument missing.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="a00245.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  std::ifstream f(xmlFile, std::ios::binary);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">if</span>(!f.good())</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to open &#39;&quot;</span> &lt;&lt; xmlFile &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  f.close();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="comment">//XMLDocument doc;</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">//doc.LoadFile(xmlFile.c_str());</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="comment">//XMLElement *node = doc.FirstChildElement(&quot;RegMap&quot;);</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <a class="code" href="a00049.xhtml">DummyRegisterProgrammer</a> <a class="code" href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">r</a>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <a class="code" href="a00102.xhtml">ParameterDMLParser</a> p(r, xmlFile);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;ParameterPtr&gt;</a> params;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  p.<a class="code" href="a00102.xhtml#ad605e36f21f13ac72f59e58e64754e74">getParameters</a>(params);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="ttc" id="a00274_xhtml"><div class="ttname"><a href="a00274.xhtml">Logger.h</a></div></div>
<div class="ttc" id="a00102_xhtml"><div class="ttname"><a href="a00102.xhtml">Voxel::ParameterDMLParser</a></div><div class="ttdef"><b>Definition:</b> <a href="a00281_source.xhtml#l00022">ParameterDMLParser.h:22</a></div></div>
<div class="ttc" id="a00395_xhtml"><div class="ttname"><a href="a00395.xhtml">Vector&lt; String &gt;</a></div></div>
<div class="ttc" id="a00049_xhtml_a2487f3ed7130853a9e9ccd3da1ec49ff"><div class="ttname"><a href="a00049.xhtml#a2487f3ed7130853a9e9ccd3da1ec49ff">DummyRegisterProgrammer::getValue</a></div><div class="ttdeci">virtual bool getValue(const Parameter &amp;param, uint32_t &amp;value) const </div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00022">DMLParseTest.cpp:22</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00378_xhtml_a56ca3083cd3df8d8feeac39ad5d44478"><div class="ttname"><a href="a00378.xhtml#a56ca3083cd3df8d8feeac39ad5d44478">CameraSystemIQFrameTest.r</a></div><div class="ttdeci">tuple r</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00018">CameraSystemIQFrameTest.py:18</a></div></div>
<div class="ttc" id="a00130_xhtml"><div class="ttname"><a href="a00130.xhtml">String</a></div></div>
<div class="ttc" id="a00223_xhtml"><div class="ttname"><a href="a00223.xhtml">Common.h</a></div></div>
<div class="ttc" id="a00390_xhtml_ga8a21cf7475356ae552da8952ebf885b4"><div class="ttname"><a href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Voxel::Vector</a></div><div class="ttdeci">std::vector&lt; T &gt; Vector</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00051">Common.h:51</a></div></div>
<div class="ttc" id="a00216_xhtml_adf7c3ac791f996a56160a12f379cbd99"><div class="ttname"><a href="a00216.xhtml#adf7c3ac791f996a56160a12f379cbd99">Options</a></div><div class="ttdeci">Options</div><div class="ttdef"><b>Definition:</b> <a href="a00216_source.xhtml#l00019">CameraSystemReadStreamTest.cpp:19</a></div></div>
<div class="ttc" id="a00049_xhtml_a130b833d9017a1c97a573f6e08cd46d5"><div class="ttname"><a href="a00049.xhtml#a130b833d9017a1c97a573f6e08cd46d5">DummyRegisterProgrammer::reset</a></div><div class="ttdeci">virtual bool reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00025">DMLParseTest.cpp:25</a></div></div>
<div class="ttc" id="a00245_xhtml_a7055ab3ff9a1857b4a934d2523cae5d2"><div class="ttname"><a href="a00245.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a></div><div class="ttdeci">Vector&lt; CSimpleOpt::SOption &gt; argumentSpecifications</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00035">DMLParseTest.cpp:35</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00093_xhtml_a24cc93971582344584a5c9064d897cbe"><div class="ttname"><a href="a00093.xhtml#a24cc93971582344584a5c9064d897cbe">Voxel::Logger::setDefaultLogLevel</a></div><div class="ttdeci">void setDefaultLogLevel(LogLevel loglevel)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00110">Logger.h:110</a></div></div>
<div class="ttc" id="a00101_xhtml"><div class="ttname"><a href="a00101.xhtml">Voxel::Parameter</a></div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00030">Parameter.h:30</a></div></div>
<div class="ttc" id="a00121_xhtml"><div class="ttname"><a href="a00121.xhtml">Voxel::RegisterProgrammer</a></div><div class="ttdef"><b>Definition:</b> <a href="a00297_source.xhtml#l00024">RegisterProgrammer.h:24</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">Voxel::LOG_DEBUG</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00030">Logger.h:30</a></div></div>
<div class="ttc" id="a00245_xhtml_a0ddf1224851353fc92bfbff6f499fa97"><div class="ttname"><a href="a00245.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a></div><div class="ttdeci">int main(int argc, char *argv[])</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00055">DMLParseTest.cpp:55</a></div></div>
<div class="ttc" id="a00102_xhtml_ad605e36f21f13ac72f59e58e64754e74"><div class="ttname"><a href="a00102.xhtml#ad605e36f21f13ac72f59e58e64754e74">Voxel::ParameterDMLParser::getParameters</a></div><div class="ttdeci">bool getParameters(Vector&lt; ParameterPtr &gt; &amp;parameters)</div><div class="ttdef"><b>Definition:</b> <a href="a00280_source.xhtml#l00290">ParameterDMLParser.cpp:290</a></div></div>
<div class="ttc" id="a00049_xhtml_afd46c401e9915a43d7c17db91a4e5a16"><div class="ttname"><a href="a00049.xhtml#afd46c401e9915a43d7c17db91a4e5a16">DummyRegisterProgrammer::isInitialized</a></div><div class="ttdeci">virtual bool isInitialized() const </div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00023">DMLParseTest.cpp:23</a></div></div>
<div class="ttc" id="a00245_xhtml_a97ee70a8770dc30d06c744b24eb2fcfc"><div class="ttname"><a href="a00245.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a></div><div class="ttdeci">void help()</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00041">DMLParseTest.cpp:41</a></div></div>
<div class="ttc" id="a00281_xhtml"><div class="ttname"><a href="a00281.xhtml">ParameterDMLParser.h</a></div></div>
<div class="ttc" id="a00049_xhtml_a78e28dcd801f01506b551e350a0b54a6"><div class="ttname"><a href="a00049.xhtml#a78e28dcd801f01506b551e350a0b54a6">DummyRegisterProgrammer::writeRegister</a></div><div class="ttdeci">virtual bool writeRegister(uint32_t address, uint32_t value)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00027">DMLParseTest.cpp:27</a></div></div>
<div class="ttc" id="a00049_xhtml_a2c8d404446f3b91d96ef1dd9c0644701"><div class="ttname"><a href="a00049.xhtml#a2c8d404446f3b91d96ef1dd9c0644701">DummyRegisterProgrammer::readRegister</a></div><div class="ttdeci">virtual bool readRegister(uint32_t address, uint32_t &amp;value) const </div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00024">DMLParseTest.cpp:24</a></div></div>
<div class="ttc" id="a00049_xhtml"><div class="ttname"><a href="a00049.xhtml">DummyRegisterProgrammer</a></div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00020">DMLParseTest.cpp:20</a></div></div>
<div class="ttc" id="a00245_xhtml_adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7"><div class="ttname"><a href="a00245.xhtml#adf7c3ac791f996a56160a12f379cbd99ac24c942427a0430933bce9aaf2be2df7">XML_FILE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00032">DMLParseTest.cpp:32</a></div></div>
<div class="ttc" id="a00319_xhtml"><div class="ttname"><a href="a00319.xhtml">TinyXML2.h</a></div></div>
<div class="ttc" id="a00049_xhtml_a572126c755b6b141b9f276fc3c90db26"><div class="ttname"><a href="a00049.xhtml#a572126c755b6b141b9f276fc3c90db26">DummyRegisterProgrammer::setValue</a></div><div class="ttdeci">virtual bool setValue(const Parameter &amp;param, uint32_t value, bool writeOnly=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00026">DMLParseTest.cpp:26</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 12 2015 21:49:55 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
