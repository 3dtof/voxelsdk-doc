<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: elfio.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d4f7a754e06480f800a6fab4b04999ce.xhtml">Util</a></li><li class="navelem"><a class="el" href="dir_fd724d2bac3d76b33b528d46582418a2.xhtml">elfio</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">elfio.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="elfio_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">Copyright (C) 2001-2015 by Serge Lamikhov-Center</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">all copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">THE SOFTWARE.</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#ifndef ELFIO_HPP</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#define ELFIO_HPP</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#pragma warning ( push )</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#pragma warning(disable:4355)</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#pragma warning(disable:4244)</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;deque&gt;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elf__types_8hpp.xhtml">elfio/elf_types.hpp</a>&gt;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__utils_8hpp.xhtml">elfio/elfio_utils.hpp</a>&gt;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__header_8hpp.xhtml">elfio/elfio_header.hpp</a>&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__section_8hpp.xhtml">elfio/elfio_section.hpp</a>&gt;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__segment_8hpp.xhtml">elfio/elfio_segment.hpp</a>&gt;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__strings_8hpp.xhtml">elfio/elfio_strings.hpp</a>&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="elfio_8hpp.xhtml#a29302b95b20e0f31273fbfe52a246d69">   48</a></span>&#160;<span class="preprocessor">#define ELFIO_HEADER_ACCESS_GET( TYPE, FNAME ) \</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">TYPE                                           \</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">get_##FNAME() const                            \</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">{                                              \</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">    return header-&gt;get_##FNAME();              \</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">}</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="elfio_8hpp.xhtml#ad7436eea229d042753848488ca67111c">   55</a></span>&#160;<span class="preprocessor">#define ELFIO_HEADER_ACCESS_GET_SET( TYPE, FNAME ) \</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">TYPE                                               \</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">get_##FNAME() const                                \</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">{                                                  \</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">    return header-&gt;get_##FNAME();                  \</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">}                                                  \</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">void                                               \</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">set_##FNAME( TYPE val )                            \</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">{                                                  \</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">    header-&gt;set_##FNAME( val );                    \</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">}                                                  \</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">namespace </span>ELFIO {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml">   70</a></span>&#160;<span class="keyword">class </span><a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#ab5d99cd44a973c1adabdba1c1e7c086b">   74</a></span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#ab5d99cd44a973c1adabdba1c1e7c086b">elfio</a>() : <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>( this ), <a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>( this )</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>      = 0;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a505f88e23277cb7945d4f411fe2b4d85">create</a>( <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a>, <a class="code" href="elf__types_8hpp.xhtml#af66303c799da18c8aec282ea8592e7e7">ELFDATA2LSB</a> );</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a1b58bcf52b170af012e5b31c8725675a">   81</a></span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a1b58bcf52b170af012e5b31c8725675a">~elfio</a>()</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#ae462b15020a575fd0adc005338324a8c">clean</a>();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a505f88e23277cb7945d4f411fe2b4d85">   87</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a505f88e23277cb7945d4f411fe2b4d85">create</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> file_class, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> encoding )</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#ae462b15020a575fd0adc005338324a8c">clean</a>();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a>.<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a67d470a1b50e356dba4666781872a090">setup</a>( encoding );</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a> = <a class="code" href="classELFIO_1_1elfio.xhtml#a67a760cc86b7595b483e93da603ec774">create_header</a>( file_class, encoding );</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a905e7d6672f7109423309f05c941cf80">create_mandatory_sections</a>();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#af313dfceaf57ca8342e1cebba19a986e">   96</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#af313dfceaf57ca8342e1cebba19a986e">load</a>( <span class="keyword">const</span> std::string&amp; file_name )</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        std::ifstream stream;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        stream.open( file_name.c_str(), std::ios::in | std::ios::binary );</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">if</span> ( !stream ) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio.xhtml#af313dfceaf57ca8342e1cebba19a986e">load</a>(stream);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a1eb421b95b3deb91f7e4c28cbf094614">  108</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a1eb421b95b3deb91f7e4c28cbf094614">load</a>( std::istream &amp;stream )</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#ae462b15020a575fd0adc005338324a8c">clean</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> e_ident[<a class="code" href="elf__types_8hpp.xhtml#ae407130db14180c6737390604ba7c1fe">EI_NIDENT</a>];</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment">// Read ELF file signature</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        stream.seekg( 0 );</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        stream.read( reinterpret_cast&lt;char*&gt;( &amp;e_ident ), <span class="keyword">sizeof</span>( e_ident ) );</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="comment">// Is it ELF file?</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">if</span> ( stream.gcount() != <span class="keyword">sizeof</span>( e_ident ) ||</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;             e_ident[<a class="code" href="elf__types_8hpp.xhtml#aba717f40a418b0d99c2efd4cdab4f54f">EI_MAG0</a>] != <a class="code" href="elf__types_8hpp.xhtml#a2ae7ae1a6df04e0ed6be07b94590686e">ELFMAG0</a>    ||</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;             e_ident[<a class="code" href="elf__types_8hpp.xhtml#a2cae3878d982911632b418680718d53b">EI_MAG1</a>] != <a class="code" href="elf__types_8hpp.xhtml#a6237b3c20ffd799df7b9a91ab3bbdff4">ELFMAG1</a>    ||</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;             e_ident[<a class="code" href="elf__types_8hpp.xhtml#a2884a339ef7aefee59d160ed3fbb1739">EI_MAG2</a>] != <a class="code" href="elf__types_8hpp.xhtml#a8ac1b98d78e30ca49e1d3f287939a18f">ELFMAG2</a>    ||</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;             e_ident[<a class="code" href="elf__types_8hpp.xhtml#ace03d4c5e8952e27b8505581432c3b84">EI_MAG3</a>] != <a class="code" href="elf__types_8hpp.xhtml#a2beeae5974769f72da5f63dcbcc325fe">ELFMAG3</a> ) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">if</span> ( ( e_ident[<a class="code" href="elf__types_8hpp.xhtml#a5b508cacf6662e4bc0e98ffe1eb61636">EI_CLASS</a>] != <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) &amp;&amp;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;             ( e_ident[<a class="code" href="elf__types_8hpp.xhtml#a5b508cacf6662e4bc0e98ffe1eb61636">EI_CLASS</a>] != <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> )) {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a>.<a class="code" href="classELFIO_1_1endianess__convertor.xhtml#a67d470a1b50e356dba4666781872a090">setup</a>( e_ident[<a class="code" href="elf__types_8hpp.xhtml#a79c714b4bf89638ff576e163d7d2144f">EI_DATA</a>] );</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a> = <a class="code" href="classELFIO_1_1elfio.xhtml#a67a760cc86b7595b483e93da603ec774">create_header</a>( e_ident[<a class="code" href="elf__types_8hpp.xhtml#a5b508cacf6662e4bc0e98ffe1eb61636">EI_CLASS</a>], e_ident[EI_DATA] );</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">if</span> ( 0 == <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a> ) {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;<a class="code" href="classELFIO_1_1elf__header.xhtml#ab4d46f817a381c214901d83e20e8f105">load</a>( stream ) ) {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a38fb57bbcfaec1219a0a59061f85a98b">load_sections</a>( stream );</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a0c0eab65897234841184372f1a472166">load_segments</a>( stream );</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a4dfd167b10c72779390871865d16db61">  149</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a4dfd167b10c72779390871865d16db61">save</a>( <span class="keyword">const</span> std::string&amp; file_name )</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        std::ofstream f( file_name.c_str(), std::ios::out | std::ios::binary );</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">if</span> ( !f ) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordtype">bool</span> is_still_good = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="comment">// Define layout specific header fields</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="comment">// The position of the segment table is fixed after the header.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="comment">// The position of the section table is variable and needs to be fixed</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="comment">// before saving.</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;set_segments_num( <a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>.<a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">size</a>() );</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;set_segments_offset( <a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>.<a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">size</a>() ? <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_header_size() : 0 );</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;set_sections_num( <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>() );</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;set_sections_offset( 0 );</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="comment">// Layout the first section right after the segment table</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_header_size() +</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segment_entry_size() * <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segments_num();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        is_still_good = <a class="code" href="classELFIO_1_1elfio.xhtml#afeb689c3a26b7c317e89f26a6390fce2">layout_segments_and_their_sections</a>();</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        is_still_good = is_still_good &amp;&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#a4fc135345793b514b770826a4f276267">layout_sections_without_segments</a>();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        is_still_good = is_still_good &amp;&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#a54622db6125c18f37291c063b2dacb4b">layout_section_table</a>();</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        is_still_good = is_still_good &amp;&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#a4809badae60c172cad0ac9c14c4c8175">save_header</a>( f );</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        is_still_good = is_still_good &amp;&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#a02a2dcf9659572a104c874c854f1ab3d">save_sections</a>( f );</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        is_still_good = is_still_good &amp;&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#ae4681b3161b1cfa4ed545eb8181887b3">save_segments</a>( f );</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        f.close();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">return</span> is_still_good;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">// ELF header access functions</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO_HEADER_ACCESS_GET</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>, <span class="keyword">class</span>              );</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO_HEADER_ACCESS_GET</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>, elf_version        );</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO_HEADER_ACCESS_GET</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>, encoding           );</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO_HEADER_ACCESS_GET</a>( <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a>,      version            );</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO_HEADER_ACCESS_GET</a>( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>,      header_size        );</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO_HEADER_ACCESS_GET</a>( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>,      section_entry_size );</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO_HEADER_ACCESS_GET</a>( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>,      segment_entry_size );</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>, os_abi                 );</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>, abi_version            );</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>,      type                   );</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>,      machine                );</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a>,      flags                  );</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <a class="code" href="namespaceELFIO.xhtml#a10b98acc49bab16ded42171fb3431f83">Elf64_Addr</a>,    entry                  );</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a>,     sections_offset        );</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a>,     segments_offset        );</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO_HEADER_ACCESS_GET_SET</a>( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>,      section_name_str_index );</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#af8a6706052d3029c76e5332eba10ad77">  206</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classELFIO_1_1endianess__convertor.xhtml">endianess_convertor</a>&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#af8a6706052d3029c76e5332eba10ad77">get_convertor</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a465f3d0018c582c1a159a7ec6d0e4475">  212</a></span>&#160;    <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> <a class="code" href="classELFIO_1_1elfio.xhtml#a465f3d0018c582c1a159a7ec6d0e4475">get_default_entry_size</a>( <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> section_type )<span class="keyword"> const</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">switch</span>( section_type ) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="elf__types_8hpp.xhtml#abf2fc2781a2869352c2ffa0555f34118">SHT_RELA</a>:</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_class() == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf64__Rela.xhtml">Elf64_Rela</a> );</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf32__Rela.xhtml">Elf32_Rela</a> );</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="elf__types_8hpp.xhtml#a2aea2ed985f81f13a157fe2da02a621a">SHT_REL</a>:</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_class() == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf64__Rel.xhtml">Elf64_Rel</a> );</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf32__Rel.xhtml">Elf32_Rel</a> );</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="elf__types_8hpp.xhtml#a4add7784e43ec3d3b9c09d3ffc476a81">SHT_SYMTAB</a>:</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_class() == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf64__Sym.xhtml">Elf64_Sym</a> );</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf32__Sym.xhtml">Elf32_Sym</a> );</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="elf__types_8hpp.xhtml#a3a9278d12cf2c9e7eaca87688d0a6e37">SHT_DYNAMIC</a>:</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_class() == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf64__Dyn.xhtml">Elf64_Dyn</a> );</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">sizeof</span>( <a class="code" href="structELFIO_1_1Elf32__Dyn.xhtml">Elf32_Dyn</a> );</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#ae462b15020a575fd0adc005338324a8c">  251</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classELFIO_1_1elfio.xhtml#ae462b15020a575fd0adc005338324a8c">clean</a>()</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">delete</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a> = 0;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        std::vector&lt;section*&gt;::const_iterator it;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">for</span> ( it = <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.begin(); it != <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.end(); ++it ) {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keyword">delete</span> *it;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.clear();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        std::vector&lt;segment*&gt;::const_iterator it1;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">for</span> ( it1 = <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.begin(); it1 != <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.end(); ++it1 ) {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keyword">delete</span> *it1;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.clear();</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a67a760cc86b7595b483e93da603ec774">  270</a></span>&#160;    <a class="code" href="classELFIO_1_1elf__header.xhtml">elf_header</a>* <a class="code" href="classELFIO_1_1elfio.xhtml#a67a760cc86b7595b483e93da603ec774">create_header</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> file_class, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> encoding )</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <a class="code" href="classELFIO_1_1elf__header.xhtml">elf_header</a>* new_header = 0;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            new_header = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1elf__header__impl.xhtml">elf_header_impl&lt; Elf64_Ehdr &gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a>,</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                                            encoding );</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            new_header = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1elf__header__impl.xhtml">elf_header_impl&lt; Elf32_Ehdr &gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a>,</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                                                            encoding );</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">return</span> new_header;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a6bb2c14190dc3ee9a220ec349c1640f5">  290</a></span>&#160;    <a class="code" href="classELFIO_1_1section.xhtml">section</a>* <a class="code" href="classELFIO_1_1elfio.xhtml#a6bb2c14190dc3ee9a220ec349c1640f5">create_section</a>()</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    {</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <a class="code" href="classELFIO_1_1section.xhtml">section</a>*      new_section;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> file_class = get_class();</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            new_section = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1section__impl.xhtml">section_impl&lt;Elf64_Shdr&gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a> );</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        }</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            new_section = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1section__impl.xhtml">section_impl&lt;Elf32_Shdr&gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a> );</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        new_section-&gt;set_index( (<a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>)<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.size() );</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.push_back( new_section );</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">return</span> new_section;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a83917c15c0bc56bccfbacc8467fd4028">  313</a></span>&#160;    <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* <a class="code" href="classELFIO_1_1elfio.xhtml#a83917c15c0bc56bccfbacc8467fd4028">create_segment</a>()</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    {</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>*      new_segment;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> file_class = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_class();</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            new_segment = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1segment__impl.xhtml">segment_impl&lt;Elf64_Phdr&gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a> );</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            new_segment = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1segment__impl.xhtml">segment_impl&lt;Elf32_Phdr&gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a> );</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        }</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        new_segment-&gt;set_index( (<a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>)<a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.size() );</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.push_back( new_segment );</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordflow">return</span> new_segment;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a905e7d6672f7109423309f05c941cf80">  335</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a905e7d6672f7109423309f05c941cf80">create_mandatory_sections</a>()</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="comment">// Create null section without calling to &#39;add_section&#39; as no string</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="comment">// section containing section names exists yet</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec0 = <a class="code" href="classELFIO_1_1elfio.xhtml#a6bb2c14190dc3ee9a220ec349c1640f5">create_section</a>();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        sec0-&gt;set_index( 0 );</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        sec0-&gt;set_name( <span class="stringliteral">&quot;&quot;</span> );</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        sec0-&gt;set_name_string_offset( 0 );</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        set_section_name_str_index( 1 );</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <a class="code" href="classELFIO_1_1section.xhtml">section</a>* shstrtab = <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#af60206f1e95ae37985df476419ce875e">add</a>( <span class="stringliteral">&quot;.shstrtab&quot;</span> );</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        shstrtab-&gt;set_type( <a class="code" href="elf__types_8hpp.xhtml#af4b916dc4ca5016fb5c374068002a532">SHT_STRTAB</a> );</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a38fb57bbcfaec1219a0a59061f85a98b">  350</a></span>&#160;    <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> <a class="code" href="classELFIO_1_1elfio.xhtml#a38fb57bbcfaec1219a0a59061f85a98b">load_sections</a>( std::istream&amp; stream )</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    {</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>  entry_size = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_section_entry_size();</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>  num        = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_sections_num();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> offset     = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_sections_offset();</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; num; ++i ) {</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = <a class="code" href="classELFIO_1_1elfio.xhtml#a6bb2c14190dc3ee9a220ec349c1640f5">create_section</a>();</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            sec-&gt;<a class="code" href="classELFIO_1_1section.xhtml#a6b85f1b2b75aca23446772c146052e54">load</a>( stream, (std::streamoff)offset + i * entry_size );</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            sec-&gt;set_index( i );</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="comment">// To mark that the section is not permitted to reassign address</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="comment">// during layout calculation</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            sec-&gt;set_address( sec-&gt;get_address() );</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> shstrndx = get_section_name_str_index();</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#ab2f25695673c5f1c4ec723e595288411">SHN_UNDEF</a> != shstrndx ) {</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <a class="code" href="classELFIO_1_1string__section__accessor.xhtml">string_section_accessor</a> str_reader( <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[shstrndx] );</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; num; ++i ) {</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> offset = <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[i]-&gt;get_name_string_offset();</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">char</span>* p = str_reader.<a class="code" href="classELFIO_1_1string__section__accessor.xhtml#abf7ba3e0d2d1e200f13ec4b4bdff96d1">get_string</a>( offset );</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                <span class="keywordflow">if</span> ( p != 0 ) {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[i]-&gt;set_name( p );</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            }</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        }</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">return</span> num;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a0c0eab65897234841184372f1a472166">  382</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a0c0eab65897234841184372f1a472166">load_segments</a>( std::istream&amp; stream )</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    {</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>  entry_size = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segment_entry_size();</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>  num        = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segments_num();</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> offset     = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segments_offset();</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; num; ++i ) {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> file_class = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_class();</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a> ) {</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                seg = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1segment__impl.xhtml">segment_impl&lt;Elf64_Phdr&gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a> );</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( file_class == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) {</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                seg = <span class="keyword">new</span> <a class="code" href="classELFIO_1_1segment__impl.xhtml">segment_impl&lt;Elf32_Phdr&gt;</a>( &amp;<a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a> );</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            }</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a2f538b21d28871c278c0bcdb3991d07d">load</a>( stream, (std::streamoff)offset + i * entry_size );</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            seg-&gt;set_index( i );</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="comment">// Add sections to the segments (similar to readelfs algorithm)</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> segBaseOffset = seg-&gt;get_offset();</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> segEndOffset  = segBaseOffset + seg-&gt;get_file_size();</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> segVBaseAddr = seg-&gt;get_virtual_address();</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> segVEndAddr  = segVBaseAddr + seg-&gt;get_memory_size();</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keywordflow">for</span>( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> j = 0; j &lt; <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>(); ++j ) {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keyword">const</span> <a class="code" href="classELFIO_1_1section.xhtml">section</a>* psec = <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[j];</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="comment">// SHF_ALLOC sections are matched based on the virtual address</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                <span class="comment">// otherwise the file offset is matched</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                <span class="keywordflow">if</span>( psec-&gt;get_flags() &amp; <a class="code" href="elf__types_8hpp.xhtml#a38476fe4ed88ac83ba86a4e103199a86">SHF_ALLOC</a></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                      ? (segVBaseAddr &lt;= psec-&gt;get_address()</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                          &amp;&amp; psec-&gt;get_address() + psec-&gt;get_size()</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                           &lt;= segVEndAddr)</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                      : (segBaseOffset &lt;= psec-&gt;get_offset()</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                          &amp;&amp; psec-&gt;get_offset() + psec-&gt;get_size()</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                           &lt;= segEndOffset)) {</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                      seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#ab9dad348857c6f427ae53fddda0df4cd">add_section_index</a>( psec-&gt;get_index(),</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                              psec-&gt;get_addr_align() );</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                }</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            }</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <span class="comment">// Add section into the segments&#39; container</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.push_back( seg );</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        }</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    }</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a4809badae60c172cad0ac9c14c4c8175">  435</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a4809badae60c172cad0ac9c14c4c8175">save_header</a>( std::ofstream&amp; f )</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    {</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;<a class="code" href="classELFIO_1_1elf__header.xhtml#a4ddc14a74b4d2e919ba300f88ea90af6">save</a>( f );</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    }</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a02a2dcf9659572a104c874c854f1ab3d">  441</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a02a2dcf9659572a104c874c854f1ab3d">save_sections</a>( std::ofstream&amp; f )</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    {</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.size(); ++i ) {</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a> *sec = <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.at(i);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            std::streampos headerPosition =</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                (std::streamoff)<a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_sections_offset() +</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_section_entry_size() * sec-&gt;get_index();</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            sec-&gt;<a class="code" href="classELFIO_1_1section.xhtml#a957d8a474005ba0177fae12a8b019d8a">save</a>(f,headerPosition,sec-&gt;get_offset());</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        }</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    }</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00456"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#ae4681b3161b1cfa4ed545eb8181887b3">  456</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#ae4681b3161b1cfa4ed545eb8181887b3">save_segments</a>( std::ofstream&amp; f )</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    {</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.size(); ++i ) {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <a class="code" href="classELFIO_1_1segment.xhtml">segment</a> *seg = <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.at(i);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            std::streampos headerPosition = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segments_offset()  +</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segment_entry_size()*seg-&gt;get_index();</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a411eb1987c97609b98878c95b44c3f78">save</a>( f, headerPosition, seg-&gt;get_offset() );</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    }</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#addb0a18fc070853b97cc3a3a6b51391f">  470</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#addb0a18fc070853b97cc3a3a6b51391f">is_section_without_segment</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> section_index )</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    {</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        </div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j = 0; !found &amp;&amp; ( j &lt; <a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>.<a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">size</a>() ); ++j ) {</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k = 0;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                  !found &amp;&amp; ( k &lt; <a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>[j]-&gt;get_sections_num() );</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                  ++k ) {</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                found = <a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>[j]-&gt;get_section_index_at( k ) == section_index;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            }</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        }</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keywordflow">return</span> !found;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a50a52bf4075a0c0a1373a4ecea939437">  486</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a50a52bf4075a0c0a1373a4ecea939437">is_subsequence_of</a>( <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg1, <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg2 )</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    {</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="comment">// Return &#39;true&#39; if sections of seg1 are a subset of sections in seg2</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keyword">const</span> std::vector&lt;Elf_Half&gt;&amp; sections1 = seg1-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#ab488583facc3d0f4f79911457c6e073f">get_sections</a>();</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keyword">const</span> std::vector&lt;Elf_Half&gt;&amp; sections2 = seg2-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#ab488583facc3d0f4f79911457c6e073f">get_sections</a>();</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="keywordflow">if</span> ( sections1.size() &lt;  sections2.size() ) {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            found = std::includes( sections2.begin(), sections2.end(),</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                   sections1.begin(), sections1.end() );</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">return</span> found;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a6ae5a2aeca80ad4ddac396673e3fa745">  502</a></span>&#160;    std::vector&lt;segment*&gt; <a class="code" href="classELFIO_1_1elfio.xhtml#a6ae5a2aeca80ad4ddac396673e3fa745">get_ordered_segments</a>( )</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        std::vector&lt;segment*&gt; res;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        std::deque&lt;segment*&gt;  worklist;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        res.reserve(<a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>.<a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">size</a>());</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        std::copy( <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.begin(), <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.end(),</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                   std::back_inserter( worklist )) ;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="comment">// Bring the segments which start at address 0 to the front</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keywordtype">size_t</span> nextSlot = 0;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="keywordflow">for</span>( <span class="keywordtype">size_t</span> i = 0; i &lt; worklist.size(); ++i ) {</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            <span class="keywordflow">if</span>( i != nextSlot &amp;&amp; worklist[i]-&gt;is_offset_initialized()</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                &amp;&amp; worklist[i]-&gt;get_offset() == 0 ) {</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                std::swap(worklist[i],worklist[nextSlot]);</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                ++nextSlot;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keywordflow">while</span> ( !worklist.empty() ) {</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <a class="code" href="classELFIO_1_1segment.xhtml">segment</a> *seg = worklist.front();</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            worklist.pop_front();</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <span class="keywordtype">size_t</span> i = 0;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="keywordflow">for</span> ( ; i &lt; worklist.size(); ++i ) {</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="classELFIO_1_1elfio.xhtml#a50a52bf4075a0c0a1373a4ecea939437">is_subsequence_of</a>( seg, worklist[i] ) ) {</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                }</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            }</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">if</span> ( i &lt; worklist.size() )</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                worklist.push_back(seg);</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                res.push_back(seg);</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        }</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    }</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a4fc135345793b514b770826a4f276267">  543</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a4fc135345793b514b770826a4f276267">layout_sections_without_segments</a>( )</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    {</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.size(); ++i ) {</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="classELFIO_1_1elfio.xhtml#addb0a18fc070853b97cc3a3a6b51391f">is_section_without_segment</a>( i ) ) {</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                <a class="code" href="classELFIO_1_1section.xhtml">section</a> *sec = <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>[i];</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> section_align = sec-&gt;get_addr_align();</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                <span class="keywordflow">if</span> ( section_align &gt; 1 &amp;&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> % section_align != 0 ) {</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                    <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> += section_align -</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                                            <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> % section_align;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                }</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                <span class="keywordflow">if</span> ( 0 != sec-&gt;get_index() )</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                  sec-&gt;set_offset(<a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a>);</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a> != sec-&gt;get_type() &amp;&amp;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                     <a class="code" href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a>   != sec-&gt;get_type() ) {</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                    <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> += sec-&gt;get_size();</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                }</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            }</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        }</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    }</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00570"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#afeb689c3a26b7c317e89f26a6390fce2">  570</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#afeb689c3a26b7c317e89f26a6390fce2">layout_segments_and_their_sections</a>( )</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    {</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        std::vector&lt;segment*&gt;  worklist;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        std::vector&lt;bool&gt;      section_generated(<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>(),<span class="keyword">false</span>);</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        std::vector&lt;Elf_Xword&gt; section_alignment(<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>(),0);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="comment">// Get segments in a order in where segments which contain a</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="comment">// sub sequence of other segments are located at the end</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;        worklist = <a class="code" href="classELFIO_1_1elfio.xhtml#a6ae5a2aeca80ad4ddac396673e3fa745">get_ordered_segments</a>();</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; worklist.size(); ++i ) {</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> segment_memory   = 0;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> segment_filesize = 0;</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> seg_start_pos    = <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a>;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg               = worklist[i];</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            <span class="comment">// Special case: PHDR segment</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            <span class="comment">// This segment contains the program headers but no sections</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keywordflow">if</span> ( seg-&gt;get_type() == <a class="code" href="elf__types_8hpp.xhtml#a58ff00be749ca4000074f9b9066a1056">PT_PHDR</a> &amp;&amp; seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a33d8e5585047fcf3383e54d53b40e777">get_sections_num</a>() == 0 ) {</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                seg_start_pos = <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segments_offset();</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                segment_memory = segment_filesize =</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                    <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segment_entry_size() * <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;get_segments_num();</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            }</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            <span class="comment">// Special case:</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            <span class="comment">// Segments which start with the NULL section and have further sections</span></div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a33d8e5585047fcf3383e54d53b40e777">get_sections_num</a>() &gt; 1</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                      &amp;&amp; <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a79bbf4effbd428b14bab843251390034">get_section_index_at</a>( 0 )]-&gt;get_type() == <a class="code" href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a> ) {</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                seg_start_pos = 0;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                <span class="keywordflow">if</span> ( seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a33d8e5585047fcf3383e54d53b40e777">get_sections_num</a>() ) {</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                    segment_memory = segment_filesize = <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a>;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                }</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            }</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            <span class="comment">// New segments with not generated sections</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            <span class="comment">// have to be aligned</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a33d8e5585047fcf3383e54d53b40e777">get_sections_num</a>()</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                     &amp;&amp; !section_generated[seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a79bbf4effbd428b14bab843251390034">get_section_index_at</a>( 0 )] ) {</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> cur_page_alignment = <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> % seg-&gt;get_align();</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> req_page_alignment = seg-&gt;get_virtual_address() % seg-&gt;get_align();</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> error              = req_page_alignment - cur_page_alignment;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> += ( seg-&gt;get_align() + error ) % seg-&gt;get_align();</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                seg_start_pos = <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a>;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            }</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a33d8e5585047fcf3383e54d53b40e777">get_sections_num</a>() ) {</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                seg_start_pos = <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a79bbf4effbd428b14bab843251390034">get_section_index_at</a>( 0 )]-&gt;get_offset();</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            }</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            <span class="comment">// Write segment&#39;s data</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j = 0; j &lt; seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a33d8e5585047fcf3383e54d53b40e777">get_sections_num</a>(); ++j ) {</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> index = seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a79bbf4effbd428b14bab843251390034">get_section_index_at</a>( j );</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[ index ];</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                <span class="comment">// The NULL section is always generated</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a> == sec-&gt;get_type()) {</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                    section_generated[index] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                }</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> secAlign = 0;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                <span class="comment">// Fix up the alignment</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                <span class="keywordflow">if</span> ( !section_generated[index] &amp;&amp; sec-&gt;<a class="code" href="classELFIO_1_1section.xhtml#ae1c5dda5638cb9baa60775ffc30bff66">is_address_initialized</a>()</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                    &amp;&amp; <a class="code" href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a> != sec-&gt;get_type()</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                    &amp;&amp; <a class="code" href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a> != sec-&gt;get_type() ) {</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                    <span class="comment">// Align the sections based on the virtual addresses</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                    <span class="comment">// when possible (this is what matters for execution)</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                    <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> req_offset = sec-&gt;get_address() - seg-&gt;get_virtual_address();</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                    <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> cur_offset = <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> - seg_start_pos;</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                    secAlign             = req_offset - cur_offset;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                }</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!section_generated[index]) {</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                    <span class="comment">// If no address has been specified then only the section</span></div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                    <span class="comment">// alignment constraint has to be matched</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                    <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> error = <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> % sec-&gt;get_addr_align();</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                    secAlign = ( sec-&gt;get_addr_align() - error ) % sec-&gt;get_addr_align();</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                }</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                    <span class="comment">// Alignment for already generated sections</span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                    secAlign = sec-&gt;get_offset() - seg_start_pos - segment_filesize;</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                }</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                <span class="comment">// Determine the segment file and memory sizes</span></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                <span class="comment">// Special case .tbss section (NOBITS) in non TLS segment</span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                <span class="keywordflow">if</span> ( (sec-&gt;get_flags() &amp; <a class="code" href="elf__types_8hpp.xhtml#a38476fe4ed88ac83ba86a4e103199a86">SHF_ALLOC</a>)</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                    &amp;&amp; !( (sec-&gt;get_flags() &amp; <a class="code" href="elf__types_8hpp.xhtml#a2484a824af96dca3fb77c4fb8898e83b">SHF_TLS</a>) &amp;&amp; (seg-&gt;get_type() != <a class="code" href="elf__types_8hpp.xhtml#a9754ced0bafacecea425b892fb796a57">PT_TLS</a>)</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                          &amp;&amp; ( <a class="code" href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a> == sec-&gt;get_type())) )</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                    segment_memory += sec-&gt;get_size() + secAlign;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a> != sec-&gt;get_type() &amp;&amp; <a class="code" href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a> != sec-&gt;get_type() )</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                    segment_filesize += sec-&gt;get_size() + secAlign;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                <span class="comment">// Nothing to be done when generating nested segments</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                <span class="keywordflow">if</span>(section_generated[index]) {</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                }</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> += secAlign;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                <span class="comment">// Set the section addresses when missing</span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                <span class="keywordflow">if</span> ( !sec-&gt;<a class="code" href="classELFIO_1_1section.xhtml#ae1c5dda5638cb9baa60775ffc30bff66">is_address_initialized</a>() )</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                    sec-&gt;set_address( seg-&gt;get_virtual_address()</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                                      + <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> - seg_start_pos);</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                <span class="keywordflow">if</span> ( 0 != sec-&gt;get_index() )</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                  sec-&gt;set_offset(<a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a>);</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a> != sec-&gt;get_type() &amp;&amp; <a class="code" href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a> != sec-&gt;get_type() )</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                  <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> += sec-&gt;get_size();</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                section_generated[index] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;            }</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            seg-&gt;set_file_size( segment_filesize );</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            seg-&gt;set_memory_size( segment_memory );</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;            seg-&gt;set_offset(seg_start_pos);</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        }</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    }</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00689"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a54622db6125c18f37291c063b2dacb4b">  689</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classELFIO_1_1elfio.xhtml#a54622db6125c18f37291c063b2dacb4b">layout_section_table</a>()</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    {</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="comment">// Simply place the section table at the end for now</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">Elf64_Off</a> alignmentError = <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> % 4;</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a> += ( 4 - alignmentError ) % 4;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>-&gt;set_sections_offset(<a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a>);</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    }</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00701"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a39ef36e26adae019dc4cfc004b6eda26">  701</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml">Sections</a>;</div>
<div class="line"><a name="l00702"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml">  702</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml">Sections</a> {</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;      <span class="keyword">public</span>:</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00705"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#a77095b63b7e9e56e40cfc94dad24c45e">  705</a></span>&#160;        <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a77095b63b7e9e56e40cfc94dad24c45e">Sections</a>( <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>* parent_ ) :</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>( parent_ )</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        {</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        }</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00711"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">  711</a></span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            <span class="keywordflow">return</span> (<a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>)<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.size();</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        }</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00717"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#a79aba75793609c2a85409478cb0fe1f8">  717</a></span>&#160;        <a class="code" href="classELFIO_1_1section.xhtml">section</a>* <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a79aba75793609c2a85409478cb0fe1f8">operator[]</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index )<span class="keyword"> const</span></div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = 0;</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;            </div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;            <span class="keywordflow">if</span> ( index &lt; parent-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.size() ) {</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                sec = <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>[index];</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;            }</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;            </div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;            <span class="keywordflow">return</span> sec;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        }</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00729"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#a441cba399775295f6cc876c779937ade">  729</a></span>&#160;        <a class="code" href="classELFIO_1_1section.xhtml">section</a>* <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a441cba399775295f6cc876c779937ade">operator[]</a>( <span class="keyword">const</span> std::string&amp; name )<span class="keyword"> const</span></div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = 0;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            std::vector&lt;section*&gt;::const_iterator it;</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            <span class="keywordflow">for</span> ( it = <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.begin();</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                  it != <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.end();</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                  ++it ) {</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                <span class="keywordflow">if</span> ( (*it)-&gt;get_name() == name ) {</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                    sec = *it;</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                }</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;            }</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <span class="keywordflow">return</span> sec;</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        }</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00747"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#af60206f1e95ae37985df476419ce875e">  747</a></span>&#160;        <a class="code" href="classELFIO_1_1section.xhtml">section</a>* <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#af60206f1e95ae37985df476419ce875e">add</a>( <span class="keyword">const</span> std::string&amp; name )</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        {</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* new_section = <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a6bb2c14190dc3ee9a220ec349c1640f5">create_section</a>();</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;            new_section-&gt;set_name( name );</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> str_index = <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;get_section_name_str_index();</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* string_table( <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>[str_index] );</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;            <a class="code" href="classELFIO_1_1string__section__accessor.xhtml">string_section_accessor</a> str_writer( string_table );</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;            <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> pos = str_writer.<a class="code" href="classELFIO_1_1string__section__accessor.xhtml#a328d5af973ac377b2597e40335dfc2c4">add_string</a>( name );</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;            new_section-&gt;set_name_string_offset( pos );</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;            <span class="keywordflow">return</span> new_section;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        }</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        </div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00762"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#ac64b4742bb8fb0eb2bc821ae2958ecec">  762</a></span>&#160;        std::vector&lt;section*&gt;::iterator <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#ac64b4742bb8fb0eb2bc821ae2958ecec">begin</a>() {</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.begin();</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        }</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00767"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#ab78a91bb0162c7cf27185a16ba508c53">  767</a></span>&#160;        std::vector&lt;section*&gt;::iterator <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#ab78a91bb0162c7cf27185a16ba508c53">end</a>() {</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>.end();</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        }</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;      <span class="keyword">private</span>:</div>
<div class="line"><a name="l00773"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">  773</a></span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>* <a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">parent</a>;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    } <a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>;</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00778"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a6e4622c282e0b9215b2afb73df9aa032">  778</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml">Segments</a>;</div>
<div class="line"><a name="l00779"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml">  779</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml">Segments</a> {</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;      <span class="keyword">public</span>:</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00782"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml#a299f1eec6a17d189fbc2fb21c3208097">  782</a></span>&#160;        <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a299f1eec6a17d189fbc2fb21c3208097">Segments</a>( <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>* parent_ ) :</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">parent</a>( parent_ )</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        {</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        }</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00788"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">  788</a></span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">size</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            <span class="keywordflow">return</span> (<a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>)<a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.size();</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        }</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00794"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml#a6365d4a063e12c2ecd5dc7d806c1d8cd">  794</a></span>&#160;        <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a6365d4a063e12c2ecd5dc7d806c1d8cd">operator[]</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index )<span class="keyword"> const</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>[index];</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        }</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00801"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml#aec4a8a50a611bf205091aefb28e042e4">  801</a></span>&#160;        <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#aec4a8a50a611bf205091aefb28e042e4">add</a>()</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        {</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a83917c15c0bc56bccfbacc8467fd4028">create_segment</a>();</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;        }</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00807"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml#a193dc7c894c720b0f3af9c1fd5e9ebed">  807</a></span>&#160;        std::vector&lt;segment*&gt;::iterator <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a193dc7c894c720b0f3af9c1fd5e9ebed">begin</a>() {</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.begin();</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        }</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00812"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml#a76937c3ec1bf18ca5b59e1f59f835e66">  812</a></span>&#160;        std::vector&lt;segment*&gt;::iterator <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a76937c3ec1bf18ca5b59e1f59f835e66">end</a>() {</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">parent</a>-&gt;<a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>.end();</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        }</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;      <span class="keyword">private</span>:</div>
<div class="line"><a name="l00818"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">  818</a></span>&#160;        <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>* <a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">parent</a>;</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    } <a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>;</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00823"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">  823</a></span>&#160;    <a class="code" href="classELFIO_1_1elf__header.xhtml">elf_header</a>*           <a class="code" href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">header</a>;</div>
<div class="line"><a name="l00824"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">  824</a></span>&#160;    std::vector&lt;section*&gt; <a class="code" href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">sections_</a>;</div>
<div class="line"><a name="l00825"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">  825</a></span>&#160;    std::vector&lt;segment*&gt; <a class="code" href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">segments_</a>;</div>
<div class="line"><a name="l00826"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">  826</a></span>&#160;    <a class="code" href="classELFIO_1_1endianess__convertor.xhtml">endianess_convertor</a>   <a class="code" href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">convertor</a>;</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div>
<div class="line"><a name="l00828"></a><span class="lineno"><a class="line" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">  828</a></span>&#160;    <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> <a class="code" href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">current_file_pos</a>;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;};</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;} <span class="comment">// namespace ELFIO</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__symbols_8hpp.xhtml">elfio/elfio_symbols.hpp</a>&gt;</span></div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__note_8hpp.xhtml">elfio/elfio_note.hpp</a>&gt;</span></div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__relocation_8hpp.xhtml">elfio/elfio_relocation.hpp</a>&gt;</span></div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio__dynamic_8hpp.xhtml">elfio/elfio_dynamic.hpp</a>&gt;</span></div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;<span class="preprocessor">#pragma warning ( pop )</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;<span class="preprocessor">#endif // ELFIO_HPP</span></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2aea2ed985f81f13a157fe2da02a621a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2aea2ed985f81f13a157fe2da02a621a">SHT_REL</a></div><div class="ttdeci">#define SHT_REL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00358">elf_types.hpp:358</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a4809badae60c172cad0ac9c14c4c8175"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a4809badae60c172cad0ac9c14c4c8175">ELFIO::elfio::save_header</a></div><div class="ttdeci">bool save_header(std::ofstream &amp;f)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00435">elfio.hpp:435</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a0c0eab65897234841184372f1a472166"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a0c0eab65897234841184372f1a472166">ELFIO::elfio::load_segments</a></div><div class="ttdeci">bool load_segments(std::istream &amp;stream)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00382">elfio.hpp:382</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_afeb689c3a26b7c317e89f26a6390fce2"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#afeb689c3a26b7c317e89f26a6390fce2">ELFIO::elfio::layout_segments_and_their_sections</a></div><div class="ttdeci">bool layout_segments_and_their_sections()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00570">elfio.hpp:570</a></div></div>
<div class="ttc" id="elfio__header_8hpp_xhtml"><div class="ttname"><a href="elfio__header_8hpp.xhtml">elfio_header.hpp</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a2baac7c01761d2d01b868c9f47b376f9"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a2baac7c01761d2d01b868c9f47b376f9">ELFIO::elfio::sections_</a></div><div class="ttdeci">std::vector&lt; section * &gt; sections_</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00824">elfio.hpp:824</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a4fc135345793b514b770826a4f276267"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a4fc135345793b514b770826a4f276267">ELFIO::elfio::layout_sections_without_segments</a></div><div class="ttdeci">bool layout_sections_without_segments()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00543">elfio.hpp:543</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a1b58bcf52b170af012e5b31c8725675a"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a1b58bcf52b170af012e5b31c8725675a">ELFIO::elfio::~elfio</a></div><div class="ttdeci">~elfio()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00081">elfio.hpp:81</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_a6365d4a063e12c2ecd5dc7d806c1d8cd"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#a6365d4a063e12c2ecd5dc7d806c1d8cd">ELFIO::elfio::Segments::operator[]</a></div><div class="ttdeci">segment * operator[](unsigned int index) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00794">elfio.hpp:794</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_a79aba75793609c2a85409478cb0fe1f8"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#a79aba75793609c2a85409478cb0fe1f8">ELFIO::elfio::Sections::operator[]</a></div><div class="ttdeci">section * operator[](unsigned int index) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00717">elfio.hpp:717</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a465f3d0018c582c1a159a7ec6d0e4475"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a465f3d0018c582c1a159a7ec6d0e4475">ELFIO::elfio::get_default_entry_size</a></div><div class="ttdeci">Elf_Xword get_default_entry_size(Elf_Word section_type) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00212">elfio.hpp:212</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml_ab9dad348857c6f427ae53fddda0df4cd"><div class="ttname"><a href="classELFIO_1_1segment.xhtml#ab9dad348857c6f427ae53fddda0df4cd">ELFIO::segment::add_section_index</a></div><div class="ttdeci">virtual Elf_Half add_section_index(Elf_Half index, Elf_Xword addr_align)=0</div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2ae7ae1a6df04e0ed6be07b94590686e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2ae7ae1a6df04e0ed6be07b94590686e">ELFMAG0</a></div><div class="ttdeci">#define ELFMAG0</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00298">elf_types.hpp:298</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab2f25695673c5f1c4ec723e595288411"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab2f25695673c5f1c4ec723e595288411">SHN_UNDEF</a></div><div class="ttdeci">#define SHN_UNDEF</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00337">elf_types.hpp:337</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_ad0fe06bd63d957a8fa08a227dc0dd9e3"><div class="ttname"><a href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">ELFIO::Elf_Xword</a></div><div class="ttdeci">uint64_t Elf_Xword</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00054">elf_types.hpp:54</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf64__Rela_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf64__Rela.xhtml">ELFIO::Elf64_Rela</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00677">elf_types.hpp:677</a></div></div>
<div class="ttc" id="classELFIO_1_1elf__header_xhtml_a4ddc14a74b4d2e919ba300f88ea90af6"><div class="ttname"><a href="classELFIO_1_1elf__header.xhtml#a4ddc14a74b4d2e919ba300f88ea90af6">ELFIO::elf_header::save</a></div><div class="ttdeci">virtual bool save(std::ostream &amp;stream) const =0</div></div>
<div class="ttc" id="elfio__strings_8hpp_xhtml"><div class="ttname"><a href="elfio__strings_8hpp.xhtml">elfio_strings.hpp</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a6bb2c14190dc3ee9a220ec349c1640f5"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a6bb2c14190dc3ee9a220ec349c1640f5">ELFIO::elfio::create_section</a></div><div class="ttdeci">section * create_section()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00290">elfio.hpp:290</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml_a79bbf4effbd428b14bab843251390034"><div class="ttname"><a href="classELFIO_1_1segment.xhtml#a79bbf4effbd428b14bab843251390034">ELFIO::segment::get_section_index_at</a></div><div class="ttdeci">virtual Elf_Half get_section_index_at(Elf_Half num) const =0</div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a50a52bf4075a0c0a1373a4ecea939437"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a50a52bf4075a0c0a1373a4ecea939437">ELFIO::elfio::is_subsequence_of</a></div><div class="ttdeci">bool is_subsequence_of(segment *seg1, segment *seg2)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00486">elfio.hpp:486</a></div></div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml_a67d470a1b50e356dba4666781872a090"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml#a67d470a1b50e356dba4666781872a090">ELFIO::endianess_convertor::setup</a></div><div class="ttdeci">void setup(unsigned char elf_file_encoding)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00071">elfio_utils.hpp:71</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a42b43a75f031a91f4110df41177e234d"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a42b43a75f031a91f4110df41177e234d">ELFIO::elfio::segments_</a></div><div class="ttdeci">std::vector&lt; segment * &gt; segments_</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00825">elfio.hpp:825</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_a2d18fcfdfc18a31be45ffe5e94b3a55b"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#a2d18fcfdfc18a31be45ffe5e94b3a55b">ELFIO::elfio::Sections::parent</a></div><div class="ttdeci">elfio * parent</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00773">elfio.hpp:773</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml">ELFIO::elfio::Sections</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00702">elfio.hpp:702</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf32__Rela_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf32__Rela.xhtml">ELFIO::Elf32_Rela</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00666">elf_types.hpp:666</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_a77095b63b7e9e56e40cfc94dad24c45e"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#a77095b63b7e9e56e40cfc94dad24c45e">ELFIO::elfio::Sections::Sections</a></div><div class="ttdeci">Sections(elfio *parent_)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00705">elfio.hpp:705</a></div></div>
<div class="ttc" id="classELFIO_1_1string__section__accessor_xhtml_abf7ba3e0d2d1e200f13ec4b4bdff96d1"><div class="ttname"><a href="classELFIO_1_1string__section__accessor.xhtml#abf7ba3e0d2d1e200f13ec4b4bdff96d1">ELFIO::string_section_accessor::get_string</a></div><div class="ttdeci">const char * get_string(Elf_Word index) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__strings_8hpp_source.xhtml#l00045">elfio_strings.hpp:45</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9754ced0bafacecea425b892fb796a57"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9754ced0bafacecea425b892fb796a57">PT_TLS</a></div><div class="ttdeci">#define PT_TLS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00483">elf_types.hpp:483</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a45ae995bbe7d5e483aeac5ff87919fe5"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a45ae995bbe7d5e483aeac5ff87919fe5">ELFIO::elfio::ELFIO_HEADER_ACCESS_GET</a></div><div class="ttdeci">ELFIO_HEADER_ACCESS_GET(unsigned char, class)</div></div>
<div class="ttc" id="classELFIO_1_1section_xhtml_a957d8a474005ba0177fae12a8b019d8a"><div class="ttname"><a href="classELFIO_1_1section.xhtml#a957d8a474005ba0177fae12a8b019d8a">ELFIO::section::save</a></div><div class="ttdeci">virtual void save(std::ostream &amp;f, std::streampos header_offset, std::streampos data_offset)=0</div></div>
<div class="ttc" id="classELFIO_1_1section_xhtml"><div class="ttname"><a href="classELFIO_1_1section.xhtml">ELFIO::section</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__section_8hpp_source.xhtml#l00031">elfio_section.hpp:31</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a02a2dcf9659572a104c874c854f1ab3d"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a02a2dcf9659572a104c874c854f1ab3d">ELFIO::elfio::save_sections</a></div><div class="ttdeci">bool save_sections(std::ofstream &amp;f)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00441">elfio.hpp:441</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_ad98b3ec59f72efa652135e760df9cdb3"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#ad98b3ec59f72efa652135e760df9cdb3">ELFIO::elfio::current_file_pos</a></div><div class="ttdeci">Elf_Xword current_file_pos</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00828">elfio.hpp:828</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a38476fe4ed88ac83ba86a4e103199a86"><div class="ttname"><a href="elf__types_8hpp.xhtml#a38476fe4ed88ac83ba86a4e103199a86">SHF_ALLOC</a></div><div class="ttdeci">#define SHF_ALLOC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00375">elf_types.hpp:375</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_ae4681b3161b1cfa4ed545eb8181887b3"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#ae4681b3161b1cfa4ed545eb8181887b3">ELFIO::elfio::save_segments</a></div><div class="ttdeci">bool save_segments(std::ofstream &amp;f)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00456">elfio.hpp:456</a></div></div>
<div class="ttc" id="elfio__section_8hpp_xhtml"><div class="ttname"><a href="elfio__section_8hpp.xhtml">elfio_section.hpp</a></div></div>
<div class="ttc" id="classELFIO_1_1elf__header_xhtml_ab4d46f817a381c214901d83e20e8f105"><div class="ttname"><a href="classELFIO_1_1elf__header.xhtml#ab4d46f817a381c214901d83e20e8f105">ELFIO::elf_header::load</a></div><div class="ttdeci">virtual bool load(std::istream &amp;stream)=0</div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_ac3304298a71603a89af5676c6bbce9de"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">ELFIO::elfio::sections</a></div><div class="ttdeci">class ELFIO::elfio::Sections sections</div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml">ELFIO::elfio</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00070">elfio.hpp:70</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_ae462b15020a575fd0adc005338324a8c"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#ae462b15020a575fd0adc005338324a8c">ELFIO::elfio::clean</a></div><div class="ttdeci">void clean()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00251">elfio.hpp:251</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_a5c66bdb3ab662752c4968d8cd1a1a490"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">ELFIO::elfio::Sections::size</a></div><div class="ttdeci">Elf_Half size() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00711">elfio.hpp:711</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af4b916dc4ca5016fb5c374068002a532"><div class="ttname"><a href="elf__types_8hpp.xhtml#af4b916dc4ca5016fb5c374068002a532">SHT_STRTAB</a></div><div class="ttdeci">#define SHT_STRTAB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00352">elf_types.hpp:352</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a402231bc0fcfaade53ac1a00d03b1beb"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a402231bc0fcfaade53ac1a00d03b1beb">ELFIO::elfio::ELFIO_HEADER_ACCESS_GET_SET</a></div><div class="ttdeci">ELFIO_HEADER_ACCESS_GET_SET(unsigned char, os_abi)</div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abf2fc2781a2869352c2ffa0555f34118"><div class="ttname"><a href="elf__types_8hpp.xhtml#abf2fc2781a2869352c2ffa0555f34118">SHT_RELA</a></div><div class="ttdeci">#define SHT_RELA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00353">elf_types.hpp:353</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf64__Sym_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf64__Sym.xhtml">ELFIO::Elf64_Sym</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00643">elf_types.hpp:643</a></div></div>
<div class="ttc" id="classELFIO_1_1endianess__convertor_xhtml"><div class="ttname"><a href="classELFIO_1_1endianess__convertor.xhtml">ELFIO::endianess_convertor</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__utils_8hpp_source.xhtml#l00061">elfio_utils.hpp:61</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_ab78a91bb0162c7cf27185a16ba508c53"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#ab78a91bb0162c7cf27185a16ba508c53">ELFIO::elfio::Sections::end</a></div><div class="ttdeci">std::vector&lt; section * &gt;::iterator end()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00767">elfio.hpp:767</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a905e7d6672f7109423309f05c941cf80"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a905e7d6672f7109423309f05c941cf80">ELFIO::elfio::create_mandatory_sections</a></div><div class="ttdeci">void create_mandatory_sections()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00335">elfio.hpp:335</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf32__Sym_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf32__Sym.xhtml">ELFIO::Elf32_Sym</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00634">elf_types.hpp:634</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml">ELFIO::elfio::Segments</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00779">elfio.hpp:779</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a6ae5a2aeca80ad4ddac396673e3fa745"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a6ae5a2aeca80ad4ddac396673e3fa745">ELFIO::elfio::get_ordered_segments</a></div><div class="ttdeci">std::vector&lt; segment * &gt; get_ordered_segments()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00502">elfio.hpp:502</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2484a824af96dca3fb77c4fb8898e83b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2484a824af96dca3fb77c4fb8898e83b">SHF_TLS</a></div><div class="ttdeci">#define SHF_TLS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00383">elf_types.hpp:383</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a58ff00be749ca4000074f9b9066a1056"><div class="ttname"><a href="elf__types_8hpp.xhtml#a58ff00be749ca4000074f9b9066a1056">PT_PHDR</a></div><div class="ttdeci">#define PT_PHDR</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00482">elf_types.hpp:482</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3a9278d12cf2c9e7eaca87688d0a6e37"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3a9278d12cf2c9e7eaca87688d0a6e37">SHT_DYNAMIC</a></div><div class="ttdeci">#define SHT_DYNAMIC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00355">elf_types.hpp:355</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml"><div class="ttname"><a href="elf__types_8hpp.xhtml">elf_types.hpp</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ace03d4c5e8952e27b8505581432c3b84"><div class="ttname"><a href="elf__types_8hpp.xhtml#ace03d4c5e8952e27b8505581432c3b84">EI_MAG3</a></div><div class="ttdeci">#define EI_MAG3</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00288">elf_types.hpp:288</a></div></div>
<div class="ttc" id="classELFIO_1_1segment__impl_xhtml"><div class="ttname"><a href="classELFIO_1_1segment__impl.xhtml">ELFIO::segment_impl</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__segment_8hpp_source.xhtml#l00067">elfio_segment.hpp:67</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a79c714b4bf89638ff576e163d7d2144f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a79c714b4bf89638ff576e163d7d2144f">EI_DATA</a></div><div class="ttdeci">#define EI_DATA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00290">elf_types.hpp:290</a></div></div>
<div class="ttc" id="classELFIO_1_1section_xhtml_a6b85f1b2b75aca23446772c146052e54"><div class="ttname"><a href="classELFIO_1_1section.xhtml#a6b85f1b2b75aca23446772c146052e54">ELFIO::section::load</a></div><div class="ttdeci">virtual void load(std::istream &amp;f, std::streampos header_offset)=0</div></div>
<div class="ttc" id="namespaceELFIO_xhtml_a7dfc604e0cf71b4a1f80a46af67d57fc"><div class="ttname"><a href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">ELFIO::Elf_Word</a></div><div class="ttdeci">uint32_t Elf_Word</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00052">elf_types.hpp:52</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_af60206f1e95ae37985df476419ce875e"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#af60206f1e95ae37985df476419ce875e">ELFIO::elfio::Sections::add</a></div><div class="ttdeci">section * add(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00747">elfio.hpp:747</a></div></div>
<div class="ttc" id="classELFIO_1_1string__section__accessor_xhtml_a328d5af973ac377b2597e40335dfc2c4"><div class="ttname"><a href="classELFIO_1_1string__section__accessor.xhtml#a328d5af973ac377b2597e40335dfc2c4">ELFIO::string_section_accessor::add_string</a></div><div class="ttdeci">Elf_Word add_string(const char *str)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__strings_8hpp_source.xhtml#l00060">elfio_strings.hpp:60</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_a76937c3ec1bf18ca5b59e1f59f835e66"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#a76937c3ec1bf18ca5b59e1f59f835e66">ELFIO::elfio::Segments::end</a></div><div class="ttdeci">std::vector&lt; segment * &gt;::iterator end()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00812">elfio.hpp:812</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a6237b3c20ffd799df7b9a91ab3bbdff4"><div class="ttname"><a href="elf__types_8hpp.xhtml#a6237b3c20ffd799df7b9a91ab3bbdff4">ELFMAG1</a></div><div class="ttdeci">#define ELFMAG1</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00299">elf_types.hpp:299</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml"><div class="ttname"><a href="classELFIO_1_1segment.xhtml">ELFIO::segment</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__segment_8hpp_source.xhtml#l00031">elfio_segment.hpp:31</a></div></div>
<div class="ttc" id="classELFIO_1_1elf__header__impl_xhtml"><div class="ttname"><a href="classELFIO_1_1elf__header__impl.xhtml">ELFIO::elf_header_impl</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__header_8hpp_source.xhtml#l00072">elfio_header.hpp:72</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_a441cba399775295f6cc876c779937ade"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#a441cba399775295f6cc876c779937ade">ELFIO::elfio::Sections::operator[]</a></div><div class="ttdeci">section * operator[](const std::string &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00729">elfio.hpp:729</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1566f4c14cff9f4b539b00af54d62dbb"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a></div><div class="ttdeci">#define SHT_NULL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00349">elf_types.hpp:349</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_af313dfceaf57ca8342e1cebba19a986e"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#af313dfceaf57ca8342e1cebba19a986e">ELFIO::elfio::load</a></div><div class="ttdeci">bool load(const std::string &amp;file_name)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00096">elfio.hpp:96</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml_a411eb1987c97609b98878c95b44c3f78"><div class="ttname"><a href="classELFIO_1_1segment.xhtml#a411eb1987c97609b98878c95b44c3f78">ELFIO::segment::save</a></div><div class="ttdeci">virtual void save(std::ostream &amp;f, std::streampos header_offset, std::streampos data_offset)=0</div></div>
<div class="ttc" id="classELFIO_1_1section_xhtml_ae1c5dda5638cb9baa60775ffc30bff66"><div class="ttname"><a href="classELFIO_1_1section.xhtml#ae1c5dda5638cb9baa60775ffc30bff66">ELFIO::section::is_address_initialized</a></div><div class="ttdeci">virtual bool is_address_initialized() const =0</div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_ab5d99cd44a973c1adabdba1c1e7c086b"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#ab5d99cd44a973c1adabdba1c1e7c086b">ELFIO::elfio::elfio</a></div><div class="ttdeci">elfio()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00074">elfio.hpp:74</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a1eb421b95b3deb91f7e4c28cbf094614"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a1eb421b95b3deb91f7e4c28cbf094614">ELFIO::elfio::load</a></div><div class="ttdeci">bool load(std::istream &amp;stream)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00108">elfio.hpp:108</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae407130db14180c6737390604ba7c1fe"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae407130db14180c6737390604ba7c1fe">EI_NIDENT</a></div><div class="ttdeci">#define EI_NIDENT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00295">elf_types.hpp:295</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5f84b1bf6e07374d6289eab3d8c57f1c"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a></div><div class="ttdeci">#define ELFCLASS32</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00305">elf_types.hpp:305</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml_a33d8e5585047fcf3383e54d53b40e777"><div class="ttname"><a href="classELFIO_1_1segment.xhtml#a33d8e5585047fcf3383e54d53b40e777">ELFIO::segment::get_sections_num</a></div><div class="ttdeci">virtual Elf_Half get_sections_num() const =0</div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af66303c799da18c8aec282ea8592e7e7"><div class="ttname"><a href="elf__types_8hpp.xhtml#af66303c799da18c8aec282ea8592e7e7">ELFDATA2LSB</a></div><div class="ttdeci">#define ELFDATA2LSB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00310">elf_types.hpp:310</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2cae3878d982911632b418680718d53b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2cae3878d982911632b418680718d53b">EI_MAG1</a></div><div class="ttdeci">#define EI_MAG1</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00286">elf_types.hpp:286</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2884a339ef7aefee59d160ed3fbb1739"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2884a339ef7aefee59d160ed3fbb1739">EI_MAG2</a></div><div class="ttdeci">#define EI_MAG2</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00287">elf_types.hpp:287</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a820ff00317949be2ea1fd634a17dc13e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a></div><div class="ttdeci">#define SHT_NOBITS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00357">elf_types.hpp:357</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_addb0a18fc070853b97cc3a3a6b51391f"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#addb0a18fc070853b97cc3a3a6b51391f">ELFIO::elfio::is_section_without_segment</a></div><div class="ttdeci">bool is_section_without_segment(unsigned int section_index)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00470">elfio.hpp:470</a></div></div>
<div class="ttc" id="classELFIO_1_1elf__header_xhtml"><div class="ttname"><a href="classELFIO_1_1elf__header.xhtml">ELFIO::elf_header</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__header_8hpp_source.xhtml#l00030">elfio_header.hpp:30</a></div></div>
<div class="ttc" id="elfio__segment_8hpp_xhtml"><div class="ttname"><a href="elfio__segment_8hpp.xhtml">elfio_segment.hpp</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2beeae5974769f72da5f63dcbcc325fe"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2beeae5974769f72da5f63dcbcc325fe">ELFMAG3</a></div><div class="ttdeci">#define ELFMAG3</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00301">elf_types.hpp:301</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf32__Rel_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf32__Rel.xhtml">ELFIO::Elf32_Rel</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00661">elf_types.hpp:661</a></div></div>
<div class="ttc" id="classELFIO_1_1section__impl_xhtml"><div class="ttname"><a href="classELFIO_1_1section__impl.xhtml">ELFIO::section_impl</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__section_8hpp_source.xhtml#l00069">elfio_section.hpp:69</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_a193dc7c894c720b0f3af9c1fd5e9ebed"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#a193dc7c894c720b0f3af9c1fd5e9ebed">ELFIO::elfio::Segments::begin</a></div><div class="ttdeci">std::vector&lt; segment * &gt;::iterator begin()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00807">elfio.hpp:807</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a83917c15c0bc56bccfbacc8467fd4028"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a83917c15c0bc56bccfbacc8467fd4028">ELFIO::elfio::create_segment</a></div><div class="ttdeci">segment * create_segment()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00313">elfio.hpp:313</a></div></div>
<div class="ttc" id="elfio__note_8hpp_xhtml"><div class="ttname"><a href="elfio__note_8hpp.xhtml">elfio_note.hpp</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a54622db6125c18f37291c063b2dacb4b"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a54622db6125c18f37291c063b2dacb4b">ELFIO::elfio::layout_section_table</a></div><div class="ttdeci">bool layout_section_table()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00689">elfio.hpp:689</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_a94bc3afee1f0a5b991df72346ebba4ef"><div class="ttname"><a href="namespaceELFIO.xhtml#a94bc3afee1f0a5b991df72346ebba4ef">ELFIO::Elf64_Off</a></div><div class="ttdeci">uint64_t Elf64_Off</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00060">elf_types.hpp:60</a></div></div>
<div class="ttc" id="elfio__dynamic_8hpp_xhtml"><div class="ttname"><a href="elfio__dynamic_8hpp.xhtml">elfio_dynamic.hpp</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf32__Dyn_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf32__Dyn.xhtml">ELFIO::Elf32_Dyn</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00693">elf_types.hpp:693</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a38fb57bbcfaec1219a0a59061f85a98b"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a38fb57bbcfaec1219a0a59061f85a98b">ELFIO::elfio::load_sections</a></div><div class="ttdeci">Elf_Half load_sections(std::istream &amp;stream)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00350">elfio.hpp:350</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml_a2f538b21d28871c278c0bcdb3991d07d"><div class="ttname"><a href="classELFIO_1_1segment.xhtml#a2f538b21d28871c278c0bcdb3991d07d">ELFIO::segment::load</a></div><div class="ttdeci">virtual void load(std::istream &amp;stream, std::streampos header_offset)=0</div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml_ab488583facc3d0f4f79911457c6e073f"><div class="ttname"><a href="classELFIO_1_1segment.xhtml#ab488583facc3d0f4f79911457c6e073f">ELFIO::segment::get_sections</a></div><div class="ttdeci">virtual const std::vector&lt; Elf_Half &gt; &amp; get_sections() const =0</div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a67a760cc86b7595b483e93da603ec774"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a67a760cc86b7595b483e93da603ec774">ELFIO::elfio::create_header</a></div><div class="ttdeci">elf_header * create_header(unsigned char file_class, unsigned char encoding)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00270">elfio.hpp:270</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_a299f1eec6a17d189fbc2fb21c3208097"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#a299f1eec6a17d189fbc2fb21c3208097">ELFIO::elfio::Segments::Segments</a></div><div class="ttdeci">Segments(elfio *parent_)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00782">elfio.hpp:782</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5b508cacf6662e4bc0e98ffe1eb61636"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5b508cacf6662e4bc0e98ffe1eb61636">EI_CLASS</a></div><div class="ttdeci">#define EI_CLASS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00289">elf_types.hpp:289</a></div></div>
<div class="ttc" id="elfio__utils_8hpp_xhtml"><div class="ttname"><a href="elfio__utils_8hpp.xhtml">elfio_utils.hpp</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_a18257fed02ff029ccca28e70b7eabfa6"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">ELFIO::elfio::Segments::size</a></div><div class="ttdeci">Elf_Half size() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00788">elfio.hpp:788</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_a1cbef4f0d8fabbb57ce3507f3ee06e1a"><div class="ttname"><a href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">ELFIO::Elf_Half</a></div><div class="ttdeci">uint16_t Elf_Half</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00051">elf_types.hpp:51</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9ee66b59be5c78ea1f1eea8a36f2c291"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a></div><div class="ttdeci">#define ELFCLASS64</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00306">elf_types.hpp:306</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf64__Dyn_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf64__Dyn.xhtml">ELFIO::Elf64_Dyn</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00701">elf_types.hpp:701</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_a10b98acc49bab16ded42171fb3431f83"><div class="ttname"><a href="namespaceELFIO.xhtml#a10b98acc49bab16ded42171fb3431f83">ELFIO::Elf64_Addr</a></div><div class="ttdeci">uint64_t Elf64_Addr</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00059">elf_types.hpp:59</a></div></div>
<div class="ttc" id="classELFIO_1_1string__section__accessor_xhtml"><div class="ttname"><a href="classELFIO_1_1string__section__accessor.xhtml">ELFIO::string_section_accessor</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__strings_8hpp_source.xhtml#l00033">elfio_strings.hpp:33</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_acf8b907708e708153b95008eaa89c7be"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">ELFIO::elfio::segments</a></div><div class="ttdeci">class ELFIO::elfio::Segments segments</div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a7e2b5815268a3ac822fe683cafced30b"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a7e2b5815268a3ac822fe683cafced30b">ELFIO::elfio::header</a></div><div class="ttdeci">elf_header * header</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00823">elfio.hpp:823</a></div></div>
<div class="ttc" id="elfio__relocation_8hpp_xhtml"><div class="ttname"><a href="elfio__relocation_8hpp.xhtml">elfio_relocation.hpp</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8ac1b98d78e30ca49e1d3f287939a18f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8ac1b98d78e30ca49e1d3f287939a18f">ELFMAG2</a></div><div class="ttdeci">#define ELFMAG2</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00300">elf_types.hpp:300</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a4dfd167b10c72779390871865d16db61"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a4dfd167b10c72779390871865d16db61">ELFIO::elfio::save</a></div><div class="ttdeci">bool save(const std::string &amp;file_name)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00149">elfio.hpp:149</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_ac64b4742bb8fb0eb2bc821ae2958ecec"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#ac64b4742bb8fb0eb2bc821ae2958ecec">ELFIO::elfio::Sections::begin</a></div><div class="ttdeci">std::vector&lt; section * &gt;::iterator begin()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00762">elfio.hpp:762</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_a77ec60b63698065979c24cf9ff601cc5"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#a77ec60b63698065979c24cf9ff601cc5">ELFIO::elfio::Segments::parent</a></div><div class="ttdeci">elfio * parent</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00818">elfio.hpp:818</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a94816dad4699ebedb4e6ac502dd395dc"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a94816dad4699ebedb4e6ac502dd395dc">ELFIO::elfio::convertor</a></div><div class="ttdeci">endianess_convertor convertor</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00826">elfio.hpp:826</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_a505f88e23277cb7945d4f411fe2b4d85"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#a505f88e23277cb7945d4f411fe2b4d85">ELFIO::elfio::create</a></div><div class="ttdeci">void create(unsigned char file_class, unsigned char encoding)</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00087">elfio.hpp:87</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_af8a6706052d3029c76e5332eba10ad77"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#af8a6706052d3029c76e5332eba10ad77">ELFIO::elfio::get_convertor</a></div><div class="ttdeci">const endianess_convertor &amp; get_convertor() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00206">elfio.hpp:206</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4add7784e43ec3d3b9c09d3ffc476a81"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4add7784e43ec3d3b9c09d3ffc476a81">SHT_SYMTAB</a></div><div class="ttdeci">#define SHT_SYMTAB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00351">elf_types.hpp:351</a></div></div>
<div class="ttc" id="elfio__symbols_8hpp_xhtml"><div class="ttname"><a href="elfio__symbols_8hpp.xhtml">elfio_symbols.hpp</a></div></div>
<div class="ttc" id="structELFIO_1_1Elf64__Rel_xhtml"><div class="ttname"><a href="structELFIO_1_1Elf64__Rel.xhtml">ELFIO::Elf64_Rel</a></div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00672">elf_types.hpp:672</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aba717f40a418b0d99c2efd4cdab4f54f"><div class="ttname"><a href="elf__types_8hpp.xhtml#aba717f40a418b0d99c2efd4cdab4f54f">EI_MAG0</a></div><div class="ttdeci">#define EI_MAG0</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00285">elf_types.hpp:285</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_aec4a8a50a611bf205091aefb28e042e4"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#aec4a8a50a611bf205091aefb28e042e4">ELFIO::elfio::Segments::add</a></div><div class="ttdeci">segment * add()</div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00801">elfio.hpp:801</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:56 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
