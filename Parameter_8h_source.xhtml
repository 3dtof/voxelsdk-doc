<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: Parameter.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_e7f07c35b19a6de9638fcd101b463d91.xhtml">Voxel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Parameter.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Parameter_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#ifndef VOXEL_PARAMETER_H</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define VOXEL_PARAMETER_H</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Common_8h.xhtml">Common.h</a>&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="RegisterProgrammer_8h.xhtml">RegisterProgrammer.h</a>&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Logger_8h.xhtml">Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span>Voxel</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">class </span>ParameterDMLParser;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml">   30</a></span>&#160;<span class="keyword">class </span>VOXEL_EXPORT <a class="code" href="classVoxel_1_1Parameter.xhtml">Parameter</a></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">   33</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">IOType</a></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  {</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da35b42c0a9497587608f019b9e6ac7f23">   35</a></span>&#160;    IO_READ_ONLY = 0,</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">   36</a></span>&#160;    <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">IO_READ_WRITE</a>,</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da429b1713e02fc3733bfcea37a2e63a45">   37</a></span>&#160;    IO_WRITE_ONLY</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  };</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#ae34be7d7cbf5e837f74044fd37b79a78">   41</a></span>&#160;  uint32_t _address, <a class="code" href="classVoxel_1_1Parameter.xhtml#ae34be7d7cbf5e837f74044fd37b79a78">_mask</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a76d9c8395b6018b334cf51baa26fb1ad">   42</a></span>&#160;  uint8_t _msb, _lsb, <a class="code" href="classVoxel_1_1Parameter.xhtml#a76d9c8395b6018b334cf51baa26fb1ad">_registerLength</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="comment">// This is to do @_address &lt;- (@_address &amp; _mask) | (_value &lt;&lt; _lsb)</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#aee41d7722cac127743ff43b56c7e8b22">   45</a></span>&#160;  <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">IOType</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#aee41d7722cac127743ff43b56c7e8b22">_ioType</a>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a3804d2450b4615e8fbb9792dda6d8072">   47</a></span>&#160;  <a class="code" href="classString.xhtml">String</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#a3804d2450b4615e8fbb9792dda6d8072">_name</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a82ed94476ec947d87de4603f40cec7f6">   48</a></span>&#160;  <a class="code" href="classString.xhtml">String</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#a82ed94476ec947d87de4603f40cec7f6">_displayName</a>;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a70bdc82abbf7abf669a65f7b3d20f99f">   49</a></span>&#160;  <a class="code" href="classString.xhtml">String</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#a70bdc82abbf7abf669a65f7b3d20f99f">_description</a>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a2c43346c59d132dd41d626a745622a5c">   51</a></span>&#160;  <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#a2c43346c59d132dd41d626a745622a5c">_dependencies</a>; <span class="comment">// Parameter values on which this parameter depends on</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a3202f3871489be5ba3b163dc45fbf19e">   53</a></span>&#160;  <a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a3202f3871489be5ba3b163dc45fbf19e">_programmer</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">void</span> _computeMask();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a2b058e79428b6bc41206bb14ec47046d">   58</a></span>&#160;  <a class="code" href="classVoxel_1_1Parameter.xhtml#a2b058e79428b6bc41206bb14ec47046d">Parameter</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;name, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;displayName, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">IOType</a> ioType = IO_READ_WRITE, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {})</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  : _programmer(programmer), _name(name), _displayName(displayName), _description(description), </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  _address(address), _msb(msb), _registerLength(registerLength), _lsb(lsb), _ioType(ioType), _dependencies(dependencies)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    _computeMask();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  </div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a3f6208a8c1dc348b97565e6242d30e5c">   66</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a3f6208a8c1dc348b97565e6242d30e5c">name</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _name; }</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a538b09602878a76de88c61de89ec259c">   67</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a538b09602878a76de88c61de89ec259c">displayName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _displayName; }</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a4f87156818839e2df24d228ada9e1894">   68</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a4f87156818839e2df24d228ada9e1894">description</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _description; }</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">   69</a></span>&#160;  <span class="keyword">inline</span> uint32_t <a class="code" href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">address</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _address; }</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a05b064fa12fe914cd762f4cdf4331950">   70</a></span>&#160;  <span class="keyword">inline</span> uint8_t <a class="code" href="classVoxel_1_1Parameter.xhtml#a05b064fa12fe914cd762f4cdf4331950">msb</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _msb; }</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">   71</a></span>&#160;  <span class="keyword">inline</span> uint32_t <a class="code" href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">mask</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _mask; }</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">   72</a></span>&#160;  <span class="keyword">inline</span> uint8_t <a class="code" href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">lsb</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _lsb; }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a1e80e7d0c74d8f847d0fce8a95c9b436">   74</a></span>&#160;  <span class="keyword">inline</span> <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">IOType</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#a1e80e7d0c74d8f847d0fce8a95c9b436">ioType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _ioType; }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a7f47148d4f45961a928e50aefd1cb48a">   76</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classVoxel_1_1Parameter.xhtml#a7f47148d4f45961a928e50aefd1cb48a">setName</a>(<span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;n) { _name = n; }</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#aaeb1febb4732ed1d7f8ed2845dd732a5">   77</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classVoxel_1_1Parameter.xhtml#aaeb1febb4732ed1d7f8ed2845dd732a5">setAddress</a>(uint32_t a) { _address = a; }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> refresh() = 0;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  </div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a8f3e51c27dc6f4edd2a9e6d49cfa0f6b">   81</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1Parameter.xhtml#a8f3e51c27dc6f4edd2a9e6d49cfa0f6b">~Parameter</a>() {}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classVoxel_1_1Parameter.xhtml#a878c1bce57eebebdf80b6fadd903c4ea">   83</a></span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classVoxel_1_1ParameterDMLParser.xhtml">ParameterDMLParser</a>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;};</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="group__Param.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">   86</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;Parameter&gt;</a> <a class="code" href="group__Param.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">ParameterPtr</a>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">// NOTE: _value is initialized to defaultValue and not read from H/W. It needs to be manually done from outside via set() or get(true)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml">   90</a></span>&#160;<span class="keyword">class </span><a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate</a>: <span class="keyword">public</span> <a class="code" href="classVoxel_1_1Parameter.xhtml">Parameter</a></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">   93</a></span>&#160;  T <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">_value</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#a03b6835b248723b4810523dfa676a4a1">   95</a></span>&#160;  <span class="keyword">virtual</span> uint32_t <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a03b6835b248723b4810523dfa676a4a1">_toRawValue</a>(T value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> (uint32_t)value;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#a0ec9ac3ae46283b37050b4f5122bb80f">  100</a></span>&#160;  <span class="keyword">virtual</span> T <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a0ec9ac3ae46283b37050b4f5122bb80f">_fromRawValue</a>(uint32_t value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> (T)(value);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#ae832c0ddbb75c214a235e09f8f659d74">  106</a></span>&#160;  <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#ae832c0ddbb75c214a235e09f8f659d74">ParameterTemplate</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a3f6208a8c1dc348b97565e6242d30e5c">name</a>,  uint32_t <a class="code" href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">address</a>, uint8_t registerLength, uint8_t <a class="code" href="classVoxel_1_1Parameter.xhtml#a05b064fa12fe914cd762f4cdf4331950">msb</a>, uint8_t <a class="code" href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">lsb</a>, </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    <span class="keyword">const</span> T &amp;defaultValue,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a538b09602878a76de88c61de89ec259c">displayName</a>, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a4f87156818839e2df24d228ada9e1894">description</a>, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#a1e80e7d0c74d8f847d0fce8a95c9b436">ioType</a> = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <a class="code" href="classVoxel_1_1Parameter.xhtml#a2b058e79428b6bc41206bb14ec47046d">Parameter</a>(programmer, name, address, registerLength, msb, lsb, displayName, description, <a class="code" href="classVoxel_1_1Parameter.xhtml#a1e80e7d0c74d8f847d0fce8a95c9b436">ioType</a>, dependencies), <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">_value</a>(defaultValue)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#aaee43eebe0dc5b3ef5e0791d24f2906d">  113</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;ParameterTemplate&lt;T&gt;</a>&gt; <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#aaee43eebe0dc5b3ef5e0791d24f2906d">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;T&gt;</a>&gt;(other);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  </div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#a64240b607339f55c4fac973fba8c8934">  118</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a64240b607339f55c4fac973fba8c8934">set</a>(<span class="keyword">const</span> T &amp;value)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1Parameter.xhtml#aee41d7722cac127743ff43b56c7e8b22">_ioType</a> == <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da35b42c0a9497587608f019b9e6ac7f23">IO_READ_ONLY</a> || !<a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#ad0faca7bb67f20c02c54bab49aa83007">validate</a>(value))</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1Parameter.xhtml#a3202f3871489be5ba3b163dc45fbf19e">_programmer</a>.<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml#acc5201215bd1fd5c3721b4babc5e0f6a">setValue</a>(*<span class="keyword">this</span>, <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a03b6835b248723b4810523dfa676a4a1">_toRawValue</a>(value), <a class="code" href="classVoxel_1_1Parameter.xhtml#aee41d7722cac127743ff43b56c7e8b22">_ioType</a> == <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da429b1713e02fc3733bfcea37a2e63a45">IO_WRITE_ONLY</a>)) </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    { </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">_value</a> = value;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;       </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    } </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">else</span> </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#ad0faca7bb67f20c02c54bab49aa83007">validate</a>(<span class="keyword">const</span> T &amp;value) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  </div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#a3f4472338de2a9fc48cddf389b85fb1b">  136</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a3f4472338de2a9fc48cddf389b85fb1b">refresh</a>()</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    T v;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">get</span>(v, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">  142</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">get</span>(T &amp;value, <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a3f4472338de2a9fc48cddf389b85fb1b">refresh</a> = <span class="keyword">false</span>)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a3f4472338de2a9fc48cddf389b85fb1b">refresh</a> || <a class="code" href="classVoxel_1_1Parameter.xhtml#aee41d7722cac127743ff43b56c7e8b22">_ioType</a> == <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da429b1713e02fc3733bfcea37a2e63a45">IO_WRITE_ONLY</a>)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      value = <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">_value</a>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    uint32_t v;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    T val;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1Parameter.xhtml#a3202f3871489be5ba3b163dc45fbf19e">_programmer</a>.<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml#a84db6834c3cc10bd752a4efe39bbdef2">getValue</a>(*<span class="keyword">this</span>, v))</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      value = <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">_value</a>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      val = <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a0ec9ac3ae46283b37050b4f5122bb80f">_fromRawValue</a>(v);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#ad0faca7bb67f20c02c54bab49aa83007">validate</a>(val))</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        value = val;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">_value</a> = val;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        value = <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">_value</a>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  </div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classVoxel_1_1ParameterTemplate.xhtml#a0d439340b04cc433f5dda3ccc1643974">  174</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#a0d439340b04cc433f5dda3ccc1643974">~ParameterTemplate</a>() {}</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;};</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="group__Param.xhtml#gaf977e6dec4ed2ec827fb557c2d5d4536">  177</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;bool&gt;</a> <a class="code" href="group__Param.xhtml#gaf977e6dec4ed2ec827fb557c2d5d4536">BoolParameterTemplate</a>;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="group__Param.xhtml#gaef222fd30997f44997c55ab0e92cca92">  178</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;int&gt;</a> <a class="code" href="group__Param.xhtml#gaef222fd30997f44997c55ab0e92cca92">IntegerParameterTemplate</a>;</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="group__Param.xhtml#gac43b8b43e53e240856041db47ab123eb">  179</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;uint&gt;</a> <a class="code" href="group__Param.xhtml#gac43b8b43e53e240856041db47ab123eb">UnsignedIntegerParameterTemplate</a>;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="group__Param.xhtml#ga5dab476d4c953294d6716bfeaa79e3e9">  180</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;float&gt;</a> <a class="code" href="group__Param.xhtml#ga5dab476d4c953294d6716bfeaa79e3e9">FloatParameterTemplate</a>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">#ifdef SWIG</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor"></span>%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#gaf977e6dec4ed2ec827fb557c2d5d4536">BoolParameterTemplate</a>) <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;bool&gt;</a>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#gaef222fd30997f44997c55ab0e92cca92">IntegerParameterTemplate</a>) <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;int&gt;</a>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#gac43b8b43e53e240856041db47ab123eb">UnsignedIntegerParameterTemplate</a>) <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;uint&gt;</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#ga5dab476d4c953294d6716bfeaa79e3e9">FloatParameterTemplate</a>) <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;float&gt;</a>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml">  190</a></span>&#160;<span class="keyword">class </span><a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate</a>: <span class="keyword">public</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;T&gt;</a></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml#ab505f732b678c58e005fe1e36aa07f22">  193</a></span>&#160;  <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml#ab505f732b678c58e005fe1e36aa07f22">_valueMeaning</a>;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml#a0386319748c8ee0e635d6dac91a0855f">  194</a></span>&#160;  <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml#a0386319748c8ee0e635d6dac91a0855f">_valueDescription</a>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml#ab83793d1a540a59769be0ea7226b23d2">  197</a></span>&#160;  <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml#ab83793d1a540a59769be0ea7226b23d2">EnumParameterTemplate</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;name,  uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;valueDescription, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;valueMeaning, <span class="keyword">const</span> T &amp;defaultValue,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;displayName, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> ioType = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;T&gt;</a>(programmer, name, address, registerLength, msb, lsb, defaultValue, displayName, description, ioType, dependencies), _valueDescription(valueDescription), _valueMeaning(valueMeaning)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  </div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml#ac0d2f13c241f5160c4a593a5296bc386">  204</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;EnumParameterTemplate&lt;T&gt;</a>&gt; <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml#ac0d2f13c241f5160c4a593a5296bc386">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;T&gt;</a>&gt;(other);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  </div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">  209</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;<a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">valueDescription</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _valueDescription; }</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">  210</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;<a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _valueMeaning; }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  </div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameterTemplate.xhtml#a23017ca5be80c3677d022334e7261fe4">  212</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml#a23017ca5be80c3677d022334e7261fe4">~EnumParameterTemplate</a>() {}</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;};</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="group__Param.xhtml#gaa2a07db15b7f33ba99d2607bd9e51789">  215</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;bool&gt;</a> <a class="code" href="group__Param.xhtml#gaa2a07db15b7f33ba99d2607bd9e51789">BoolEnumParameterTemplate</a>;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="group__Param.xhtml#gaf3c14516cb9c371ab169265e2cf8add8">  216</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;int&gt;</a> <a class="code" href="group__Param.xhtml#gaf3c14516cb9c371ab169265e2cf8add8">IntegerEnumParameterTemplate</a>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor">#ifdef SWIG</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor"></span>%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#gaa2a07db15b7f33ba99d2607bd9e51789">BoolEnumParameterTemplate</a>) <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;bool&gt;</a>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#gaf3c14516cb9c371ab169265e2cf8add8">IntegerEnumParameterTemplate</a>) <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;int&gt;</a>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classVoxel_1_1BoolParameter.xhtml">  224</a></span>&#160;<span class="keyword">class </span>VOXEL_EXPORT <a class="code" href="classVoxel_1_1BoolParameter.xhtml">BoolParameter</a> : <span class="keyword">public</span> <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;bool&gt;</a></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classVoxel_1_1BoolParameter.xhtml#a4d61d02368296cd1609ad070a4645fbc">  226</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1BoolParameter.xhtml#a4d61d02368296cd1609ad070a4645fbc">_fromRawValue</a>(uint32_t value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">return</span> (value?<span class="keyword">true</span>:<span class="keyword">false</span>);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="classVoxel_1_1BoolParameter.xhtml#a4980934e7db1e2f3eca3ef7e1c6f1e8b">  231</a></span>&#160;  <span class="keyword">virtual</span> uint32_t <a class="code" href="classVoxel_1_1BoolParameter.xhtml#a4980934e7db1e2f3eca3ef7e1c6f1e8b">_toRawValue</a>(<span class="keywordtype">bool</span> value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">return</span> (uint32_t)value?1:0;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classVoxel_1_1BoolParameter.xhtml#affd56c8676ea635c3bf19a8ff2632b30">  236</a></span>&#160;  <a class="code" href="classVoxel_1_1BoolParameter.xhtml#affd56c8676ea635c3bf19a8ff2632b30">BoolParameter</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;name,  uint32_t address, uint8_t registerLength, uint8_t lsb, </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;valueDescription, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;valueMeaning, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;defaultValue,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;displayName, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> ioType = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;bool&gt;</a>(programmer, name, address, registerLength, lsb, lsb, valueDescription, valueMeaning, defaultValue, displayName, description, ioType, dependencies)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  </div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classVoxel_1_1BoolParameter.xhtml#ad7a6f8526e8b80b19288594c8006ec34">  243</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;BoolParameter&gt;</a> <a class="code" href="classVoxel_1_1BoolParameter.xhtml#ad7a6f8526e8b80b19288594c8006ec34">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1BoolParameter.xhtml">BoolParameter</a>&gt;(other);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  </div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classVoxel_1_1BoolParameter.xhtml#ac17d81ecb5188028caa262fc5c5e6026">  248</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1BoolParameter.xhtml#ac17d81ecb5188028caa262fc5c5e6026">validate</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  </div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="classVoxel_1_1BoolParameter.xhtml#a3d7c121b4f586894ba97e5a7638e1dd8">  253</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1BoolParameter.xhtml#a3d7c121b4f586894ba97e5a7638e1dd8">~BoolParameter</a>() {}</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;};</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="classVoxel_1_1StrobeBoolParameter.xhtml">  256</a></span>&#160;<span class="keyword">class </span>VOXEL_EXPORT <a class="code" href="classVoxel_1_1StrobeBoolParameter.xhtml">StrobeBoolParameter</a> : <span class="keyword">public</span> <a class="code" href="classVoxel_1_1BoolParameter.xhtml">BoolParameter</a></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;{</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="classVoxel_1_1StrobeBoolParameter.xhtml#a76c8bc283d4a83d9681a7395f13d3d06">  259</a></span>&#160;  <a class="code" href="classVoxel_1_1StrobeBoolParameter.xhtml#a76c8bc283d4a83d9681a7395f13d3d06">StrobeBoolParameter</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;name,  uint32_t address, uint8_t registerLength, uint8_t lsb, </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;valueDescription, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;valueMeaning, <span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;defaultValue,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;displayName, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> ioType = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <a class="code" href="classVoxel_1_1BoolParameter.xhtml">BoolParameter</a>(programmer, name, address, registerLength, lsb, valueDescription, valueMeaning, defaultValue, displayName, description, ioType, dependencies)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  </div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="classVoxel_1_1StrobeBoolParameter.xhtml#abf6a189c322e27c741e312aed549d28d">  266</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;StrobeBoolParameter&gt;</a> <a class="code" href="classVoxel_1_1StrobeBoolParameter.xhtml#abf6a189c322e27c741e312aed549d28d">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1StrobeBoolParameter.xhtml">StrobeBoolParameter</a>&gt;(other);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  </div>
<div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classVoxel_1_1StrobeBoolParameter.xhtml#aac48c08e6aa19fdfd4e4661e3f56992e">  271</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">get</span>(<span class="keywordtype">bool</span> &amp;value, <span class="keywordtype">bool</span> refresh = <span class="keyword">true</span>)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">BoolParameter::get</a>(value, <span class="keyword">true</span>); <span class="comment">// ignore the refresh set by user and force it to true</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  </div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classVoxel_1_1StrobeBoolParameter.xhtml#a7e10a2622f934c51efa9ee12c4938662">  276</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1StrobeBoolParameter.xhtml#a7e10a2622f934c51efa9ee12c4938662">~StrobeBoolParameter</a>() {}</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;};</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameter.xhtml">  279</a></span>&#160;<span class="keyword">class </span>VOXEL_EXPORT <a class="code" href="classVoxel_1_1EnumParameter.xhtml">EnumParameter</a> : <span class="keyword">public</span> <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate</a>&lt;int&gt;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;{</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameter.xhtml#a174caf1f707ed78aaefb3cdc9d6e9c00">  282</a></span>&#160;  <a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;int&gt;</a> <a class="code" href="classVoxel_1_1EnumParameter.xhtml#a174caf1f707ed78aaefb3cdc9d6e9c00">_allowedValues</a>;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameter.xhtml#a138ac8bebdada39f28422369ae1fa87f">  285</a></span>&#160;  <a class="code" href="classVoxel_1_1EnumParameter.xhtml#a138ac8bebdada39f28422369ae1fa87f">EnumParameter</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;name, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="keyword">const</span> <a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;int&gt;</a> &amp;allowedValues, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> valueDescription, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;valueMeaning, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;defaultValue,</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;displayName, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> ioType = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <a class="code" href="classVoxel_1_1EnumParameterTemplate.xhtml">EnumParameterTemplate&lt;int&gt;</a>(programmer, name, address, registerLength, msb, lsb, valueDescription, valueMeaning, defaultValue, displayName, description, ioType, dependencies), </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  _allowedValues(allowedValues)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  </div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameter.xhtml#a2fda290e62348259f6a672fd6197ea28">  293</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;EnumParameter&gt;</a> <a class="code" href="classVoxel_1_1EnumParameter.xhtml#a2fda290e62348259f6a672fd6197ea28">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1EnumParameter.xhtml">EnumParameter</a>&gt;(other);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  </div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameter.xhtml#ab74f397082b4134fe8e3338a72f91639">  298</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;int&gt;</a> &amp;<a class="code" href="classVoxel_1_1EnumParameter.xhtml#ab74f397082b4134fe8e3338a72f91639">allowedValues</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _allowedValues; }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  </div>
<div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameter.xhtml#a9bfb9b7ecf142b73aeccfc67fede6e52">  300</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1EnumParameter.xhtml#a9bfb9b7ecf142b73aeccfc67fede6e52">validate</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordtype">bool</span> allowed = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> a : _allowedValues)</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      <span class="keywordflow">if</span>(value == a)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        allowed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      <span class="keywordflow">return</span> allowed;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  </div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="classVoxel_1_1EnumParameter.xhtml#a0e187ab2b0d3b906d57772e5a863971d">  313</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1EnumParameter.xhtml#a0e187ab2b0d3b906d57772e5a863971d">~EnumParameter</a>() {}</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;};</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml">  319</a></span>&#160;<span class="keyword">class </span><a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate</a> : <span class="keyword">public</span> <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate</a>&lt;T&gt;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;{</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5c5352d81d2b03b4b43519e6058a2e54">  322</a></span>&#160;  T <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a585ef1540cbc8b61e3f228d4e4085eab">_lowerLimit</a>, <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5c5352d81d2b03b4b43519e6058a2e54">_upperLimit</a>;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  </div>
<div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a7da20a629250ba2db87974d4799be33c">  324</a></span>&#160;  <a class="code" href="classString.xhtml">String</a> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a7da20a629250ba2db87974d4799be33c">_unit</a>;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#af8da1dc2c7a5dde91d75db89abce47ad">  327</a></span>&#160;  <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#af8da1dc2c7a5dde91d75db89abce47ad">RangeParameterTemplate</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a3f6208a8c1dc348b97565e6242d30e5c">name</a>, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>, uint32_t <a class="code" href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">address</a>, uint8_t registerLength, uint8_t <a class="code" href="classVoxel_1_1Parameter.xhtml#a05b064fa12fe914cd762f4cdf4331950">msb</a>, uint8_t <a class="code" href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">lsb</a>, </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                   <span class="keyword">const</span> T &amp;<a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5748dd5aee4616996abbecd8b603af2c">lowerLimit</a>, <span class="keyword">const</span> T &amp;<a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">upperLimit</a>, <span class="keyword">const</span> T &amp;defaultValue,</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a538b09602878a76de88c61de89ec259c">displayName</a>, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1Parameter.xhtml#a4f87156818839e2df24d228ada9e1894">description</a>, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> <a class="code" href="classVoxel_1_1Parameter.xhtml#a1e80e7d0c74d8f847d0fce8a95c9b436">ioType</a> = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <a class="code" href="classVoxel_1_1ParameterTemplate.xhtml">ParameterTemplate&lt;T&gt;</a>(programmer, name, address, registerLength, msb, lsb, defaultValue, displayName, description, <a class="code" href="classVoxel_1_1Parameter.xhtml#a1e80e7d0c74d8f847d0fce8a95c9b436">ioType</a>, dependencies), </div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a585ef1540cbc8b61e3f228d4e4085eab">_lowerLimit</a>(lowerLimit), <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5c5352d81d2b03b4b43519e6058a2e54">_upperLimit</a>(upperLimit), <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a7da20a629250ba2db87974d4799be33c">_unit</a>(unit)</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;  </div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a8210df3041659c2dfa417faba51e5371">  335</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;RangeParameterTemplate&lt;T&gt;</a>&gt; <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a8210df3041659c2dfa417faba51e5371">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;T&gt;</a>&gt;(other);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  </div>
<div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a37ac5f7905a5849207fde317192ae7ce">  340</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;<a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a7da20a629250ba2db87974d4799be33c">_unit</a>; }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  </div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5748dd5aee4616996abbecd8b603af2c">  342</a></span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> T <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5748dd5aee4616996abbecd8b603af2c">lowerLimit</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a585ef1540cbc8b61e3f228d4e4085eab">_lowerLimit</a>; }</div>
<div class="line"><a name="l00343"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">  343</a></span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> T <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">upperLimit</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5c5352d81d2b03b4b43519e6058a2e54">_upperLimit</a>; }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  </div>
<div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a1c45c34e90fef3116410bf1a5ed1afcf">  345</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a1c45c34e90fef3116410bf1a5ed1afcf">setLowerLimit</a>(T lowerLimit) { <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a585ef1540cbc8b61e3f228d4e4085eab">_lowerLimit</a> = <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5748dd5aee4616996abbecd8b603af2c">lowerLimit</a>; }</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#aacb3e43640e0f7169018c539e18f7df7">  346</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#aacb3e43640e0f7169018c539e18f7df7">setUpperLimit</a>(T upperLimit) { <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5c5352d81d2b03b4b43519e6058a2e54">_upperLimit</a> = <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">upperLimit</a>; }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  </div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a1fa782d7135e9d20267cb18fe98cbfd5">  348</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a1fa782d7135e9d20267cb18fe98cbfd5">validate</a>(<span class="keyword">const</span> T &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">return</span> !(value &lt; _lowerLimit || value &gt; <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a5c5352d81d2b03b4b43519e6058a2e54">_upperLimit</a>); </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  }</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  </div>
<div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="classVoxel_1_1RangeParameterTemplate.xhtml#a4ba9c3ad58f9e796f08ef74aa55b8a15">  353</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml#a4ba9c3ad58f9e796f08ef74aa55b8a15">~RangeParameterTemplate</a>() {}</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;};</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="group__Param.xhtml#gaebf430dc89e71805b1e0e08542307819">  356</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;int&gt;</a> <a class="code" href="group__Param.xhtml#gaebf430dc89e71805b1e0e08542307819">IntegerRangeParameterTemplate</a>;</div>
<div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="group__Param.xhtml#ga8e1aba90255ccf959901678783418c23">  357</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;float&gt;</a> <a class="code" href="group__Param.xhtml#ga8e1aba90255ccf959901678783418c23">FloatRangeParameterTemplate</a>;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="preprocessor">#ifdef SWIG</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="preprocessor"></span>%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#gaebf430dc89e71805b1e0e08542307819">IntegerRangeParameterTemplate</a>) <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;int&gt;</a>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#ga5103a73da85f19b45e71e94b0af2c79a">UnsignedIntegerParameter</a>) <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;uint&gt;</a>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;%<span class="keyword">template</span>(<a class="code" href="group__Param.xhtml#ga8e1aba90255ccf959901678783418c23">FloatRangeParameterTemplate</a>) <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;float&gt;</a>;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="classVoxel_1_1IntegerParameter.xhtml">  366</a></span>&#160;<span class="keyword">class </span>VOXEL_EXPORT <a class="code" href="classVoxel_1_1IntegerParameter.xhtml">IntegerParameter</a> : <span class="keyword">public</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;int&gt;</a></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;{</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="classVoxel_1_1IntegerParameter.xhtml#a6dde944601794acd3ad62cfb21a4901b">  369</a></span>&#160;  <span class="keyword">virtual</span> uint32_t <a class="code" href="classVoxel_1_1IntegerParameter.xhtml#a6dde944601794acd3ad62cfb21a4901b">_toRawValue</a>(<span class="keywordtype">int</span> value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">if</span>(value &lt; 0) <span class="comment">// negative?</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      <span class="keywordflow">return</span> ((uint32_t)value &amp; ((1 &lt;&lt; (_msb - _lsb + 1)) - 1)); <span class="comment">// remove sign extension</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;      <span class="keywordflow">return</span> (uint32_t)value;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  </div>
<div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="classVoxel_1_1IntegerParameter.xhtml#aad6b120abb91c32e14dd0a688cd81360">  379</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classVoxel_1_1IntegerParameter.xhtml#aad6b120abb91c32e14dd0a688cd81360">_fromRawValue</a>(uint32_t value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordflow">if</span>(value &amp; (1 &lt;&lt; (_msb - _lsb))) <span class="comment">// negative?</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      <span class="keywordflow">return</span> (value | ((uint32_t)(-1) - ((1 &lt;&lt; (_msb - _lsb + 1)) - 1))); <span class="comment">// extend sign</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      <span class="keywordflow">return</span> (<span class="keywordtype">int</span>)value;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  }</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;  </div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="classVoxel_1_1IntegerParameter.xhtml#a701bc66964d7bdb74e5391e13c925215">  388</a></span>&#160;  <a class="code" href="classVoxel_1_1IntegerParameter.xhtml#a701bc66964d7bdb74e5391e13c925215">IntegerParameter</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;name, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;unit, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, </div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                 <span class="keywordtype">int</span> lowerLimit, <span class="keywordtype">int</span> upperLimit, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;defaultValue,</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                 <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;displayName, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> ioType = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;int&gt;</a>(programmer, name, unit, address, registerLength, msb, lsb, lowerLimit, upperLimit, defaultValue, displayName, description, ioType, dependencies)</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  {</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  </div>
<div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="classVoxel_1_1IntegerParameter.xhtml#a9f362cbcdde6cddd17c4e373ca8bad71">  395</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;IntegerParameter&gt;</a> <a class="code" href="classVoxel_1_1IntegerParameter.xhtml#a9f362cbcdde6cddd17c4e373ca8bad71">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1IntegerParameter.xhtml">IntegerParameter</a>&gt;(other);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  </div>
<div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="classVoxel_1_1IntegerParameter.xhtml#a089eecff42b422d678e5e6e35437e742">  400</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1IntegerParameter.xhtml#a089eecff42b422d678e5e6e35437e742">~IntegerParameter</a>() {}</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;};</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div>
<div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="group__Param.xhtml#ga5103a73da85f19b45e71e94b0af2c79a">  403</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;uint&gt;</a> <a class="code" href="group__Param.xhtml#ga5103a73da85f19b45e71e94b0af2c79a">UnsignedIntegerParameter</a>;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="classVoxel_1_1FloatParameter.xhtml">  405</a></span>&#160;<span class="keyword">class </span>VOXEL_EXPORT <a class="code" href="classVoxel_1_1FloatParameter.xhtml">FloatParameter</a> : <span class="keyword">public</span> <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate</a>&lt;float&gt;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;{</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00408"></a><span class="lineno"><a class="line" href="classVoxel_1_1FloatParameter.xhtml#a1df196a6b14b085c03975d622a37ead7">  408</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">float</span> <a class="code" href="classVoxel_1_1FloatParameter.xhtml#a1df196a6b14b085c03975d622a37ead7">_fromRawValue</a>(uint32_t value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keywordtype">float</span> v;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    v = (<a class="code" href="classfloat.xhtml">float</a>)value/(1 &lt;&lt; (msb() - lsb() + 1)); <span class="comment">// normalized value</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    </div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">if</span>(v &gt; 1.0f) v = 1.0f;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keywordflow">if</span>(v &lt; 0.0f) v = 0.0f;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  </div>
<div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="classVoxel_1_1FloatParameter.xhtml#a307de335ada5ce3424ed2aaf594c3210">  418</a></span>&#160;  <span class="keyword">virtual</span> uint32_t <a class="code" href="classVoxel_1_1FloatParameter.xhtml#a307de335ada5ce3424ed2aaf594c3210">_toRawValue</a>(<span class="keywordtype">float</span> value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    uint32_t maxValue = (1 &lt;&lt; (msb() - lsb() + 1));</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    uint32_t v = (uint32_t)value*maxValue; <span class="comment">// normalized value</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    </div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordflow">if</span>(v &gt; maxValue) v = maxValue;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keywordflow">if</span>(v &lt; 0) v = 0;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  }</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00430"></a><span class="lineno"><a class="line" href="classVoxel_1_1FloatParameter.xhtml#a80eeb646d451185909ee11626331dd55">  430</a></span>&#160;  <a class="code" href="classVoxel_1_1FloatParameter.xhtml#a80eeb646d451185909ee11626331dd55">FloatParameter</a>(<a class="code" href="classVoxel_1_1RegisterProgrammer.xhtml">RegisterProgrammer</a> &amp;programmer, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;name, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;unit, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, </div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                         <span class="keywordtype">float</span> lowerLimit, <span class="keywordtype">float</span> upperLimit, <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;defaultValue,</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                 <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;displayName, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description, <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Parameter::IOType</a> ioType = <a class="code" href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Parameter::IO_READ_WRITE</a>, <span class="keyword">const</span> <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> &amp;dependencies = {}):</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  <a class="code" href="classVoxel_1_1RangeParameterTemplate.xhtml">RangeParameterTemplate&lt;float&gt;</a>(programmer, name, unit, address, registerLength, msb, lsb, lowerLimit, upperLimit, defaultValue, displayName, description, ioType, dependencies)</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  {</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  </div>
<div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="classVoxel_1_1FloatParameter.xhtml#a1d8434d73e43b23d091b2d292b71deed">  437</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">Ptr&lt;FloatParameter&gt;</a> <a class="code" href="classVoxel_1_1FloatParameter.xhtml#a1d8434d73e43b23d091b2d292b71deed">typeCast</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1Ptr.xhtml">ParameterPtr</a> &amp;other)</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  {</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordflow">return</span> std::dynamic_pointer_cast&lt;<a class="code" href="classVoxel_1_1FloatParameter.xhtml">FloatParameter</a>&gt;(other);</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  }</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  </div>
<div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="classVoxel_1_1FloatParameter.xhtml#a6f66b4a93f0f8f18dd2bbe204a8b88a1">  442</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classVoxel_1_1FloatParameter.xhtml#a6f66b4a93f0f8f18dd2bbe204a8b88a1">~FloatParameter</a>() {}</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;};</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;}</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="preprocessor">#endif // PARAMETER_H</span></div>
<div class="ttc" id="classVoxel_1_1IntegerParameter_xhtml_a701bc66964d7bdb74e5391e13c925215"><div class="ttname"><a href="classVoxel_1_1IntegerParameter.xhtml#a701bc66964d7bdb74e5391e13c925215">Voxel::IntegerParameter::IntegerParameter</a></div><div class="ttdeci">IntegerParameter(RegisterProgrammer &amp;programmer, const String &amp;name, const String &amp;unit, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, int lowerLimit, int upperLimit, const int &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00388">Parameter.h:388</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a4f87156818839e2df24d228ada9e1894"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a4f87156818839e2df24d228ada9e1894">Voxel::Parameter::description</a></div><div class="ttdeci">const String &amp; description() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00068">Parameter.h:68</a></div></div>
<div class="ttc" id="classVoxel_1_1IntegerParameter_xhtml_aad6b120abb91c32e14dd0a688cd81360"><div class="ttname"><a href="classVoxel_1_1IntegerParameter.xhtml#aad6b120abb91c32e14dd0a688cd81360">Voxel::IntegerParameter::_fromRawValue</a></div><div class="ttdeci">virtual int _fromRawValue(uint32_t value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00379">Parameter.h:379</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml">Voxel::RangeParameterTemplate</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00319">Parameter.h:319</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a76d9c8395b6018b334cf51baa26fb1ad"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a76d9c8395b6018b334cf51baa26fb1ad">Voxel::Parameter::_registerLength</a></div><div class="ttdeci">uint8_t _registerLength</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00042">Parameter.h:42</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml_ab83793d1a540a59769be0ea7226b23d2"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml#ab83793d1a540a59769be0ea7226b23d2">Voxel::EnumParameterTemplate::EnumParameterTemplate</a></div><div class="ttdeci">EnumParameterTemplate(RegisterProgrammer &amp;programmer, const String &amp;name, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, const Vector&lt; String &gt; &amp;valueDescription, const Vector&lt; String &gt; &amp;valueMeaning, const T &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00197">Parameter.h:197</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a2887f02c0a7415dc05b9b063a21389ff"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a2887f02c0a7415dc05b9b063a21389ff">Voxel::Parameter::lsb</a></div><div class="ttdeci">uint8_t lsb() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00072">Parameter.h:72</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_aee41d7722cac127743ff43b56c7e8b22"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#aee41d7722cac127743ff43b56c7e8b22">Voxel::Parameter::_ioType</a></div><div class="ttdeci">IOType _ioType</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00045">Parameter.h:45</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a5c5352d81d2b03b4b43519e6058a2e54"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a5c5352d81d2b03b4b43519e6058a2e54">Voxel::RangeParameterTemplate::_upperLimit</a></div><div class="ttdeci">T _upperLimit</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00322">Parameter.h:322</a></div></div>
<div class="ttc" id="classVoxel_1_1FloatParameter_xhtml_a1d8434d73e43b23d091b2d292b71deed"><div class="ttname"><a href="classVoxel_1_1FloatParameter.xhtml#a1d8434d73e43b23d091b2d292b71deed">Voxel::FloatParameter::typeCast</a></div><div class="ttdeci">static Ptr&lt; FloatParameter &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00437">Parameter.h:437</a></div></div>
<div class="ttc" id="classVoxel_1_1FloatParameter_xhtml_a1df196a6b14b085c03975d622a37ead7"><div class="ttname"><a href="classVoxel_1_1FloatParameter.xhtml#a1df196a6b14b085c03975d622a37ead7">Voxel::FloatParameter::_fromRawValue</a></div><div class="ttdeci">virtual float _fromRawValue(uint32_t value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00408">Parameter.h:408</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a05b064fa12fe914cd762f4cdf4331950"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a05b064fa12fe914cd762f4cdf4331950">Voxel::Parameter::msb</a></div><div class="ttdeci">uint8_t msb() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00070">Parameter.h:70</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameter_xhtml_a0e187ab2b0d3b906d57772e5a863971d"><div class="ttname"><a href="classVoxel_1_1EnumParameter.xhtml#a0e187ab2b0d3b906d57772e5a863971d">Voxel::EnumParameter::~EnumParameter</a></div><div class="ttdeci">virtual ~EnumParameter()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00313">Parameter.h:313</a></div></div>
<div class="ttc" id="classVoxel_1_1BoolParameter_xhtml_a4980934e7db1e2f3eca3ef7e1c6f1e8b"><div class="ttname"><a href="classVoxel_1_1BoolParameter.xhtml#a4980934e7db1e2f3eca3ef7e1c6f1e8b">Voxel::BoolParameter::_toRawValue</a></div><div class="ttdeci">virtual uint32_t _toRawValue(bool value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00231">Parameter.h:231</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a70bdc82abbf7abf669a65f7b3d20f99f"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a70bdc82abbf7abf669a65f7b3d20f99f">Voxel::Parameter::_description</a></div><div class="ttdeci">String _description</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00049">Parameter.h:49</a></div></div>
<div class="ttc" id="classVoxel_1_1BoolParameter_xhtml_a3d7c121b4f586894ba97e5a7638e1dd8"><div class="ttname"><a href="classVoxel_1_1BoolParameter.xhtml#a3d7c121b4f586894ba97e5a7638e1dd8">Voxel::BoolParameter::~BoolParameter</a></div><div class="ttdeci">virtual ~BoolParameter()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00253">Parameter.h:253</a></div></div>
<div class="ttc" id="group__Param_xhtml_gaebf430dc89e71805b1e0e08542307819"><div class="ttname"><a href="group__Param.xhtml#gaebf430dc89e71805b1e0e08542307819">Voxel::IntegerRangeParameterTemplate</a></div><div class="ttdeci">RangeParameterTemplate&lt; int &gt; IntegerRangeParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00356">Parameter.h:356</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml">Voxel::Parameter</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00030">Parameter.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_aae7b0d1bc8163235367a0d780ea7aa4da35b42c0a9497587608f019b9e6ac7f23"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da35b42c0a9497587608f019b9e6ac7f23">Voxel::Parameter::IO_READ_ONLY</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00035">Parameter.h:35</a></div></div>
<div class="ttc" id="classVoxel_1_1BoolParameter_xhtml_affd56c8676ea635c3bf19a8ff2632b30"><div class="ttname"><a href="classVoxel_1_1BoolParameter.xhtml#affd56c8676ea635c3bf19a8ff2632b30">Voxel::BoolParameter::BoolParameter</a></div><div class="ttdeci">BoolParameter(RegisterProgrammer &amp;programmer, const String &amp;name, uint32_t address, uint8_t registerLength, uint8_t lsb, const Vector&lt; String &gt; &amp;valueDescription, const Vector&lt; String &gt; &amp;valueMeaning, const bool &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00236">Parameter.h:236</a></div></div>
<div class="ttc" id="group__Param_xhtml_ga43826f19575cabc6b78bf62c0c1acd31"><div class="ttname"><a href="group__Param.xhtml#ga43826f19575cabc6b78bf62c0c1acd31">Voxel::ParameterPtr</a></div><div class="ttdeci">Ptr&lt; Parameter &gt; ParameterPtr</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00086">Parameter.h:86</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a1fa782d7135e9d20267cb18fe98cbfd5"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a1fa782d7135e9d20267cb18fe98cbfd5">Voxel::RangeParameterTemplate::validate</a></div><div class="ttdeci">virtual bool validate(const T &amp;value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00348">Parameter.h:348</a></div></div>
<div class="ttc" id="classVoxel_1_1StrobeBoolParameter_xhtml_a7e10a2622f934c51efa9ee12c4938662"><div class="ttname"><a href="classVoxel_1_1StrobeBoolParameter.xhtml#a7e10a2622f934c51efa9ee12c4938662">Voxel::StrobeBoolParameter::~StrobeBoolParameter</a></div><div class="ttdeci">virtual ~StrobeBoolParameter()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00276">Parameter.h:276</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_afa8896eaffbd2b87d1482c0967a0fe1d"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">Voxel::ParameterTemplate&lt; bool &gt;::get</a></div><div class="ttdeci">virtual bool get(bool &amp;value, bool refresh=false)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00142">Parameter.h:142</a></div></div>
<div class="ttc" id="classVoxel_1_1IntegerParameter_xhtml_a6dde944601794acd3ad62cfb21a4901b"><div class="ttname"><a href="classVoxel_1_1IntegerParameter.xhtml#a6dde944601794acd3ad62cfb21a4901b">Voxel::IntegerParameter::_toRawValue</a></div><div class="ttdeci">virtual uint32_t _toRawValue(int value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00369">Parameter.h:369</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a538b09602878a76de88c61de89ec259c"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a538b09602878a76de88c61de89ec259c">Voxel::Parameter::displayName</a></div><div class="ttdeci">const String &amp; displayName() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00067">Parameter.h:67</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da112294dd98cc67b8d37e6b00d1551994">Voxel::Parameter::IO_READ_WRITE</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00036">Parameter.h:36</a></div></div>
<div class="ttc" id="classVoxel_1_1IntegerParameter_xhtml_a089eecff42b422d678e5e6e35437e742"><div class="ttname"><a href="classVoxel_1_1IntegerParameter.xhtml#a089eecff42b422d678e5e6e35437e742">Voxel::IntegerParameter::~IntegerParameter</a></div><div class="ttdeci">virtual ~IntegerParameter()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00400">Parameter.h:400</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_a0d439340b04cc433f5dda3ccc1643974"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#a0d439340b04cc433f5dda3ccc1643974">Voxel::ParameterTemplate::~ParameterTemplate</a></div><div class="ttdeci">virtual ~ParameterTemplate()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00174">Parameter.h:174</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a585ef1540cbc8b61e3f228d4e4085eab"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a585ef1540cbc8b61e3f228d4e4085eab">Voxel::RangeParameterTemplate::_lowerLimit</a></div><div class="ttdeci">T _lowerLimit</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00322">Parameter.h:322</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameter_xhtml_a174caf1f707ed78aaefb3cdc9d6e9c00"><div class="ttname"><a href="classVoxel_1_1EnumParameter.xhtml#a174caf1f707ed78aaefb3cdc9d6e9c00">Voxel::EnumParameter::_allowedValues</a></div><div class="ttdeci">Vector&lt; int &gt; _allowedValues</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00282">Parameter.h:282</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a2c43346c59d132dd41d626a745622a5c"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a2c43346c59d132dd41d626a745622a5c">Voxel::Parameter::_dependencies</a></div><div class="ttdeci">Vector&lt; String &gt; _dependencies</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00051">Parameter.h:51</a></div></div>
<div class="ttc" id="group__Param_xhtml_ga5103a73da85f19b45e71e94b0af2c79a"><div class="ttname"><a href="group__Param.xhtml#ga5103a73da85f19b45e71e94b0af2c79a">Voxel::UnsignedIntegerParameter</a></div><div class="ttdeci">RangeParameterTemplate&lt; uint &gt; UnsignedIntegerParameter</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00403">Parameter.h:403</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga8a21cf7475356ae552da8952ebf885b4"><div class="ttname"><a href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Voxel::Vector</a></div><div class="ttdeci">std::vector&lt; T &gt; Vector</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00051">Common.h:51</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a8f3e51c27dc6f4edd2a9e6d49cfa0f6b"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a8f3e51c27dc6f4edd2a9e6d49cfa0f6b">Voxel::Parameter::~Parameter</a></div><div class="ttdeci">virtual ~Parameter()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00081">Parameter.h:81</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml_ae5c837d7ae2ba54a9adb59116e0d0708"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">Voxel::EnumParameterTemplate::valueMeaning</a></div><div class="ttdeci">const Vector&lt; String &gt; &amp; valueMeaning() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00210">Parameter.h:210</a></div></div>
<div class="ttc" id="classVoxel_1_1StrobeBoolParameter_xhtml_abf6a189c322e27c741e312aed549d28d"><div class="ttname"><a href="classVoxel_1_1StrobeBoolParameter.xhtml#abf6a189c322e27c741e312aed549d28d">Voxel::StrobeBoolParameter::typeCast</a></div><div class="ttdeci">static Ptr&lt; StrobeBoolParameter &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00266">Parameter.h:266</a></div></div>
<div class="ttc" id="classVoxel_1_1Ptr_xhtml"><div class="ttname"><a href="classVoxel_1_1Ptr.xhtml">Voxel::Ptr</a></div><div class="ttdef"><b>Definition:</b> <a href="Ptr_8h_source.xhtml#l00036">Ptr.h:36</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a9a636ff878a110ce8f4951ee6935244d"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a9a636ff878a110ce8f4951ee6935244d">Voxel::Parameter::mask</a></div><div class="ttdeci">uint32_t mask() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00071">Parameter.h:71</a></div></div>
<div class="ttc" id="group__Param_xhtml_gac43b8b43e53e240856041db47ab123eb"><div class="ttname"><a href="group__Param.xhtml#gac43b8b43e53e240856041db47ab123eb">Voxel::UnsignedIntegerParameterTemplate</a></div><div class="ttdeci">ParameterTemplate&lt; uint &gt; UnsignedIntegerParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00179">Parameter.h:179</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_a64240b607339f55c4fac973fba8c8934"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#a64240b607339f55c4fac973fba8c8934">Voxel::ParameterTemplate::set</a></div><div class="ttdeci">virtual bool set(const T &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00118">Parameter.h:118</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml">Voxel::EnumParameterTemplate</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00190">Parameter.h:190</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_a0ec9ac3ae46283b37050b4f5122bb80f"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#a0ec9ac3ae46283b37050b4f5122bb80f">Voxel::ParameterTemplate::_fromRawValue</a></div><div class="ttdeci">virtual T _fromRawValue(uint32_t value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00100">Parameter.h:100</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a1e80e7d0c74d8f847d0fce8a95c9b436"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a1e80e7d0c74d8f847d0fce8a95c9b436">Voxel::Parameter::ioType</a></div><div class="ttdeci">IOType ioType() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00074">Parameter.h:74</a></div></div>
<div class="ttc" id="classVoxel_1_1RegisterProgrammer_xhtml_a84db6834c3cc10bd752a4efe39bbdef2"><div class="ttname"><a href="classVoxel_1_1RegisterProgrammer.xhtml#a84db6834c3cc10bd752a4efe39bbdef2">Voxel::RegisterProgrammer::getValue</a></div><div class="ttdeci">virtual bool getValue(const Parameter &amp;param, uint32_t &amp;value) const =0</div></div>
<div class="ttc" id="classVoxel_1_1ParameterDMLParser_xhtml"><div class="ttname"><a href="classVoxel_1_1ParameterDMLParser.xhtml">Voxel::ParameterDMLParser</a></div><div class="ttdef"><b>Definition:</b> <a href="ParameterDMLParser_8h_source.xhtml#l00022">ParameterDMLParser.h:22</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_aaee43eebe0dc5b3ef5e0791d24f2906d"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#aaee43eebe0dc5b3ef5e0791d24f2906d">Voxel::ParameterTemplate::typeCast</a></div><div class="ttdeci">static Ptr&lt; ParameterTemplate&lt; T &gt; &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00113">Parameter.h:113</a></div></div>
<div class="ttc" id="Common_8h_xhtml"><div class="ttname"><a href="Common_8h.xhtml">Common.h</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a5748dd5aee4616996abbecd8b603af2c"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a5748dd5aee4616996abbecd8b603af2c">Voxel::RangeParameterTemplate::lowerLimit</a></div><div class="ttdeci">virtual const T lowerLimit() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00342">Parameter.h:342</a></div></div>
<div class="ttc" id="classVoxel_1_1IntegerParameter_xhtml_a9f362cbcdde6cddd17c4e373ca8bad71"><div class="ttname"><a href="classVoxel_1_1IntegerParameter.xhtml#a9f362cbcdde6cddd17c4e373ca8bad71">Voxel::IntegerParameter::typeCast</a></div><div class="ttdeci">static Ptr&lt; IntegerParameter &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00395">Parameter.h:395</a></div></div>
<div class="ttc" id="classVoxel_1_1FloatParameter_xhtml"><div class="ttname"><a href="classVoxel_1_1FloatParameter.xhtml">Voxel::FloatParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00405">Parameter.h:405</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml_ac0d2f13c241f5160c4a593a5296bc386"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml#ac0d2f13c241f5160c4a593a5296bc386">Voxel::EnumParameterTemplate::typeCast</a></div><div class="ttdeci">static Ptr&lt; EnumParameterTemplate&lt; T &gt; &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00204">Parameter.h:204</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameter_xhtml_a9bfb9b7ecf142b73aeccfc67fede6e52"><div class="ttname"><a href="classVoxel_1_1EnumParameter.xhtml#a9bfb9b7ecf142b73aeccfc67fede6e52">Voxel::EnumParameter::validate</a></div><div class="ttdeci">virtual bool validate(const int &amp;value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00300">Parameter.h:300</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_abb8c7dc72be4ed50f400dc4ee440fd2f"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">Voxel::RangeParameterTemplate::upperLimit</a></div><div class="ttdeci">virtual const T upperLimit() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00343">Parameter.h:343</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a2b058e79428b6bc41206bb14ec47046d"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a2b058e79428b6bc41206bb14ec47046d">Voxel::Parameter::Parameter</a></div><div class="ttdeci">Parameter(RegisterProgrammer &amp;programmer, const String &amp;name, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, const String &amp;displayName, const String &amp;description, IOType ioType=IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00058">Parameter.h:58</a></div></div>
<div class="ttc" id="group__Param_xhtml_gaf3c14516cb9c371ab169265e2cf8add8"><div class="ttname"><a href="group__Param.xhtml#gaf3c14516cb9c371ab169265e2cf8add8">Voxel::IntegerEnumParameterTemplate</a></div><div class="ttdeci">EnumParameterTemplate&lt; int &gt; IntegerEnumParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00216">Parameter.h:216</a></div></div>
<div class="ttc" id="classVoxel_1_1IntegerParameter_xhtml"><div class="ttname"><a href="classVoxel_1_1IntegerParameter.xhtml">Voxel::IntegerParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00366">Parameter.h:366</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameter_xhtml_a2fda290e62348259f6a672fd6197ea28"><div class="ttname"><a href="classVoxel_1_1EnumParameter.xhtml#a2fda290e62348259f6a672fd6197ea28">Voxel::EnumParameter::typeCast</a></div><div class="ttdeci">static Ptr&lt; EnumParameter &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00293">Parameter.h:293</a></div></div>
<div class="ttc" id="classVoxel_1_1StrobeBoolParameter_xhtml"><div class="ttname"><a href="classVoxel_1_1StrobeBoolParameter.xhtml">Voxel::StrobeBoolParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00256">Parameter.h:256</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a37ac5f7905a5849207fde317192ae7ce"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a37ac5f7905a5849207fde317192ae7ce">Voxel::RangeParameterTemplate::unit</a></div><div class="ttdeci">const String &amp; unit() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00340">Parameter.h:340</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_aaeb1febb4732ed1d7f8ed2845dd732a5"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#aaeb1febb4732ed1d7f8ed2845dd732a5">Voxel::Parameter::setAddress</a></div><div class="ttdeci">void setAddress(uint32_t a)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00077">Parameter.h:77</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_a3f4472338de2a9fc48cddf389b85fb1b"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#a3f4472338de2a9fc48cddf389b85fb1b">Voxel::ParameterTemplate::refresh</a></div><div class="ttdeci">virtual bool refresh()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00136">Parameter.h:136</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a8210df3041659c2dfa417faba51e5371"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a8210df3041659c2dfa417faba51e5371">Voxel::RangeParameterTemplate::typeCast</a></div><div class="ttdeci">static Ptr&lt; RangeParameterTemplate&lt; T &gt; &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00335">Parameter.h:335</a></div></div>
<div class="ttc" id="Logger_8h_xhtml"><div class="ttname"><a href="Logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="classVector_3_01String_01_4_xhtml"><div class="ttname"><a href="classVector_3_01String_01_4.xhtml">Vector&lt; String &gt;</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameter_xhtml_ab74f397082b4134fe8e3338a72f91639"><div class="ttname"><a href="classVoxel_1_1EnumParameter.xhtml#ab74f397082b4134fe8e3338a72f91639">Voxel::EnumParameter::allowedValues</a></div><div class="ttdeci">const Vector&lt; int &gt; &amp; allowedValues() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00298">Parameter.h:298</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a7da20a629250ba2db87974d4799be33c"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a7da20a629250ba2db87974d4799be33c">Voxel::RangeParameterTemplate::_unit</a></div><div class="ttdeci">String _unit</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00324">Parameter.h:324</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml_a0386319748c8ee0e635d6dac91a0855f"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml#a0386319748c8ee0e635d6dac91a0855f">Voxel::EnumParameterTemplate::_valueDescription</a></div><div class="ttdeci">Vector&lt; String &gt; _valueDescription</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00194">Parameter.h:194</a></div></div>
<div class="ttc" id="classfloat_xhtml"><div class="ttname"><a href="classfloat.xhtml">float</a></div></div>
<div class="ttc" id="classVoxel_1_1FloatParameter_xhtml_a6f66b4a93f0f8f18dd2bbe204a8b88a1"><div class="ttname"><a href="classVoxel_1_1FloatParameter.xhtml#a6f66b4a93f0f8f18dd2bbe204a8b88a1">Voxel::FloatParameter::~FloatParameter</a></div><div class="ttdeci">virtual ~FloatParameter()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00442">Parameter.h:442</a></div></div>
<div class="ttc" id="classVoxel_1_1BoolParameter_xhtml_a4d61d02368296cd1609ad070a4645fbc"><div class="ttname"><a href="classVoxel_1_1BoolParameter.xhtml#a4d61d02368296cd1609ad070a4645fbc">Voxel::BoolParameter::_fromRawValue</a></div><div class="ttdeci">virtual bool _fromRawValue(uint32_t value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00226">Parameter.h:226</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_ae87f19fcc856d69680f0b7cbc495d20a"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#ae87f19fcc856d69680f0b7cbc495d20a">Voxel::Parameter::address</a></div><div class="ttdeci">uint32_t address() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00069">Parameter.h:69</a></div></div>
<div class="ttc" id="classVoxel_1_1BoolParameter_xhtml"><div class="ttname"><a href="classVoxel_1_1BoolParameter.xhtml">Voxel::BoolParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00224">Parameter.h:224</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameter_xhtml_a138ac8bebdada39f28422369ae1fa87f"><div class="ttname"><a href="classVoxel_1_1EnumParameter.xhtml#a138ac8bebdada39f28422369ae1fa87f">Voxel::EnumParameter::EnumParameter</a></div><div class="ttdeci">EnumParameter(RegisterProgrammer &amp;programmer, const String &amp;name, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, const Vector&lt; int &gt; &amp;allowedValues, const Vector&lt; String &gt; valueDescription, const Vector&lt; String &gt; &amp;valueMeaning, const int &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00285">Parameter.h:285</a></div></div>
<div class="ttc" id="group__Param_xhtml_gaa2a07db15b7f33ba99d2607bd9e51789"><div class="ttname"><a href="group__Param.xhtml#gaa2a07db15b7f33ba99d2607bd9e51789">Voxel::BoolEnumParameterTemplate</a></div><div class="ttdeci">EnumParameterTemplate&lt; bool &gt; BoolEnumParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00215">Parameter.h:215</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml_a8d6a37e707b0e960bb6229f51e12b85a"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">Voxel::EnumParameterTemplate::valueDescription</a></div><div class="ttdeci">const Vector&lt; String &gt; &amp; valueDescription() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00209">Parameter.h:209</a></div></div>
<div class="ttc" id="classVoxel_1_1FloatParameter_xhtml_a307de335ada5ce3424ed2aaf594c3210"><div class="ttname"><a href="classVoxel_1_1FloatParameter.xhtml#a307de335ada5ce3424ed2aaf594c3210">Voxel::FloatParameter::_toRawValue</a></div><div class="ttdeci">virtual uint32_t _toRawValue(float value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00418">Parameter.h:418</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml_ab505f732b678c58e005fe1e36aa07f22"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml#ab505f732b678c58e005fe1e36aa07f22">Voxel::EnumParameterTemplate::_valueMeaning</a></div><div class="ttdeci">Vector&lt; String &gt; _valueMeaning</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00193">Parameter.h:193</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_ae34be7d7cbf5e837f74044fd37b79a78"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#ae34be7d7cbf5e837f74044fd37b79a78">Voxel::Parameter::_mask</a></div><div class="ttdeci">uint32_t _mask</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00041">Parameter.h:41</a></div></div>
<div class="ttc" id="classVoxel_1_1BoolParameter_xhtml_ad7a6f8526e8b80b19288594c8006ec34"><div class="ttname"><a href="classVoxel_1_1BoolParameter.xhtml#ad7a6f8526e8b80b19288594c8006ec34">Voxel::BoolParameter::typeCast</a></div><div class="ttdeci">static Ptr&lt; BoolParameter &gt; typeCast(const ParameterPtr &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00243">Parameter.h:243</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml">Voxel::ParameterTemplate</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00090">Parameter.h:90</a></div></div>
<div class="ttc" id="group__Param_xhtml_gaf977e6dec4ed2ec827fb557c2d5d4536"><div class="ttname"><a href="group__Param.xhtml#gaf977e6dec4ed2ec827fb557c2d5d4536">Voxel::BoolParameterTemplate</a></div><div class="ttdeci">ParameterTemplate&lt; bool &gt; BoolParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00177">Parameter.h:177</a></div></div>
<div class="ttc" id="classVoxel_1_1FloatParameter_xhtml_a80eeb646d451185909ee11626331dd55"><div class="ttname"><a href="classVoxel_1_1FloatParameter.xhtml#a80eeb646d451185909ee11626331dd55">Voxel::FloatParameter::FloatParameter</a></div><div class="ttdeci">FloatParameter(RegisterProgrammer &amp;programmer, const String &amp;name, const String &amp;unit, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, float lowerLimit, float upperLimit, const float &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00430">Parameter.h:430</a></div></div>
<div class="ttc" id="group__Param_xhtml_ga5dab476d4c953294d6716bfeaa79e3e9"><div class="ttname"><a href="group__Param.xhtml#ga5dab476d4c953294d6716bfeaa79e3e9">Voxel::FloatParameterTemplate</a></div><div class="ttdeci">ParameterTemplate&lt; float &gt; FloatParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00180">Parameter.h:180</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a3202f3871489be5ba3b163dc45fbf19e"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a3202f3871489be5ba3b163dc45fbf19e">Voxel::Parameter::_programmer</a></div><div class="ttdeci">RegisterProgrammer &amp; _programmer</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00053">Parameter.h:53</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameter_xhtml"><div class="ttname"><a href="classVoxel_1_1EnumParameter.xhtml">Voxel::EnumParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00279">Parameter.h:279</a></div></div>
<div class="ttc" id="classVoxel_1_1BoolParameter_xhtml_ac17d81ecb5188028caa262fc5c5e6026"><div class="ttname"><a href="classVoxel_1_1BoolParameter.xhtml#ac17d81ecb5188028caa262fc5c5e6026">Voxel::BoolParameter::validate</a></div><div class="ttdeci">virtual bool validate(const bool &amp;value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00248">Parameter.h:248</a></div></div>
<div class="ttc" id="classVoxel_1_1EnumParameterTemplate_xhtml_a23017ca5be80c3677d022334e7261fe4"><div class="ttname"><a href="classVoxel_1_1EnumParameterTemplate.xhtml#a23017ca5be80c3677d022334e7261fe4">Voxel::EnumParameterTemplate::~EnumParameterTemplate</a></div><div class="ttdeci">virtual ~EnumParameterTemplate()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00212">Parameter.h:212</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_af8da1dc2c7a5dde91d75db89abce47ad"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#af8da1dc2c7a5dde91d75db89abce47ad">Voxel::RangeParameterTemplate::RangeParameterTemplate</a></div><div class="ttdeci">RangeParameterTemplate(RegisterProgrammer &amp;programmer, const String &amp;name, const String &amp;unit, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, const T &amp;lowerLimit, const T &amp;upperLimit, const T &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00327">Parameter.h:327</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a7f47148d4f45961a928e50aefd1cb48a"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a7f47148d4f45961a928e50aefd1cb48a">Voxel::Parameter::setName</a></div><div class="ttdeci">void setName(const String &amp;n)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00076">Parameter.h:76</a></div></div>
<div class="ttc" id="RegisterProgrammer_8h_xhtml"><div class="ttname"><a href="RegisterProgrammer_8h.xhtml">RegisterProgrammer.h</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_aae7b0d1bc8163235367a0d780ea7aa4d"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4d">Voxel::Parameter::IOType</a></div><div class="ttdeci">IOType</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00033">Parameter.h:33</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a1c45c34e90fef3116410bf1a5ed1afcf"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a1c45c34e90fef3116410bf1a5ed1afcf">Voxel::RangeParameterTemplate::setLowerLimit</a></div><div class="ttdeci">virtual void setLowerLimit(T lowerLimit)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00345">Parameter.h:345</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a82ed94476ec947d87de4603f40cec7f6"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a82ed94476ec947d87de4603f40cec7f6">Voxel::Parameter::_displayName</a></div><div class="ttdeci">String _displayName</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00048">Parameter.h:48</a></div></div>
<div class="ttc" id="classVoxel_1_1RegisterProgrammer_xhtml_acc5201215bd1fd5c3721b4babc5e0f6a"><div class="ttname"><a href="classVoxel_1_1RegisterProgrammer.xhtml#acc5201215bd1fd5c3721b4babc5e0f6a">Voxel::RegisterProgrammer::setValue</a></div><div class="ttdeci">virtual bool setValue(const Parameter &amp;param, uint32_t value, bool writeOnly=false)=0</div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_adc162cb5807b1fd571384acff3ee36b3"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#adc162cb5807b1fd571384acff3ee36b3">Voxel::ParameterTemplate::_value</a></div><div class="ttdeci">T _value</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00093">Parameter.h:93</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a3f6208a8c1dc348b97565e6242d30e5c"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a3f6208a8c1dc348b97565e6242d30e5c">Voxel::Parameter::name</a></div><div class="ttdeci">const String &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00066">Parameter.h:66</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_a03b6835b248723b4810523dfa676a4a1"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#a03b6835b248723b4810523dfa676a4a1">Voxel::ParameterTemplate::_toRawValue</a></div><div class="ttdeci">virtual uint32_t _toRawValue(T value) const </div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00095">Parameter.h:95</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_a4ba9c3ad58f9e796f08ef74aa55b8a15"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#a4ba9c3ad58f9e796f08ef74aa55b8a15">Voxel::RangeParameterTemplate::~RangeParameterTemplate</a></div><div class="ttdeci">virtual ~RangeParameterTemplate()</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00353">Parameter.h:353</a></div></div>
<div class="ttc" id="classVoxel_1_1StrobeBoolParameter_xhtml_a76c8bc283d4a83d9681a7395f13d3d06"><div class="ttname"><a href="classVoxel_1_1StrobeBoolParameter.xhtml#a76c8bc283d4a83d9681a7395f13d3d06">Voxel::StrobeBoolParameter::StrobeBoolParameter</a></div><div class="ttdeci">StrobeBoolParameter(RegisterProgrammer &amp;programmer, const String &amp;name, uint32_t address, uint8_t registerLength, uint8_t lsb, const Vector&lt; String &gt; &amp;valueDescription, const Vector&lt; String &gt; &amp;valueMeaning, const bool &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00259">Parameter.h:259</a></div></div>
<div class="ttc" id="classVoxel_1_1RangeParameterTemplate_xhtml_aacb3e43640e0f7169018c539e18f7df7"><div class="ttname"><a href="classVoxel_1_1RangeParameterTemplate.xhtml#aacb3e43640e0f7169018c539e18f7df7">Voxel::RangeParameterTemplate::setUpperLimit</a></div><div class="ttdeci">virtual void setUpperLimit(T upperLimit)</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00346">Parameter.h:346</a></div></div>
<div class="ttc" id="group__Param_xhtml_ga8e1aba90255ccf959901678783418c23"><div class="ttname"><a href="group__Param.xhtml#ga8e1aba90255ccf959901678783418c23">Voxel::FloatRangeParameterTemplate</a></div><div class="ttdeci">RangeParameterTemplate&lt; float &gt; FloatRangeParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00357">Parameter.h:357</a></div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_ad0faca7bb67f20c02c54bab49aa83007"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#ad0faca7bb67f20c02c54bab49aa83007">Voxel::ParameterTemplate::validate</a></div><div class="ttdeci">virtual bool validate(const T &amp;value) const =0</div></div>
<div class="ttc" id="classVoxel_1_1ParameterTemplate_xhtml_ae832c0ddbb75c214a235e09f8f659d74"><div class="ttname"><a href="classVoxel_1_1ParameterTemplate.xhtml#ae832c0ddbb75c214a235e09f8f659d74">Voxel::ParameterTemplate::ParameterTemplate</a></div><div class="ttdeci">ParameterTemplate(RegisterProgrammer &amp;programmer, const String &amp;name, uint32_t address, uint8_t registerLength, uint8_t msb, uint8_t lsb, const T &amp;defaultValue, const String &amp;displayName, const String &amp;description, Parameter::IOType ioType=Parameter::IO_READ_WRITE, const Vector&lt; String &gt; &amp;dependencies={})</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00106">Parameter.h:106</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_aae7b0d1bc8163235367a0d780ea7aa4da429b1713e02fc3733bfcea37a2e63a45"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da429b1713e02fc3733bfcea37a2e63a45">Voxel::Parameter::IO_WRITE_ONLY</a></div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00037">Parameter.h:37</a></div></div>
<div class="ttc" id="classVoxel_1_1Parameter_xhtml_a3804d2450b4615e8fbb9792dda6d8072"><div class="ttname"><a href="classVoxel_1_1Parameter.xhtml#a3804d2450b4615e8fbb9792dda6d8072">Voxel::Parameter::_name</a></div><div class="ttdeci">String _name</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00047">Parameter.h:47</a></div></div>
<div class="ttc" id="classString_xhtml"><div class="ttname"><a href="classString.xhtml">String</a></div></div>
<div class="ttc" id="group__Param_xhtml_gaef222fd30997f44997c55ab0e92cca92"><div class="ttname"><a href="group__Param.xhtml#gaef222fd30997f44997c55ab0e92cca92">Voxel::IntegerParameterTemplate</a></div><div class="ttdeci">ParameterTemplate&lt; int &gt; IntegerParameterTemplate</div><div class="ttdef"><b>Definition:</b> <a href="Parameter_8h_source.xhtml#l00178">Parameter.h:178</a></div></div>
<div class="ttc" id="classVoxel_1_1RegisterProgrammer_xhtml"><div class="ttname"><a href="classVoxel_1_1RegisterProgrammer.xhtml">Voxel::RegisterProgrammer</a></div><div class="ttdef"><b>Definition:</b> <a href="RegisterProgrammer_8h_source.xhtml#l00024">RegisterProgrammer.h:24</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 21 2015 20:56:03 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
