<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: TinyXML2.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_e7f07c35b19a6de9638fcd101b463d91.xhtml">Voxel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">TinyXML2.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00318.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">This is exactly same as the original, except that the namespace has been renamed to &quot;TinyXML2&quot; from &quot;tinyxm*l2&quot;.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Also, the .h and .cpp files have been renamed to TinyXML2.* from tinyxml2.*. This would avoid any conflicts </span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">with system installed version of tinyxml2 (In Ubuntu 14.04 LTS, there are packages libtinyxml2* available).</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">Original code by Lee Thomason (www.grinninglizard.com)</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">This software is provided &#39;as-is&#39;, without any express or implied</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">warranty. In no event will the authors be held liable for any</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">damages arising from the use of this software.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">Permission is granted to anyone to use this software for any</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">purpose, including commercial applications, and to alter it and</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">redistribute it freely, subject to the following restrictions:</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">1. The origin of this software must not be misrepresented; you must</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">not claim that you wrote the original software. If you use this</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">software in a product, an acknowledgment in the product documentation</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">would be appreciated but is not required.</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">2. Altered source versions must be plainly marked as such, and</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">must not be misrepresented as being the original software.</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">3. This notice may not be removed or altered from any source</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">distribution.</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00319.xhtml">TinyXML2.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;new&gt;</span>    <span class="comment">// yes, this one new style header, is in the Android SDK.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#if defined(ANDROID_NDK) || defined(__QNXNTO__)</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#   include &lt;stddef.h&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#   include &lt;cstddef&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> LINE_FEED       = (char)0x0a;     <span class="comment">// all line endings are normalized to LF</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> LF = LINE_FEED;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> CARRIAGE_RETURN   = (char)0x0d;     <span class="comment">// CR gets filtered out</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> CR = CARRIAGE_RETURN;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> SINGLE_QUOTE      = <span class="charliteral">&#39;\&#39;&#39;</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> DOUBLE_QUOTE      = <span class="charliteral">&#39;\&quot;&#39;</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">// Bunch of unicode info at:</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">//    http://www.unicode.org/faq/utf_bom.html</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">//  ef bb bf (Microsoft &quot;lead bytes&quot;) - designates UTF-8</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> TIXML_UTF_LEAD_0 = 0xefU;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> TIXML_UTF_LEAD_1 = 0xbbU;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> TIXML_UTF_LEAD_2 = 0xbfU;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="a00386.xhtml">   53</a></span>&#160;<span class="keyword">namespace </span>TinyXML2</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="a00052.xhtml">   56</a></span>&#160;<span class="keyword">struct </span><a class="code" href="a00052.xhtml">Entity</a> {</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="a00052.xhtml#a260e8b6b1517621183446929141a4cc1">   57</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00052.xhtml#a260e8b6b1517621183446929141a4cc1">pattern</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="a00052.xhtml#a40262273783df3568a3c344adbe3baa1">   58</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="a00052.xhtml#a40262273783df3568a3c344adbe3baa1">length</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="a00052.xhtml#a78d2d6df29ba9c8848a57e8400a997b1">   59</a></span>&#160;    <span class="keywordtype">char</span> <a class="code" href="a00052.xhtml#a78d2d6df29ba9c8848a57e8400a997b1">value</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;};</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> NUM_ENTITIES = 5;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00052.xhtml">Entity</a> entities[NUM_ENTITIES] = {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    { <span class="stringliteral">&quot;quot&quot;</span>, 4,  DOUBLE_QUOTE },</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    { <span class="stringliteral">&quot;amp&quot;</span>, 3,   <span class="charliteral">&#39;&amp;&#39;</span>  },</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    { <span class="stringliteral">&quot;apos&quot;</span>, 4,  SINGLE_QUOTE },</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    { <span class="stringliteral">&quot;lt&quot;</span>, 2,    <span class="charliteral">&#39;&lt;&#39;</span>  },</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    { <span class="stringliteral">&quot;gt&quot;</span>, 2,    <span class="charliteral">&#39;&gt;&#39;</span>  }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;};</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="a00133.xhtml#a6cb2da1d707d90e015006ba9d0295356">   72</a></span>&#160;<a class="code" href="a00133.xhtml#a6cb2da1d707d90e015006ba9d0295356">StrPair::~StrPair</a>()</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="a00133.xhtml#afbc7a4f921afeff8ef2aca24765ed24f">Reset</a>();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="a00133.xhtml#aa49c81c2847e30ec02d2cb971de60eab">   78</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00133.xhtml#aa49c81c2847e30ec02d2cb971de60eab">StrPair::TransferTo</a>( <a class="code" href="a00133.xhtml">StrPair</a>* other )</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span> ( <span class="keyword">this</span> == other ) {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// This in effect implements the assignment operator by &quot;moving&quot;</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// ownership (as in auto_ptr).</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( other-&gt;<a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> == 0 );</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( other-&gt;<a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> == 0 );</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( other-&gt;<a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a> == 0 );</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    other-&gt;<a class="code" href="a00133.xhtml#afbc7a4f921afeff8ef2aca24765ed24f">Reset</a>();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    other-&gt;<a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> = <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    other-&gt;<a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> = <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    other-&gt;<a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a> = <a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> = 0;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> = 0;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a> = 0;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="a00133.xhtml#afbc7a4f921afeff8ef2aca24765ed24f">  101</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00133.xhtml#afbc7a4f921afeff8ef2aca24765ed24f">StrPair::Reset</a>()</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; <a class="code" href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba930bde12ea0249c2a72c99796ae5bd31">NEEDS_DELETE</a> ) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keyword">delete</span> [] <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> = 0;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> = 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a> = 0;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">StrPair::SetStr</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str, <span class="keywordtype">int</span> flags )</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="a00133.xhtml#afbc7a4f921afeff8ef2aca24765ed24f">Reset</a>();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">size_t</span> len = strlen( str );</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> = <span class="keyword">new</span> <span class="keywordtype">char</span>[ len+1 ];</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    memcpy( <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>, str, len+1 );</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a> = <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> + len;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> = flags | <a class="code" href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba930bde12ea0249c2a72c99796ae5bd31">NEEDS_DELETE</a>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">  123</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">StrPair::ParseText</a>( <span class="keywordtype">char</span>* p, <span class="keyword">const</span> <span class="keywordtype">char</span>* endTag, <span class="keywordtype">int</span> strFlags )</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( endTag &amp;&amp; *endTag );</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">char</span>* start = p;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">char</span>  endChar = *endTag;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">size_t</span> length = strlen( endTag );</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">// Inner loop of text parsing.</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">while</span> ( *p ) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">if</span> ( *p == endChar &amp;&amp; strncmp( p, endTag, length ) == 0 ) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <a class="code" href="a00133.xhtml#acb766a3f2144ff1e37aaf3a130db993e">Set</a>( start, p, strFlags );</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">return</span> p + length;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        ++p;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="a00133.xhtml#a323f7549e32dd8102eafc04a748041fc">  143</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00133.xhtml#a323f7549e32dd8102eafc04a748041fc">StrPair::ParseName</a>( <span class="keywordtype">char</span>* p )</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;{</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">if</span> ( !p || !(*p) ) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">char</span>* <span class="keyword">const</span> start = p;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">while</span>( *p &amp;&amp; ( p == start ? <a class="code" href="a00205.xhtml#adc18aa919e561a1b17677bbc6ff30702">XMLUtil::IsNameStartChar</a>( *p ) : <a class="code" href="a00205.xhtml#aba48680e0f80b37e9d9bab73ffedc548">XMLUtil::IsNameChar</a>( *p ) )) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        ++p;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">if</span> ( p &gt; start ) {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="a00133.xhtml#acb766a3f2144ff1e37aaf3a130db993e">Set</a>( start, p, 0 );</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="a00133.xhtml#a7d56cd79475b9e7e6349134b89331311">  163</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00133.xhtml#a7d56cd79475b9e7e6349134b89331311">StrPair::CollapseWhitespace</a>()</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// Adjusting _start would cause undefined behavior on delete[]</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( ( <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; <a class="code" href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba930bde12ea0249c2a72c99796ae5bd31">NEEDS_DELETE</a> ) == 0 );</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">// Trim leading space.</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> );</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> &amp;&amp; *<a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a> ) {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordtype">char</span>* p = <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>; <span class="comment">// the read pointer</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordtype">char</span>* q = <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>; <span class="comment">// the write pointer</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">while</span>( *p ) {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#aa1b7cab8abab24f6deeb0b34a31b5a86">XMLUtil::IsWhiteSpace</a>( *p )) {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="keywordflow">if</span> ( *p == 0 ) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                    <span class="keywordflow">break</span>;    <span class="comment">// don&#39;t write to q; this trims the trailing space.</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                *q = <span class="charliteral">&#39; &#39;</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                ++q;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            *q = *p;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            ++q;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            ++p;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        *q = 0;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">  192</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">StrPair::GetStr</a>()</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; <a class="code" href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba3653bbc25d655e333f8ecd3bd9d805f5">NEEDS_FLUSH</a> ) {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        *<a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a> = 0;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> ^= <a class="code" href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba3653bbc25d655e333f8ecd3bd9d805f5">NEEDS_FLUSH</a>;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> ) {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordtype">char</span>* p = <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>; <span class="comment">// the read pointer</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordtype">char</span>* q = <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>; <span class="comment">// the write pointer</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">while</span>( p &lt; <a class="code" href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">_end</a> ) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                <span class="keywordflow">if</span> ( (<a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa6f9e2d223bcf705cc6487c90d466bf9c">NEEDS_NEWLINE_NORMALIZATION</a>) &amp;&amp; *p == CR ) {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                    <span class="comment">// CR-LF pair becomes LF</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                    <span class="comment">// CR alone becomes LF</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                    <span class="comment">// LF-CR becomes LF</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    <span class="keywordflow">if</span> ( *(p+1) == LF ) {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                        p += 2;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        ++p;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                    }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    *q++ = LF;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; NEEDS_NEWLINE_NORMALIZATION) &amp;&amp; *p == LF ) {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    <span class="keywordflow">if</span> ( *(p+1) == CR ) {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                        p += 2;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        ++p;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    *q++ = LF;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa66ff62847ced7ac17c68df6f5c2e589c">NEEDS_ENTITY_PROCESSING</a>) &amp;&amp; *p == <span class="charliteral">&#39;&amp;&#39;</span> ) {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    <span class="comment">// Entities handled by tinyXML2:</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    <span class="comment">// - special entities in the entity table [in/out]</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    <span class="comment">// - numeric character reference [in]</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    <span class="comment">//   &amp;#20013; or &amp;#x4e2d;</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <span class="keywordflow">if</span> ( *(p+1) == <span class="charliteral">&#39;#&#39;</span> ) {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">int</span> buflen = 10;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                        <span class="keywordtype">char</span> buf[buflen] = { 0 };</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        <span class="keywordtype">int</span> len = 0;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        p = <span class="keyword">const_cast&lt;</span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>( <a class="code" href="a00205.xhtml#a7b69ac5d9474c28a4b2fd675d692ea43">XMLUtil::GetCharacterRef</a>( p, buf, &amp;len ) );</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( 0 &lt;= len &amp;&amp; len &lt;= buflen );</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( q + len &lt;= p );</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                        memcpy( q, buf, len );</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                        q += len;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                        <span class="keywordtype">int</span> i=0;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                        <span class="keywordflow">for</span>(; i&lt;NUM_ENTITIES; ++i ) {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                            <span class="keyword">const</span> <a class="code" href="a00052.xhtml">Entity</a>&amp; entity = entities[i];</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                            <span class="keywordflow">if</span> ( strncmp( p + 1, entity.<a class="code" href="a00052.xhtml#a260e8b6b1517621183446929141a4cc1">pattern</a>, entity.<a class="code" href="a00052.xhtml#a40262273783df3568a3c344adbe3baa1">length</a> ) == 0</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                    &amp;&amp; *( p + entity.<a class="code" href="a00052.xhtml#a40262273783df3568a3c344adbe3baa1">length</a> + 1 ) == <span class="charliteral">&#39;;&#39;</span> ) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                <span class="comment">// Found an entity - convert.</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                *q = entity.<a class="code" href="a00052.xhtml#a78d2d6df29ba9c8848a57e8400a997b1">value</a>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                ++q;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                p += entity.<a class="code" href="a00052.xhtml#a40262273783df3568a3c344adbe3baa1">length</a> + 2;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                            }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                        }</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                        <span class="keywordflow">if</span> ( i == NUM_ENTITIES ) {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                            <span class="comment">// fixme: treat as error?</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                            ++p;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                            ++q;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                        }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    }</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                    *q = *p;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    ++p;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    ++q;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            *q = 0;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="comment">// The loop below has plenty going on, and this</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="comment">// is a less useful mode. Break it out.</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fad1d1b61640512c641b60db597bb2edcf">COLLAPSE_WHITESPACE</a> ) {</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <a class="code" href="a00133.xhtml#a7d56cd79475b9e7e6349134b89331311">CollapseWhitespace</a>();</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> = (<a class="code" href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">_flags</a> &amp; <a class="code" href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba930bde12ea0249c2a72c99796ae5bd31">NEEDS_DELETE</a>);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">_start</a>;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;}</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">// --------- XMLUtil ----------- //</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="a00205.xhtml#add0878731f4c713ac43af19b24e569a7">  283</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00205.xhtml#add0878731f4c713ac43af19b24e569a7">XMLUtil::ReadBOM</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* p, <span class="keywordtype">bool</span>* bom )</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;{</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    *bom = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* pu = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(p);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="comment">// Check for BOM:</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordflow">if</span> (    *(pu+0) == TIXML_UTF_LEAD_0</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            &amp;&amp; *(pu+1) == TIXML_UTF_LEAD_1</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            &amp;&amp; *(pu+2) == TIXML_UTF_LEAD_2 ) {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        *bom = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        p += 3;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="a00205.xhtml#a568fea7b3c469d8fae0e1f3480a0d96c">  298</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00205.xhtml#a568fea7b3c469d8fae0e1f3480a0d96c">XMLUtil::ConvertUTF32ToUTF8</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> input, <span class="keywordtype">char</span>* output, <span class="keywordtype">int</span>* length )</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;{</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> BYTE_MASK = 0xBF;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> BYTE_MARK = 0x80;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> FIRST_BYTE_MARK[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">if</span> (input &lt; 0x80) {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        *length = 1;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( input &lt; 0x800 ) {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        *length = 2;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( input &lt; 0x10000 ) {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        *length = 3;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( input &lt; 0x200000 ) {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        *length = 4;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        *length = 0;    <span class="comment">// This code won&#39;t covert this correctly anyway.</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    output += *length;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// Scary scary fall throughs.</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">switch</span> (*length) {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">case</span> 4:</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            --output;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            *output = (char)((input | BYTE_MARK) &amp; BYTE_MASK);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            input &gt;&gt;= 6;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">case</span> 3:</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            --output;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            *output = (char)((input | BYTE_MARK) &amp; BYTE_MASK);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            input &gt;&gt;= 6;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">case</span> 2:</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            --output;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            *output = (char)((input | BYTE_MARK) &amp; BYTE_MASK);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            input &gt;&gt;= 6;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">case</span> 1:</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            --output;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            *output = (char)(input | FIRST_BYTE_MARK[*length]);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="a00205.xhtml#a7b69ac5d9474c28a4b2fd675d692ea43">  346</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00205.xhtml#a7b69ac5d9474c28a4b2fd675d692ea43">XMLUtil::GetCharacterRef</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* p, <span class="keywordtype">char</span>* value, <span class="keywordtype">int</span>* length )</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="comment">// Presume an entity, and pull it out.</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    *length = 0;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">if</span> ( *(p+1) == <span class="charliteral">&#39;#&#39;</span> &amp;&amp; *(p+2) ) {</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ucs = 0;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        ptrdiff_t delta = 0;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="keywordtype">unsigned</span> mult = 1;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">if</span> ( *(p+2) == <span class="charliteral">&#39;x&#39;</span> ) {</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="comment">// Hexadecimal.</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <span class="keywordflow">if</span> ( !*(p+3) ) {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            }</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">char</span>* q = p+3;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            q = strchr( q, <span class="charliteral">&#39;;&#39;</span> );</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordflow">if</span> ( !q || !*q ) {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            delta = q-p;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            --q;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">while</span> ( *q != <span class="charliteral">&#39;x&#39;</span> ) {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                <span class="keywordflow">if</span> ( *q &gt;= <span class="charliteral">&#39;0&#39;</span> &amp;&amp; *q &lt;= <span class="charliteral">&#39;9&#39;</span> ) {</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    ucs += mult * (*q - <span class="charliteral">&#39;0&#39;</span>);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                }</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( *q &gt;= <span class="charliteral">&#39;a&#39;</span> &amp;&amp; *q &lt;= <span class="charliteral">&#39;f&#39;</span> ) {</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                    ucs += mult * (*q - <span class="charliteral">&#39;a&#39;</span> + 10);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( *q &gt;= <span class="charliteral">&#39;A&#39;</span> &amp;&amp; *q &lt;= <span class="charliteral">&#39;F&#39;</span> ) {</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    ucs += mult * (*q - <span class="charliteral">&#39;A&#39;</span> + 10 );</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                mult *= 16;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                --q;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            }</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        }</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="comment">// Decimal.</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordflow">if</span> ( !*(p+2) ) {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">char</span>* q = p+2;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            q = strchr( q, <span class="charliteral">&#39;;&#39;</span> );</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keywordflow">if</span> ( !q || !*q ) {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            delta = q-p;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            --q;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keywordflow">while</span> ( *q != <span class="charliteral">&#39;#&#39;</span> ) {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                <span class="keywordflow">if</span> ( *q &gt;= <span class="charliteral">&#39;0&#39;</span> &amp;&amp; *q &lt;= <span class="charliteral">&#39;9&#39;</span> ) {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    ucs += mult * (*q - <span class="charliteral">&#39;0&#39;</span>);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                mult *= 10;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                --q;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        }</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="comment">// convert the UCS to UTF-8</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <a class="code" href="a00205.xhtml#a568fea7b3c469d8fae0e1f3480a0d96c">ConvertUTF32ToUTF8</a>( ucs, value, length );</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordflow">return</span> p + delta + 1;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    }</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordflow">return</span> p+1;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;}</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div>
<div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">  424</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( <span class="keywordtype">int</span> v, <span class="keywordtype">char</span>* buffer, <span class="keywordtype">int</span> bufferSize )</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;{</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <a class="code" href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a>( buffer, bufferSize, <span class="stringliteral">&quot;%d&quot;</span>, v );</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;}</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div>
<div class="line"><a name="l00430"></a><span class="lineno"><a class="line" href="a00205.xhtml#a3baca299048bcc79942e2428855ee4e2">  430</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( <span class="keywordtype">unsigned</span> v, <span class="keywordtype">char</span>* buffer, <span class="keywordtype">int</span> bufferSize )</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;{</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <a class="code" href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a>( buffer, bufferSize, <span class="stringliteral">&quot;%u&quot;</span>, v );</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;}</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div>
<div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="a00205.xhtml#a83c6d142babb3cc25b6335eea20ff952">  436</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( <span class="keywordtype">bool</span> v, <span class="keywordtype">char</span>* buffer, <span class="keywordtype">int</span> bufferSize )</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;{</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <a class="code" href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a>( buffer, bufferSize, <span class="stringliteral">&quot;%d&quot;</span>, v ? 1 : 0 );</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;}</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">  ToStr() of a number is a very tricky topic.</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">  https://github.com/leethomason/tinyxml2/issues/106</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="a00205.xhtml#a7c5a89a9594efd433dd98011108f43a4">  445</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( <span class="keywordtype">float</span> v, <span class="keywordtype">char</span>* buffer, <span class="keywordtype">int</span> bufferSize )</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;{</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <a class="code" href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a>( buffer, bufferSize, <span class="stringliteral">&quot;%.8g&quot;</span>, v );</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;}</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div>
<div class="line"><a name="l00451"></a><span class="lineno"><a class="line" href="a00205.xhtml#a4373b487f043b0c9f496183649f3ccb3">  451</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( <span class="keywordtype">double</span> v, <span class="keywordtype">char</span>* buffer, <span class="keywordtype">int</span> bufferSize )</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;{</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <a class="code" href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a>( buffer, bufferSize, <span class="stringliteral">&quot;%.17g&quot;</span>, v );</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div>
<div class="line"><a name="l00457"></a><span class="lineno"><a class="line" href="a00205.xhtml#ab788174893c461fa399fc0ee05b75f4c">  457</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00205.xhtml#ab788174893c461fa399fc0ee05b75f4c">XMLUtil::ToInt</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str, <span class="keywordtype">int</span>* value )</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;{</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00319.xhtml#a96f54d7c855ad92e705510904a040393">TIXML_SSCANF</a>( str, <span class="stringliteral">&quot;%d&quot;</span>, value ) == 1 ) {</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;}</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno"><a class="line" href="a00205.xhtml#a843346320dbd62a317a34b25cafb1ba1">  465</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00205.xhtml#a843346320dbd62a317a34b25cafb1ba1">XMLUtil::ToUnsigned</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str, <span class="keywordtype">unsigned</span> *value )</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;{</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00319.xhtml#a96f54d7c855ad92e705510904a040393">TIXML_SSCANF</a>( str, <span class="stringliteral">&quot;%u&quot;</span>, value ) == 1 ) {</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    }</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;}</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div>
<div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="a00205.xhtml#a25dd8394af7cc2735c3b08c4613d401a">  473</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00205.xhtml#a25dd8394af7cc2735c3b08c4613d401a">XMLUtil::ToBool</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str, <span class="keywordtype">bool</span>* value )</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;{</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="keywordtype">int</span> ival = 0;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#ab788174893c461fa399fc0ee05b75f4c">ToInt</a>( str, &amp;ival )) {</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        *value = (ival==0) ? <span class="keyword">false</span> : <span class="keyword">true</span>;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    }</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">StringEqual</a>( str, <span class="stringliteral">&quot;true&quot;</span> ) ) {</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        *value = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">StringEqual</a>( str, <span class="stringliteral">&quot;false&quot;</span> ) ) {</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        *value = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    }</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;}</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div>
<div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="a00205.xhtml#a4f28848a9d313016991adc7d0581458e">  492</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00205.xhtml#a4f28848a9d313016991adc7d0581458e">XMLUtil::ToFloat</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str, <span class="keywordtype">float</span>* value )</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;{</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00319.xhtml#a96f54d7c855ad92e705510904a040393">TIXML_SSCANF</a>( str, <span class="stringliteral">&quot;%f&quot;</span>, value ) == 1 ) {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;}</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div>
<div class="line"><a name="l00500"></a><span class="lineno"><a class="line" href="a00205.xhtml#a1e45f8b533ef3584a8afbd1cbe31ca1f">  500</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00205.xhtml#a1e45f8b533ef3584a8afbd1cbe31ca1f">XMLUtil::ToDouble</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str, <span class="keywordtype">double</span>* value )</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;{</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00319.xhtml#a96f54d7c855ad92e705510904a040393">TIXML_SSCANF</a>( str, <span class="stringliteral">&quot;%lf&quot;</span>, value ) == 1 ) {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    }</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;}</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div>
<div class="line"><a name="l00509"></a><span class="lineno"><a class="line" href="a00198.xhtml#a0a09219933989db01f4e0cff84ce5af2">  509</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00198.xhtml#a0a09219933989db01f4e0cff84ce5af2">XMLDocument::Identify</a>( <span class="keywordtype">char</span>* p, <a class="code" href="a00201.xhtml">XMLNode</a>** node )</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;{</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="keywordtype">char</span>* <span class="keyword">const</span> start = p;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">if</span>( !p || !*p ) {</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    }</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="comment">// What is this thing?</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  <span class="comment">// These strings define the matching patters:</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* xmlHeader    = { <span class="stringliteral">&quot;&lt;?&quot;</span> };</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* commentHeader  = { <span class="stringliteral">&quot;&lt;!--&quot;</span> };</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* dtdHeader    = { <span class="stringliteral">&quot;&lt;!&quot;</span> };</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* cdataHeader    = { <span class="stringliteral">&quot;&lt;![CDATA[&quot;</span> };</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* elementHeader  = { <span class="stringliteral">&quot;&lt;&quot;</span> };  <span class="comment">// and a header for everything else; check last.</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> xmlHeaderLen   = 2;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> commentHeaderLen = 4;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> dtdHeaderLen   = 2;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> cdataHeaderLen   = 9;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> elementHeaderLen = 1;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="preprocessor">#if defined(_MSC_VER)</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning ( push )</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning ( disable : 4127 )</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="preprocessor"></span>    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">sizeof</span>( <a class="code" href="a00195.xhtml">XMLComment</a> ) == <span class="keyword">sizeof</span>( <a class="code" href="a00204.xhtml">XMLUnknown</a> ) );    <span class="comment">// use same memory pool</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">sizeof</span>( <a class="code" href="a00195.xhtml">XMLComment</a> ) == <span class="keyword">sizeof</span>( <a class="code" href="a00197.xhtml">XMLDeclaration</a> ) );  <span class="comment">// use same memory pool</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="preprocessor">#if defined(_MSC_VER)</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning (pop)</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="preprocessor"></span>    <a class="code" href="a00201.xhtml">XMLNode</a>* returnNode = 0;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( p, xmlHeader, xmlHeaderLen ) ) {</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        returnNode = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Alloc()) <a class="code" href="a00197.xhtml">XMLDeclaration</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        returnNode-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a> = &amp;<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        p += xmlHeaderLen;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( p, commentHeader, commentHeaderLen ) ) {</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        returnNode = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Alloc()) <a class="code" href="a00195.xhtml">XMLComment</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        returnNode-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a> = &amp;<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        p += commentHeaderLen;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    }</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( p, cdataHeader, cdataHeaderLen ) ) {</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <a class="code" href="a00203.xhtml">XMLText</a>* text = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>.Alloc()) <a class="code" href="a00203.xhtml">XMLText</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        returnNode = text;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        returnNode-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a> = &amp;<a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        p += cdataHeaderLen;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        text-&gt;<a class="code" href="a00203.xhtml#a44acb8346adaa28c3ed043a22104b917">SetCData</a>( <span class="keyword">true</span> );</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    }</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( p, dtdHeader, dtdHeaderLen ) ) {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        returnNode = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Alloc()) <a class="code" href="a00204.xhtml">XMLUnknown</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        returnNode-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a> = &amp;<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        p += dtdHeaderLen;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    }</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( p, elementHeader, elementHeaderLen ) ) {</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        returnNode = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>.Alloc()) <a class="code" href="a00198.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        returnNode-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a> = &amp;<a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        p += elementHeaderLen;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    }</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        returnNode = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>.Alloc()) <a class="code" href="a00203.xhtml">XMLText</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        returnNode-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a> = &amp;<a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        p = start;  <span class="comment">// Back it up, all the text counts.</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    }</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    *node = returnNode;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;}</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div>
<div class="line"><a name="l00579"></a><span class="lineno"><a class="line" href="a00198.xhtml#ad02be21c4459af97b6294eb4d1f82cd6">  579</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00198.xhtml#ad02be21c4459af97b6294eb4d1f82cd6">XMLDocument::Accept</a>( <a class="code" href="a00206.xhtml">XMLVisitor</a>* visitor )<span class="keyword"> const</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keywordflow">if</span> ( visitor-&gt;<a class="code" href="a00206.xhtml#ad84b4221bdd2cdecbda2fe51ac506bed">VisitEnter</a>( *<span class="keyword">this</span> ) ) {</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">const</span> <a class="code" href="a00201.xhtml">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>(); node; node=node-&gt;<a class="code" href="a00201.xhtml#aee7c15f0bf3bdc684fda87d584356c1b">NextSibling</a>() ) {</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            <span class="keywordflow">if</span> ( !node-&gt;Accept( visitor ) ) {</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            }</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        }</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    }</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keywordflow">return</span> visitor-&gt;<a class="code" href="a00206.xhtml#a164c7fc45b4799c5d850571780deeb0a">VisitExit</a>( *<span class="keyword">this</span> );</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;}</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment">// --------- XMLNode ----------- //</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div>
<div class="line"><a name="l00594"></a><span class="lineno"><a class="line" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">  594</a></span>&#160;<a class="code" href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">XMLNode::XMLNode</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc ) :</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    _document( doc ),</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    _parent( 0 ),</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    _firstChild( 0 ), _lastChild( 0 ),</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    _prev( 0 ), _next( 0 ),</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    _memPool( 0 )</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;{</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;}</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div>
<div class="line"><a name="l00604"></a><span class="lineno"><a class="line" href="a00201.xhtml#a5ce8791c0920489f9df667b0a0264935">  604</a></span>&#160;<a class="code" href="a00201.xhtml#a5ce8791c0920489f9df667b0a0264935">XMLNode::~XMLNode</a>()</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;{</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <a class="code" href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">DeleteChildren</a>();</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> ) {</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>-&gt;<a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    }</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;}</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div>
<div class="line"><a name="l00612"></a><span class="lineno"><a class="line" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">  612</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">XMLNode::Value</a>()<span class="keyword"> const </span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">GetStr</a>();</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;}</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div>
<div class="line"><a name="l00617"></a><span class="lineno"><a class="line" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">  617</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">XMLNode::SetValue</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str, <span class="keywordtype">bool</span> staticMem )</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;{</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keywordflow">if</span> ( staticMem ) {</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a6e89623a22f1dd43bc4037d6fe6487c0">SetInternedStr</a>( str );</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    }</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( str );</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    }</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;}</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div>
<div class="line"><a name="l00628"></a><span class="lineno"><a class="line" href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">  628</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">XMLNode::DeleteChildren</a>()</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;{</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keywordflow">while</span>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> ) {</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> == <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> );</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <a class="code" href="a00201.xhtml">XMLNode</a>* node = <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a>( node );</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    }</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = 0;</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;}</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div>
<div class="line"><a name="l00641"></a><span class="lineno"><a class="line" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">  641</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">XMLNode::Unlink</a>( <a class="code" href="a00201.xhtml">XMLNode</a>* child )</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;{</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( child-&gt;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> == <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> );</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="keywordflow">if</span> ( child == <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> ) {</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    }</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keywordflow">if</span> ( child == <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> ) {</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>;</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    }</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keywordflow">if</span> ( child-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> ) {</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        child-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = child-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    }</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keywordflow">if</span> ( child-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> ) {</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        child-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = child-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;  child-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> = 0;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;}</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div>
<div class="line"><a name="l00661"></a><span class="lineno"><a class="line" href="a00201.xhtml#a28b94200b666def2677964cb83df1569">  661</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00201.xhtml#a28b94200b666def2677964cb83df1569">XMLNode::DeleteChild</a>( <a class="code" href="a00201.xhtml">XMLNode</a>* node )</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;{</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( node-&gt;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> == <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> );</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( node-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> == <span class="keyword">this</span> );</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;}</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div>
<div class="line"><a name="l00669"></a><span class="lineno"><a class="line" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">  669</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">XMLNode::InsertEndChild</a>( <a class="code" href="a00201.xhtml">XMLNode</a>* addThis )</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;{</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <span class="keywordflow">if</span> ( addThis-&gt;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> != <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> ) {</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    }</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;  <span class="keywordflow">if</span> (addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>)</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>-&gt;<a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a>( addThis );</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;     addThis-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a>-&gt;<a class="code" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">SetTracked</a>();</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> ) {</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> );</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> == 0 );</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = addThis;</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = addThis;</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = 0;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    }</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> == 0 );</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = addThis;</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = 0;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = 0;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    }</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordflow">return</span> addThis;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;}</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div>
<div class="line"><a name="l00702"></a><span class="lineno"><a class="line" href="a00201.xhtml#ae7eb7051f843bf705bbcf6551c13fd97">  702</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00201.xhtml#ae7eb7051f843bf705bbcf6551c13fd97">XMLNode::InsertFirstChild</a>( <a class="code" href="a00201.xhtml">XMLNode</a>* addThis )</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;{</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <span class="keywordflow">if</span> ( addThis-&gt;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> != <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> ) {</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    }</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;  <span class="keywordflow">if</span> (addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>)</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>-&gt;<a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a>( addThis );</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;     addThis-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a>-&gt;<a class="code" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">SetTracked</a>();</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> ) {</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> );</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> == 0 );</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = addThis;</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>;</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = addThis;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = 0;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    }</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> == 0 );</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        <a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a> = <a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a> = addThis;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = 0;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = 0;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    }</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <span class="keywordflow">return</span> addThis;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;}</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div>
<div class="line"><a name="l00736"></a><span class="lineno"><a class="line" href="a00201.xhtml#ae27e0da5712dd159e879e2baf07f48db">  736</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00201.xhtml#ae27e0da5712dd159e879e2baf07f48db">XMLNode::InsertAfterChild</a>( <a class="code" href="a00201.xhtml">XMLNode</a>* afterThis, <a class="code" href="a00201.xhtml">XMLNode</a>* addThis )</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;{</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( addThis );</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keywordflow">if</span> ( addThis-&gt;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> != <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> ) {</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    }</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( afterThis );</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="keywordflow">if</span> ( afterThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> != <span class="keyword">this</span> ) {</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <span class="keyword">false</span> );</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    }</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keywordflow">if</span> ( afterThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> == 0 ) {</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        <span class="comment">// The last node or the only node.</span></div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">InsertEndChild</a>( addThis );</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    }</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;  <span class="keywordflow">if</span> (addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>)</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a>-&gt;<a class="code" href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">Unlink</a>( addThis );</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;     addThis-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a>-&gt;<a class="code" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">SetTracked</a>();</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = afterThis;</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = afterThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>;</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    afterThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> = addThis;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    afterThis-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> = addThis;</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    addThis-&gt;<a class="code" href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">_parent</a> = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="keywordflow">return</span> addThis;</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;}</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div>
<div class="line"><a name="l00770"></a><span class="lineno"><a class="line" href="a00201.xhtml#a86cc8875788543eee38da2b8f35efabc">  770</a></span>&#160;<span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* <a class="code" href="a00201.xhtml#a86cc8875788543eee38da2b8f35efabc">XMLNode::FirstChildElement</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">_firstChild</a>; node; node=node-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> ) {</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        <a class="code" href="a00199.xhtml">XMLElement</a>* element = node-&gt;<a class="code" href="a00199.xhtml#a6ab4f6a3ad156db7daab35c9218d9f4a">ToElement</a>();</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <span class="keywordflow">if</span> ( element ) {</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            <span class="keywordflow">if</span> ( !value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( element-&gt;<a class="code" href="a00199.xhtml#afd22b33b33e7128f217f96ec5b2f1871">Name</a>(), value ) ) {</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            }</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        }</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    }</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;}</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div>
<div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="a00201.xhtml#a8b1ca00b71ef6447eb27f63d81ce548d">  784</a></span>&#160;<span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* <a class="code" href="a00201.xhtml#a8b1ca00b71ef6447eb27f63d81ce548d">XMLNode::LastChildElement</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">_lastChild</a>; node; node=node-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> ) {</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        <a class="code" href="a00199.xhtml">XMLElement</a>* element = node-&gt;<a class="code" href="a00199.xhtml#a6ab4f6a3ad156db7daab35c9218d9f4a">ToElement</a>();</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        <span class="keywordflow">if</span> ( element ) {</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;            <span class="keywordflow">if</span> ( !value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( element-&gt;<a class="code" href="a00199.xhtml#afd22b33b33e7128f217f96ec5b2f1871">Name</a>(), value ) ) {</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            }</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    }</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;}</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div>
<div class="line"><a name="l00798"></a><span class="lineno"><a class="line" href="a00201.xhtml#aa4c176052f5724527a78f403b4e507ee">  798</a></span>&#160;<span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* <a class="code" href="a00201.xhtml#aa4c176052f5724527a78f403b4e507ee">XMLNode::NextSiblingElement</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml">XMLNode</a>* node=this-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a>; node; node = node-&gt;<a class="code" href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">_next</a> ) {</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;        <span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* element = node-&gt;<a class="code" href="a00199.xhtml#a6ab4f6a3ad156db7daab35c9218d9f4a">ToElement</a>();</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        <span class="keywordflow">if</span> ( element</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                &amp;&amp; (!value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( value, node-&gt;Value() ))) {</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;        }</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    }</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;}</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div>
<div class="line"><a name="l00811"></a><span class="lineno"><a class="line" href="a00201.xhtml#acd44b243b52240d10cb875ee2a36eb01">  811</a></span>&#160;<span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* <a class="code" href="a00201.xhtml#acd44b243b52240d10cb875ee2a36eb01">XMLNode::PreviousSiblingElement</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00201.xhtml">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a>; node; node = node-&gt;<a class="code" href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">_prev</a> ) {</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        <span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* element = node-&gt;<a class="code" href="a00199.xhtml#a6ab4f6a3ad156db7daab35c9218d9f4a">ToElement</a>();</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        <span class="keywordflow">if</span> ( element</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                &amp;&amp; (!value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( value, node-&gt;Value() ))) {</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;            <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        }</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    }</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;}</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div>
<div class="line"><a name="l00824"></a><span class="lineno"><a class="line" href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">  824</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">XMLNode::ParseDeep</a>( <span class="keywordtype">char</span>* p, <a class="code" href="a00133.xhtml">StrPair</a>* parentEnd )</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;{</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="comment">// This is a recursive method, but thinking about it &quot;at the current level&quot;</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <span class="comment">// it is a pretty simple flat list:</span></div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <span class="comment">//    &lt;foo/&gt;</span></div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    <span class="comment">//    &lt;!-- comment --&gt;</span></div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="comment">// With a special case:</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="comment">//    &lt;foo&gt;</span></div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="comment">//    &lt;/foo&gt;</span></div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="comment">//    &lt;!-- comment --&gt;</span></div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="comment">// Where the closing element (/foo) *must* be the next thing after the opening</span></div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    <span class="comment">// element, and the names must match. BUT the tricky bit is that the closing</span></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <span class="comment">// element will be read by the child.</span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="comment">// &#39;endTag&#39; is the end tag for this node, it is returned by a call to a child.</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="comment">// &#39;parentEnd&#39; is the end tag for the parent, which is filled in and returned.</span></div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    <span class="keywordflow">while</span>( p &amp;&amp; *p ) {</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;        <a class="code" href="a00201.xhtml">XMLNode</a>* node = 0;</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;        p = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a0a09219933989db01f4e0cff84ce5af2">Identify</a>( p, &amp;node );</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="keywordflow">if</span> ( p == 0 || node == 0 ) {</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        }</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;        <a class="code" href="a00133.xhtml">StrPair</a> endTag;</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        p = node-&gt;<a class="code" href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">ParseDeep</a>( p, &amp;endTag );</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        <span class="keywordflow">if</span> ( !p ) {</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;            <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;            node = 0;</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;            <span class="keywordflow">if</span> ( !<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a8302f8ca7f1ed6dd2690e3875f968a32">Error</a>() ) {</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a9bbf02bb29585a521dbf9335152d0ba7">XML_ERROR_PARSING</a>, 0, 0 );</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;            }</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        }</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;        <a class="code" href="a00199.xhtml">XMLElement</a>* ele = node-&gt;<a class="code" href="a00201.xhtml#a2ef2c6efbc6c9c76767770160d2d123d">ToElement</a>();</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;        <span class="comment">// We read the end tag. Return it to the parent.</span></div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keywordflow">if</span> ( ele &amp;&amp; ele-&gt;<a class="code" href="a00199.xhtml#a66fb22f8dcc79b96229572b2149e22d8">ClosingType</a>() == <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51aaae91bf4fc3fb41663442b35cdc82c20">XMLElement::CLOSING</a> ) {</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;            <span class="keywordflow">if</span> ( parentEnd ) {</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                ele-&gt;<a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#aa49c81c2847e30ec02d2cb971de60eab">TransferTo</a>( parentEnd );</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;            }</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;      node-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a>-&gt;<a class="code" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">SetTracked</a>(); <span class="comment">// created and then immediately deleted.</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;            <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;            <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        }</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        <span class="comment">// Handle an end tag returned to this level.</span></div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;        <span class="comment">// And handle a bunch of annoying errors.</span></div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;        <span class="keywordflow">if</span> ( ele ) {</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;            <span class="keywordtype">bool</span> mismatch = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;            <span class="keywordflow">if</span> ( endTag.<a class="code" href="a00133.xhtml#a1afb202191668ec8e922e875c35c8c94">Empty</a>() &amp;&amp; ele-&gt;<a class="code" href="a00199.xhtml#a66fb22f8dcc79b96229572b2149e22d8">ClosingType</a>() == <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8">XMLElement::OPEN</a> ) {</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                mismatch = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;            }</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( !endTag.<a class="code" href="a00133.xhtml#a1afb202191668ec8e922e875c35c8c94">Empty</a>() &amp;&amp; ele-&gt;<a class="code" href="a00199.xhtml#a66fb22f8dcc79b96229572b2149e22d8">ClosingType</a>() != <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8">XMLElement::OPEN</a> ) {</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                mismatch = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;            }</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( !endTag.<a class="code" href="a00133.xhtml#a1afb202191668ec8e922e875c35c8c94">Empty</a>() ) {</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                <span class="keywordflow">if</span> ( !<a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( endTag.<a class="code" href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">GetStr</a>(), node-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() )) {</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                    mismatch = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                }</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;            }</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;            <span class="keywordflow">if</span> ( mismatch ) {</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;                <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656af3965a4eac450a47610fa349ff13ef53">XML_ERROR_MISMATCHED_ELEMENT</a>, node-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>(), 0 );</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;                p = 0;</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;            }</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        }</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;        <span class="keywordflow">if</span> ( p == 0 ) {</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;            <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">DeleteNode</a>( node );</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;            node = 0;</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        }</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;        <span class="keywordflow">if</span> ( node ) {</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;            this-&gt;<a class="code" href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">InsertEndChild</a>( node );</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;        }</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    }</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;}</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;</div>
<div class="line"><a name="l00904"></a><span class="lineno"><a class="line" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">  904</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">XMLNode::DeleteNode</a>( <a class="code" href="a00201.xhtml">XMLNode</a>* node )</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;{</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    <span class="keywordflow">if</span> ( node == 0 ) {</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    }</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    <a class="code" href="a00098.xhtml">MemPool</a>* pool = node-&gt;<a class="code" href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">_memPool</a>;</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    node-&gt;<a class="code" href="a00201.xhtml#a5ce8791c0920489f9df667b0a0264935">~XMLNode</a>();</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    pool-&gt;<a class="code" href="a00098.xhtml#af252371f4bf36310d2db949279b5ccf4">Free</a>( node );</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;}</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="comment">// --------- XMLText ---------- //</span></div>
<div class="line"><a name="l00915"></a><span class="lineno"><a class="line" href="a00203.xhtml#a48075a5d36447886eef9bb98b4db951d">  915</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00203.xhtml#a48075a5d36447886eef9bb98b4db951d">XMLText::ParseDeep</a>( <span class="keywordtype">char</span>* p, <a class="code" href="a00133.xhtml">StrPair</a>* )</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;{</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* start = p;</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    <span class="keywordflow">if</span> ( this-&gt;<a class="code" href="a00203.xhtml#a98f45fac97f30ec41d7aaa2f4a5fdf17">CData</a>() ) {</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;        p = <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">ParseText</a>( p, <span class="stringliteral">&quot;]]&gt;&quot;</span>, <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa6f9e2d223bcf705cc6487c90d466bf9c">StrPair::NEEDS_NEWLINE_NORMALIZATION</a> );</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;        <span class="keywordflow">if</span> ( !p ) {</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;            <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afc7d9f64eb47f1e1a323b3deef7e9a55">XML_ERROR_PARSING_CDATA</a>, start, 0 );</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        }</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;        <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;    }</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;        <span class="keywordtype">int</span> flags = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a94602229a737b6e7eb7c22149090b2c4">ProcessEntities</a>() ? <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6faf789cc5c76c7eda06466f8b738c79190">StrPair::TEXT_ELEMENT</a> : <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa7c29f15852b4b666bc2aadbe7b3a49bf">StrPair::TEXT_ELEMENT_LEAVE_ENTITIES</a>;</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a997c5acf6ea216de5c7acc6ef5061bf6">WhitespaceMode</a>() == <a class="code" href="a00390.xhtml#ggab7696696807cf77b45c5cc8a44dcd90dae5724ff792095d5c52977294c1925dbe">COLLAPSE_WHITESPACE</a> ) {</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;            flags |= <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fad1d1b61640512c641b60db597bb2edcf">StrPair::COLLAPSE_WHITESPACE</a>;</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;        }</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;        p = <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">ParseText</a>( p, <span class="stringliteral">&quot;&lt;&quot;</span>, flags );</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        <span class="keywordflow">if</span> ( !p ) {</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;            <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab718cc69109159eddde3ead0f4a94bdb">XML_ERROR_PARSING_TEXT</a>, start, 0 );</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;        }</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;        <span class="keywordflow">if</span> ( p &amp;&amp; *p ) {</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;            <span class="keywordflow">return</span> p-1;</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;        }</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    }</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;}</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;</div>
<div class="line"><a name="l00943"></a><span class="lineno"><a class="line" href="a00203.xhtml#a30e358bdfd667629b483d014ed2f92a7">  943</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00203.xhtml#a30e358bdfd667629b483d014ed2f92a7">XMLText::ShallowClone</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc )<span class="keyword"> const</span></div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    <span class="keywordflow">if</span> ( !doc ) {</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;        doc = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>;</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;    }</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    <a class="code" href="a00203.xhtml">XMLText</a>* text = doc-&gt;<a class="code" href="a00198.xhtml#a7d3e915ac54b0b32f72a2a7910225630">NewText</a>( <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() );  <span class="comment">// fixme: this will always allocate memory. Intern?</span></div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    text-&gt;<a class="code" href="a00203.xhtml#a44acb8346adaa28c3ed043a22104b917">SetCData</a>( this-&gt;<a class="code" href="a00203.xhtml#a98f45fac97f30ec41d7aaa2f4a5fdf17">CData</a>() );</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <span class="keywordflow">return</span> text;</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;}</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div>
<div class="line"><a name="l00954"></a><span class="lineno"><a class="line" href="a00203.xhtml#a719ba88474f639c91c13e9f3c3691166">  954</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00203.xhtml#a719ba88474f639c91c13e9f3c3691166">XMLText::ShallowEqual</a>( <span class="keyword">const</span> <a class="code" href="a00201.xhtml">XMLNode</a>* compare )<span class="keyword"> const</span></div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00203.xhtml">XMLText</a>* text = compare-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>();</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;    <span class="keywordflow">return</span> ( text &amp;&amp; <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( text-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>(), <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() ) );</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;}</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div>
<div class="line"><a name="l00961"></a><span class="lineno"><a class="line" href="a00203.xhtml#a0c6715890d2ac6b5972416a02896e1fb">  961</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00203.xhtml#a0c6715890d2ac6b5972416a02896e1fb">XMLText::Accept</a>( <a class="code" href="a00206.xhtml">XMLVisitor</a>* visitor )<span class="keyword"> const</span></div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( visitor );</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;    <span class="keywordflow">return</span> visitor-&gt;<a class="code" href="a00206.xhtml#a4928bf63cf7b06aca54e53c6dd4a017c">Visit</a>( *<span class="keyword">this</span> );</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;}</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="comment">// --------- XMLComment ---------- //</span></div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;</div>
<div class="line"><a name="l00970"></a><span class="lineno"><a class="line" href="a00195.xhtml#a276638861144ec98369f755704911260">  970</a></span>&#160;<a class="code" href="a00195.xhtml#a276638861144ec98369f755704911260">XMLComment::XMLComment</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc ) : <a class="code" href="a00201.xhtml">XMLNode</a>( doc )</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;{</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;}</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div>
<div class="line"><a name="l00975"></a><span class="lineno"><a class="line" href="a00195.xhtml#a606ebc75737f12f2824a69a1813a336a">  975</a></span>&#160;<a class="code" href="a00195.xhtml#a606ebc75737f12f2824a69a1813a336a">XMLComment::~XMLComment</a>()</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;{</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;}</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div>
<div class="line"><a name="l00980"></a><span class="lineno"><a class="line" href="a00195.xhtml#a15a0eddf7fc540c4d5a3dbed6cb7e8b6">  980</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00195.xhtml#a15a0eddf7fc540c4d5a3dbed6cb7e8b6">XMLComment::ParseDeep</a>( <span class="keywordtype">char</span>* p, <a class="code" href="a00133.xhtml">StrPair</a>* )</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;{</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;    <span class="comment">// Comment parses as text.</span></div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* start = p;</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;    p = <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">ParseText</a>( p, <span class="stringliteral">&quot;--&gt;&quot;</span>, <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa9f1c9c26d13ea5f32bbb10c4e14f6d3b">StrPair::COMMENT</a> );</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    <span class="keywordflow">if</span> ( p == 0 ) {</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;        <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656aa471d625646e3f6add96f21463a3be19">XML_ERROR_PARSING_COMMENT</a>, start, 0 );</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;    }</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;}</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;</div>
<div class="line"><a name="l00992"></a><span class="lineno"><a class="line" href="a00195.xhtml#a71e4d7cfc0349f5eddfa4d8da54908fd">  992</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00195.xhtml#a71e4d7cfc0349f5eddfa4d8da54908fd">XMLComment::ShallowClone</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc )<span class="keyword"> const</span></div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;    <span class="keywordflow">if</span> ( !doc ) {</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;        doc = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>;</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    }</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    <a class="code" href="a00195.xhtml">XMLComment</a>* comment = doc-&gt;<a class="code" href="a00198.xhtml#a2991901a202867cec8de7254273c8b7c">NewComment</a>( <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() ); <span class="comment">// fixme: this will always allocate memory. Intern?</span></div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    <span class="keywordflow">return</span> comment;</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;}</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;</div>
<div class="line"><a name="l01002"></a><span class="lineno"><a class="line" href="a00195.xhtml#a897927b8b91e02f01a9f85bac9c7dec3"> 1002</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00195.xhtml#a897927b8b91e02f01a9f85bac9c7dec3">XMLComment::ShallowEqual</a>( <span class="keyword">const</span> <a class="code" href="a00201.xhtml">XMLNode</a>* compare )<span class="keyword"> const</span></div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( compare );</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00195.xhtml">XMLComment</a>* comment = compare-&gt;<a class="code" href="a00201.xhtml#a1e2c7a0d50f222702e1f2226c175b0c2">ToComment</a>();</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;    <span class="keywordflow">return</span> ( comment &amp;&amp; <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( comment-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>(), <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() ));</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;}</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div>
<div class="line"><a name="l01010"></a><span class="lineno"><a class="line" href="a00195.xhtml#a13d113649df2846da1e2f7c59c417941"> 1010</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00195.xhtml#a13d113649df2846da1e2f7c59c417941">XMLComment::Accept</a>( <a class="code" href="a00206.xhtml">XMLVisitor</a>* visitor )<span class="keyword"> const</span></div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( visitor );</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="keywordflow">return</span> visitor-&gt;<a class="code" href="a00206.xhtml#a4928bf63cf7b06aca54e53c6dd4a017c">Visit</a>( *<span class="keyword">this</span> );</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;}</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;<span class="comment">// --------- XMLDeclaration ---------- //</span></div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;</div>
<div class="line"><a name="l01019"></a><span class="lineno"><a class="line" href="a00197.xhtml#a15e09609a452799cb50fd0cfc233e15c"> 1019</a></span>&#160;<a class="code" href="a00197.xhtml#a15e09609a452799cb50fd0cfc233e15c">XMLDeclaration::XMLDeclaration</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc ) : <a class="code" href="a00201.xhtml">XMLNode</a>( doc )</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;{</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;}</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;</div>
<div class="line"><a name="l01024"></a><span class="lineno"><a class="line" href="a00197.xhtml#a49644cc372095559a185c3b1aea8f193"> 1024</a></span>&#160;<a class="code" href="a00197.xhtml#a49644cc372095559a185c3b1aea8f193">XMLDeclaration::~XMLDeclaration</a>()</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;{</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;    <span class="comment">//printf( &quot;~XMLDeclaration\n&quot; );</span></div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;}</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div>
<div class="line"><a name="l01030"></a><span class="lineno"><a class="line" href="a00197.xhtml#a6e32f30fbdec75b25799ee9b476d9104"> 1030</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00197.xhtml#a6e32f30fbdec75b25799ee9b476d9104">XMLDeclaration::ParseDeep</a>( <span class="keywordtype">char</span>* p, <a class="code" href="a00133.xhtml">StrPair</a>* )</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;{</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    <span class="comment">// Declaration parses as text.</span></div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* start = p;</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    p = <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">ParseText</a>( p, <span class="stringliteral">&quot;?&gt;&quot;</span>, <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa6f9e2d223bcf705cc6487c90d466bf9c">StrPair::NEEDS_NEWLINE_NORMALIZATION</a> );</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    <span class="keywordflow">if</span> ( p == 0 ) {</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;        <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a4bab69fe7f79af66da2525f7594c11ed">XML_ERROR_PARSING_DECLARATION</a>, start, 0 );</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    }</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;}</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;</div>
<div class="line"><a name="l01042"></a><span class="lineno"><a class="line" href="a00197.xhtml#a7d46862e40732a3504f11bedee5c8b88"> 1042</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00197.xhtml#a7d46862e40732a3504f11bedee5c8b88">XMLDeclaration::ShallowClone</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc )<span class="keyword"> const</span></div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <span class="keywordflow">if</span> ( !doc ) {</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;        doc = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>;</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    }</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    <a class="code" href="a00197.xhtml">XMLDeclaration</a>* dec = doc-&gt;<a class="code" href="a00198.xhtml#a949f550ca5a84f18404af5e050626a2e">NewDeclaration</a>( <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() ); <span class="comment">// fixme: this will always allocate memory. Intern?</span></div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    <span class="keywordflow">return</span> dec;</div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;}</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;</div>
<div class="line"><a name="l01052"></a><span class="lineno"><a class="line" href="a00197.xhtml#aa89f796d04ddf4a87cbaaf847df3726f"> 1052</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00197.xhtml#aa89f796d04ddf4a87cbaaf847df3726f">XMLDeclaration::ShallowEqual</a>( <span class="keyword">const</span> <a class="code" href="a00201.xhtml">XMLNode</a>* compare )<span class="keyword"> const</span></div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( compare );</div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00197.xhtml">XMLDeclaration</a>* declaration = compare-&gt;<a class="code" href="a00201.xhtml#a07becef2e0637d530a6109c0c546bdcd">ToDeclaration</a>();</div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;    <span class="keywordflow">return</span> ( declaration &amp;&amp; <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( declaration-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>(), <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() ));</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;}</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;</div>
<div class="line"><a name="l01061"></a><span class="lineno"><a class="line" href="a00197.xhtml#a0fcb8c5402eef454e6c35b4dcceeb938"> 1061</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00197.xhtml#a0fcb8c5402eef454e6c35b4dcceeb938">XMLDeclaration::Accept</a>( <a class="code" href="a00206.xhtml">XMLVisitor</a>* visitor )<span class="keyword"> const</span></div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( visitor );</div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    <span class="keywordflow">return</span> visitor-&gt;<a class="code" href="a00206.xhtml#a4928bf63cf7b06aca54e53c6dd4a017c">Visit</a>( *<span class="keyword">this</span> );</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;}</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;<span class="comment">// --------- XMLUnknown ---------- //</span></div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;</div>
<div class="line"><a name="l01069"></a><span class="lineno"><a class="line" href="a00204.xhtml#a2606af690e60499209f7f45ef1f6f9c3"> 1069</a></span>&#160;<a class="code" href="a00204.xhtml#a2606af690e60499209f7f45ef1f6f9c3">XMLUnknown::XMLUnknown</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc ) : <a class="code" href="a00201.xhtml">XMLNode</a>( doc )</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;{</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;}</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;</div>
<div class="line"><a name="l01074"></a><span class="lineno"><a class="line" href="a00204.xhtml#af73a7cb95fd6d32558912e0d3111d3e2"> 1074</a></span>&#160;<a class="code" href="a00204.xhtml#af73a7cb95fd6d32558912e0d3111d3e2">XMLUnknown::~XMLUnknown</a>()</div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;{</div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;}</div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;</div>
<div class="line"><a name="l01079"></a><span class="lineno"><a class="line" href="a00204.xhtml#a1a9b1c4c1144acbf5c9f8a3b6e4ec55c"> 1079</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00204.xhtml#a1a9b1c4c1144acbf5c9f8a3b6e4ec55c">XMLUnknown::ParseDeep</a>( <span class="keywordtype">char</span>* p, <a class="code" href="a00133.xhtml">StrPair</a>* )</div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;{</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;    <span class="comment">// Unknown parses as text.</span></div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* start = p;</div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    p = <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">ParseText</a>( p, <span class="stringliteral">&quot;&gt;&quot;</span>, <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa6f9e2d223bcf705cc6487c90d466bf9c">StrPair::NEEDS_NEWLINE_NORMALIZATION</a> );</div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    <span class="keywordflow">if</span> ( !p ) {</div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;        <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656affe7fef955419cd2dd3348a3363ce4a1">XML_ERROR_PARSING_UNKNOWN</a>, start, 0 );</div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;    }</div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;}</div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;</div>
<div class="line"><a name="l01092"></a><span class="lineno"><a class="line" href="a00204.xhtml#ad1af7fc04a6ea1ef03430ada735750e5"> 1092</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00204.xhtml#ad1af7fc04a6ea1ef03430ada735750e5">XMLUnknown::ShallowClone</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc )<span class="keyword"> const</span></div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;    <span class="keywordflow">if</span> ( !doc ) {</div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;        doc = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>;</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    }</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    <a class="code" href="a00204.xhtml">XMLUnknown</a>* text = doc-&gt;<a class="code" href="a00198.xhtml#aa8c76e2ecbc64d912bb6c7244ada0d16">NewUnknown</a>( <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() );  <span class="comment">// fixme: this will always allocate memory. Intern?</span></div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    <span class="keywordflow">return</span> text;</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;}</div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;</div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;</div>
<div class="line"><a name="l01102"></a><span class="lineno"><a class="line" href="a00204.xhtml#a3124e27c7380527b71da6ac8956e3c49"> 1102</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00204.xhtml#a3124e27c7380527b71da6ac8956e3c49">XMLUnknown::ShallowEqual</a>( <span class="keyword">const</span> <a class="code" href="a00201.xhtml">XMLNode</a>* compare )<span class="keyword"> const</span></div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( compare );</div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00204.xhtml">XMLUnknown</a>* unknown = compare-&gt;<a class="code" href="a00201.xhtml#a4cb5b246b9cb53405776c36bf67f36c1">ToUnknown</a>();</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;    <span class="keywordflow">return</span> ( unknown &amp;&amp; <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( unknown-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>(), <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() ));</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;}</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;</div>
<div class="line"><a name="l01110"></a><span class="lineno"><a class="line" href="a00204.xhtml#a590ad9fe166b2ad702f8b39bb880847c"> 1110</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00204.xhtml#a590ad9fe166b2ad702f8b39bb880847c">XMLUnknown::Accept</a>( <a class="code" href="a00206.xhtml">XMLVisitor</a>* visitor )<span class="keyword"> const</span></div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( visitor );</div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    <span class="keywordflow">return</span> visitor-&gt;<a class="code" href="a00206.xhtml#a4928bf63cf7b06aca54e53c6dd4a017c">Visit</a>( *<span class="keyword">this</span> );</div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;}</div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<span class="comment">// --------- XMLAttribute ---------- //</span></div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;</div>
<div class="line"><a name="l01118"></a><span class="lineno"><a class="line" href="a00194.xhtml#a8868ecb5debed3389128f2ec29bc399e"> 1118</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00194.xhtml#a8868ecb5debed3389128f2ec29bc399e">XMLAttribute::Name</a>()<span class="keyword"> const </span></div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00194.xhtml#ad243bb7bdbdb8906a211a683a1b7e0e6">_name</a>.<a class="code" href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">GetStr</a>();</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;}</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;</div>
<div class="line"><a name="l01123"></a><span class="lineno"><a class="line" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6"> 1123</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">XMLAttribute::Value</a>()<span class="keyword"> const </span></div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">GetStr</a>();</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;}</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;</div>
<div class="line"><a name="l01128"></a><span class="lineno"><a class="line" href="a00194.xhtml#ab27bee7ca972cfb7b33a57ae150c9f46"> 1128</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00194.xhtml#ab27bee7ca972cfb7b33a57ae150c9f46">XMLAttribute::ParseDeep</a>( <span class="keywordtype">char</span>* p, <span class="keywordtype">bool</span> processEntities )</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;{</div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    <span class="comment">// Parse using the name rules: bug fix, was using ParseText before</span></div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    p = <a class="code" href="a00194.xhtml#ad243bb7bdbdb8906a211a683a1b7e0e6">_name</a>.<a class="code" href="a00133.xhtml#a323f7549e32dd8102eafc04a748041fc">ParseName</a>( p );</div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    <span class="keywordflow">if</span> ( !p || !*p ) {</div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    }</div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;</div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <span class="comment">// Skip white space before =</span></div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;    p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    <span class="keywordflow">if</span> ( !p || *p != <span class="charliteral">&#39;=&#39;</span> ) {</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;    }</div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;</div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    ++p;  <span class="comment">// move up to opening quote</span></div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;    p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;    <span class="keywordflow">if</span> ( *p != <span class="charliteral">&#39;\&quot;&#39;</span> &amp;&amp; *p != <span class="charliteral">&#39;\&#39;&#39;</span> ) {</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;    }</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;</div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;    <span class="keywordtype">char</span> endTag[2] = { *p, 0 };</div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;    ++p;  <span class="comment">// move past opening quote</span></div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;    p = <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">ParseText</a>( p, endTag, processEntities ? <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6faf48fdb62d5cb241b0b013df44a9e5243">StrPair::ATTRIBUTE_VALUE</a> : <a class="code" href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fac41926a45405298c40a3c98b0037502f">StrPair::ATTRIBUTE_VALUE_LEAVE_ENTITIES</a> );</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;}</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;</div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;</div>
<div class="line"><a name="l01156"></a><span class="lineno"><a class="line" href="a00194.xhtml#ac93d475679bf1fb3e46418c012f238eb"> 1156</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00194.xhtml#ac93d475679bf1fb3e46418c012f238eb">XMLAttribute::SetName</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* n )</div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;{</div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <a class="code" href="a00194.xhtml#ad243bb7bdbdb8906a211a683a1b7e0e6">_name</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( n );</div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;}</div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;</div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;</div>
<div class="line"><a name="l01162"></a><span class="lineno"><a class="line" href="a00194.xhtml#aeb3f40e5032781658289c543a24a25c1"> 1162</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00194.xhtml#aeb3f40e5032781658289c543a24a25c1">XMLAttribute::QueryIntValue</a>( <span class="keywordtype">int</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#ab788174893c461fa399fc0ee05b75f4c">XMLUtil::ToInt</a>( <a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>(), value )) {</div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">XML_NO_ERROR</a>;</div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    }</div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a891d7a199688dc9deb7781f8bd5500b5">XML_WRONG_ATTRIBUTE_TYPE</a>;</div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;}</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;</div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;</div>
<div class="line"><a name="l01171"></a><span class="lineno"><a class="line" href="a00194.xhtml#a3bb8836bee3c3c3e2414d79020fdc027"> 1171</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00194.xhtml#a3bb8836bee3c3c3e2414d79020fdc027">XMLAttribute::QueryUnsignedValue</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a843346320dbd62a317a34b25cafb1ba1">XMLUtil::ToUnsigned</a>( <a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>(), value )) {</div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">XML_NO_ERROR</a>;</div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    }</div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a891d7a199688dc9deb7781f8bd5500b5">XML_WRONG_ATTRIBUTE_TYPE</a>;</div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;}</div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;</div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;</div>
<div class="line"><a name="l01180"></a><span class="lineno"><a class="line" href="a00194.xhtml#a63c839cfa95b0a88bdace75571e2e061"> 1180</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00194.xhtml#a63c839cfa95b0a88bdace75571e2e061">XMLAttribute::QueryBoolValue</a>( <span class="keywordtype">bool</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a25dd8394af7cc2735c3b08c4613d401a">XMLUtil::ToBool</a>( <a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>(), value )) {</div>
<div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">XML_NO_ERROR</a>;</div>
<div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;    }</div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a891d7a199688dc9deb7781f8bd5500b5">XML_WRONG_ATTRIBUTE_TYPE</a>;</div>
<div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;}</div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div>
<div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;</div>
<div class="line"><a name="l01189"></a><span class="lineno"><a class="line" href="a00194.xhtml#a4037788a612e1acac4e806ae917bce65"> 1189</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00194.xhtml#a4037788a612e1acac4e806ae917bce65">XMLAttribute::QueryFloatValue</a>( <span class="keywordtype">float</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a4f28848a9d313016991adc7d0581458e">XMLUtil::ToFloat</a>( <a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>(), value )) {</div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">XML_NO_ERROR</a>;</div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    }</div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a891d7a199688dc9deb7781f8bd5500b5">XML_WRONG_ATTRIBUTE_TYPE</a>;</div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;}</div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;</div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;</div>
<div class="line"><a name="l01198"></a><span class="lineno"><a class="line" href="a00194.xhtml#a37effab97ca5300dacdec6ca00a04ad3"> 1198</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00194.xhtml#a37effab97ca5300dacdec6ca00a04ad3">XMLAttribute::QueryDoubleValue</a>( <span class="keywordtype">double</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a1e45f8b533ef3584a8afbd1cbe31ca1f">XMLUtil::ToDouble</a>( <a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>(), value )) {</div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">XML_NO_ERROR</a>;</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    }</div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a891d7a199688dc9deb7781f8bd5500b5">XML_WRONG_ATTRIBUTE_TYPE</a>;</div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;}</div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;</div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;</div>
<div class="line"><a name="l01207"></a><span class="lineno"><a class="line" href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6"> 1207</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6">XMLAttribute::SetAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* v )</div>
<div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;{</div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( v );</div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;}</div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;</div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;</div>
<div class="line"><a name="l01213"></a><span class="lineno"><a class="line" href="a00194.xhtml#a61820f26ac13db5c757a7191f316a335"> 1213</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6">XMLAttribute::SetAttribute</a>( <span class="keywordtype">int</span> v )</div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;{</div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a>];</div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a> );</div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( buf );</div>
<div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;}</div>
<div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;</div>
<div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;</div>
<div class="line"><a name="l01221"></a><span class="lineno"><a class="line" href="a00194.xhtml#a177919528ad75b8c82badb65bf28c38a"> 1221</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6">XMLAttribute::SetAttribute</a>( <span class="keywordtype">unsigned</span> v )</div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;{</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a>];</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a> );</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;    <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( buf );</div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;}</div>
<div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div>
<div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;</div>
<div class="line"><a name="l01229"></a><span class="lineno"><a class="line" href="a00194.xhtml#a432254818ab4ea95f5bacc512f9991fa"> 1229</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6">XMLAttribute::SetAttribute</a>( <span class="keywordtype">bool</span> v )</div>
<div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;{</div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a>];</div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a> );</div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;    <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( buf );</div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;}</div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;</div>
<div class="line"><a name="l01236"></a><span class="lineno"><a class="line" href="a00194.xhtml#aff03cceda6274cf377c71d670a0cef2a"> 1236</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6">XMLAttribute::SetAttribute</a>( <span class="keywordtype">double</span> v )</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;{</div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a>];</div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a> );</div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;    <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( buf );</div>
<div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;}</div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;</div>
<div class="line"><a name="l01243"></a><span class="lineno"><a class="line" href="a00194.xhtml#ae1fadb0009312e7a893ae03853fac7c1"> 1243</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6">XMLAttribute::SetAttribute</a>( <span class="keywordtype">float</span> v )</div>
<div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;{</div>
<div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a>];</div>
<div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">BUF_SIZE</a> );</div>
<div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    <a class="code" href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">_value</a>.<a class="code" href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">SetStr</a>( buf );</div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;}</div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;</div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;</div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;<span class="comment">// --------- XMLElement ---------- //</span></div>
<div class="line"><a name="l01252"></a><span class="lineno"><a class="line" href="a00199.xhtml#a0470fdbcbb2a16f10479b1d23d772225"> 1252</a></span>&#160;<a class="code" href="a00199.xhtml#a0470fdbcbb2a16f10479b1d23d772225">XMLElement::XMLElement</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc ) : <a class="code" href="a00201.xhtml">XMLNode</a>( doc ),</div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;    _closingType( 0 ),</div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    _rootAttribute( 0 )</div>
<div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;{</div>
<div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;}</div>
<div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;</div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;</div>
<div class="line"><a name="l01259"></a><span class="lineno"><a class="line" href="a00199.xhtml#a655693477d6d7dcf4d075b2bc1d21f13"> 1259</a></span>&#160;<a class="code" href="a00199.xhtml#a655693477d6d7dcf4d075b2bc1d21f13">XMLElement::~XMLElement</a>()</div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;{</div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    <span class="keywordflow">while</span>( <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a> ) {</div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;        <a class="code" href="a00194.xhtml">XMLAttribute</a>* next = <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a>-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a>;</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;        <a class="code" href="a00199.xhtml#a9d2265e20a35a0471088c8fc33289583">DeleteAttribute</a>( <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a> );</div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;        <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a> = next;</div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    }</div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;}</div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;</div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;</div>
<div class="line"><a name="l01269"></a><span class="lineno"><a class="line" href="a00199.xhtml#a6461265b324c3901b5d83d51e9560693"> 1269</a></span>&#160;<span class="keyword">const</span> <a class="code" href="a00194.xhtml">XMLAttribute</a>* <a class="code" href="a00199.xhtml#a6461265b324c3901b5d83d51e9560693">XMLElement::FindAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name )<span class="keyword"> const</span></div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00194.xhtml">XMLAttribute</a>* a = <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a>; a; a = a-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a> ) {</div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( a-&gt;Name(), name ) ) {</div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;            <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;        }</div>
<div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    }</div>
<div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;}</div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;</div>
<div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;</div>
<div class="line"><a name="l01280"></a><span class="lineno"><a class="line" href="a00199.xhtml#a824774b2d0c2b797d028a5e2434d3759"> 1280</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00199.xhtml#a824774b2d0c2b797d028a5e2434d3759">XMLElement::Attribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* value )<span class="keyword"> const</span></div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00194.xhtml">XMLAttribute</a>* a = <a class="code" href="a00199.xhtml#a6461265b324c3901b5d83d51e9560693">FindAttribute</a>( name );</div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    <span class="keywordflow">if</span> ( !a ) {</div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;    }</div>
<div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;    <span class="keywordflow">if</span> ( !value || <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( a-&gt;<a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>(), value )) {</div>
<div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;        <span class="keywordflow">return</span> a-&gt;<a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>();</div>
<div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;    }</div>
<div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;}</div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;</div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;</div>
<div class="line"><a name="l01293"></a><span class="lineno"><a class="line" href="a00199.xhtml#ad9a87e90db7a84d4ad66318717e0ec11"> 1293</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00199.xhtml#ad9a87e90db7a84d4ad66318717e0ec11">XMLElement::GetText</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>() &amp;&amp; <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>() ) {</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>();</div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;    }</div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;}</div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;</div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;</div>
<div class="line"><a name="l01302"></a><span class="lineno"><a class="line" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc"> 1302</a></span>&#160;<span class="keywordtype">void</span>  <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">XMLElement::SetText</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* inText )</div>
<div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;{</div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;  <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>() &amp;&amp; <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>() )</div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;    <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">SetValue</a>( inText );</div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;  <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    <a class="code" href="a00203.xhtml">XMLText</a>*  theText = <a class="code" href="a00201.xhtml#ab5c744e506654df019e2794c5dd25699">GetDocument</a>()-&gt;<a class="code" href="a00198.xhtml#a7d3e915ac54b0b32f72a2a7910225630">NewText</a>( inText );</div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;    <a class="code" href="a00201.xhtml#ae7eb7051f843bf705bbcf6551c13fd97">InsertFirstChild</a>( theText );</div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;  }</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;}</div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;</div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;</div>
<div class="line"><a name="l01313"></a><span class="lineno"><a class="line" href="a00199.xhtml#aa6a50c3d5d452ce300212dac850d3a2c"> 1313</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">XMLElement::SetText</a>( <span class="keywordtype">int</span> v ) </div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;{</div>
<div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a>];</div>
<div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a> );</div>
<div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;    <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">SetText</a>( buf );</div>
<div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;}</div>
<div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;</div>
<div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;</div>
<div class="line"><a name="l01321"></a><span class="lineno"><a class="line" href="a00199.xhtml#a7aed83dc0c2e3006a7f27caabbf9ca24"> 1321</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">XMLElement::SetText</a>( <span class="keywordtype">unsigned</span> v ) </div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;{</div>
<div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a>];</div>
<div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a> );</div>
<div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;    <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">SetText</a>( buf );</div>
<div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;}</div>
<div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;</div>
<div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;</div>
<div class="line"><a name="l01329"></a><span class="lineno"><a class="line" href="a00199.xhtml#a1338512f2c6193b6eaf6abe2d045f706"> 1329</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">XMLElement::SetText</a>( <span class="keywordtype">bool</span> v ) </div>
<div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;{</div>
<div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a>];</div>
<div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a> );</div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">SetText</a>( buf );</div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;}</div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;</div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;</div>
<div class="line"><a name="l01337"></a><span class="lineno"><a class="line" href="a00199.xhtml#a99819b5760fff48d125f5a01d64eb042"> 1337</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">XMLElement::SetText</a>( <span class="keywordtype">float</span> v ) </div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;{</div>
<div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a>];</div>
<div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a> );</div>
<div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;    <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">SetText</a>( buf );</div>
<div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;}</div>
<div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;</div>
<div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;</div>
<div class="line"><a name="l01345"></a><span class="lineno"><a class="line" href="a00199.xhtml#a57e626be0252959a75d761fffc85fbb9"> 1345</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">XMLElement::SetText</a>( <span class="keywordtype">double</span> v ) </div>
<div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;{</div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a>];</div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">BUF_SIZE</a> );</div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;    <a class="code" href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">SetText</a>( buf );</div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;}</div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;</div>
<div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;</div>
<div class="line"><a name="l01353"></a><span class="lineno"><a class="line" href="a00199.xhtml#a079b02a944021267fd0109fd78bad905"> 1353</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00199.xhtml#a079b02a944021267fd0109fd78bad905">XMLElement::QueryIntText</a>( <span class="keywordtype">int</span>* ival )<span class="keyword"> const</span></div>
<div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>() &amp;&amp; <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>() ) {</div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* t = <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>();</div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#ab788174893c461fa399fc0ee05b75f4c">XMLUtil::ToInt</a>( t, ival ) ) {</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a7542914b1cfe6e38ab7bf720eaf129a3">XML_SUCCESS</a>;</div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;        }</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab9e93ad21487f1de9410e1616e378c77">XML_CAN_NOT_CONVERT_TEXT</a>;</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;    }</div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a0206e4b52a4d2f499a8485701f037017">XML_NO_TEXT_NODE</a>;</div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;}</div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;</div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;</div>
<div class="line"><a name="l01366"></a><span class="lineno"><a class="line" href="a00199.xhtml#a4a5e98979332d1a44f7bf646d5893f3b"> 1366</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00199.xhtml#a4a5e98979332d1a44f7bf646d5893f3b">XMLElement::QueryUnsignedText</a>( <span class="keywordtype">unsigned</span>* uval )<span class="keyword"> const</span></div>
<div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>() &amp;&amp; <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>() ) {</div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* t = <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>();</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a843346320dbd62a317a34b25cafb1ba1">XMLUtil::ToUnsigned</a>( t, uval ) ) {</div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a7542914b1cfe6e38ab7bf720eaf129a3">XML_SUCCESS</a>;</div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;        }</div>
<div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab9e93ad21487f1de9410e1616e378c77">XML_CAN_NOT_CONVERT_TEXT</a>;</div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    }</div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a0206e4b52a4d2f499a8485701f037017">XML_NO_TEXT_NODE</a>;</div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;}</div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;</div>
<div class="line"><a name="l01379"></a><span class="lineno"><a class="line" href="a00199.xhtml#af5d64f466a0b18f38183e4e9437bd5bd"> 1379</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00199.xhtml#af5d64f466a0b18f38183e4e9437bd5bd">XMLElement::QueryBoolText</a>( <span class="keywordtype">bool</span>* bval )<span class="keyword"> const</span></div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>() &amp;&amp; <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>() ) {</div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* t = <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>();</div>
<div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a25dd8394af7cc2735c3b08c4613d401a">XMLUtil::ToBool</a>( t, bval ) ) {</div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a7542914b1cfe6e38ab7bf720eaf129a3">XML_SUCCESS</a>;</div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;        }</div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab9e93ad21487f1de9410e1616e378c77">XML_CAN_NOT_CONVERT_TEXT</a>;</div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    }</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a0206e4b52a4d2f499a8485701f037017">XML_NO_TEXT_NODE</a>;</div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;}</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;</div>
<div class="line"><a name="l01392"></a><span class="lineno"><a class="line" href="a00199.xhtml#a5cb3327503417ee863296973b0e7c77f"> 1392</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00199.xhtml#a5cb3327503417ee863296973b0e7c77f">XMLElement::QueryDoubleText</a>( <span class="keywordtype">double</span>* dval )<span class="keyword"> const</span></div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>() &amp;&amp; <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>() ) {</div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* t = <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>();</div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a1e45f8b533ef3584a8afbd1cbe31ca1f">XMLUtil::ToDouble</a>( t, dval ) ) {</div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a7542914b1cfe6e38ab7bf720eaf129a3">XML_SUCCESS</a>;</div>
<div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;        }</div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab9e93ad21487f1de9410e1616e378c77">XML_CAN_NOT_CONVERT_TEXT</a>;</div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;    }</div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a0206e4b52a4d2f499a8485701f037017">XML_NO_TEXT_NODE</a>;</div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;}</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;</div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;</div>
<div class="line"><a name="l01405"></a><span class="lineno"><a class="line" href="a00199.xhtml#adc21c65d535a3b4a741f18969e961c92"> 1405</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00199.xhtml#adc21c65d535a3b4a741f18969e961c92">XMLElement::QueryFloatText</a>( <span class="keywordtype">float</span>* fval )<span class="keyword"> const</span></div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>() &amp;&amp; <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">ToText</a>() ) {</div>
<div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* t = <a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>()-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>();</div>
<div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#a4f28848a9d313016991adc7d0581458e">XMLUtil::ToFloat</a>( t, fval ) ) {</div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a7542914b1cfe6e38ab7bf720eaf129a3">XML_SUCCESS</a>;</div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;        }</div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab9e93ad21487f1de9410e1616e378c77">XML_CAN_NOT_CONVERT_TEXT</a>;</div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;    }</div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a0206e4b52a4d2f499a8485701f037017">XML_NO_TEXT_NODE</a>;</div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;}</div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;</div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;</div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;</div>
<div class="line"><a name="l01419"></a><span class="lineno"><a class="line" href="a00199.xhtml#aba98ff0fab1bf13625988d0f2e3afa57"> 1419</a></span>&#160;<a class="code" href="a00194.xhtml">XMLAttribute</a>* <a class="code" href="a00199.xhtml#aba98ff0fab1bf13625988d0f2e3afa57">XMLElement::FindOrCreateAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name )</div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;{</div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;    <a class="code" href="a00194.xhtml">XMLAttribute</a>* last = 0;</div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;    <a class="code" href="a00194.xhtml">XMLAttribute</a>* attrib = 0;</div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;    <span class="keywordflow">for</span>( attrib = <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a>;</div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;            attrib;</div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;            last = attrib, attrib = attrib-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a> ) {</div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( attrib-&gt;Name(), name ) ) {</div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;        }</div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;    }</div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;    <span class="keywordflow">if</span> ( !attrib ) {</div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;        attrib = <span class="keyword">new</span> (<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>.Alloc() ) <a class="code" href="a00194.xhtml">XMLAttribute</a>();</div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;        attrib-&gt;<a class="code" href="a00194.xhtml#a107532e7652ca2f5a425da8ef22ee5c1">_memPool</a> = &amp;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>;</div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;        <span class="keywordflow">if</span> ( last ) {</div>
<div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;            last-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a> = attrib;</div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;        }</div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;            <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a> = attrib;</div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;        }</div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;        attrib-&gt;<a class="code" href="a00194.xhtml#ac93d475679bf1fb3e46418c012f238eb">SetName</a>( name );</div>
<div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;        attrib-&gt;_memPool-&gt;SetTracked(); <span class="comment">// always created and linked.</span></div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;    }</div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;    <span class="keywordflow">return</span> attrib;</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;}</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;</div>
<div class="line"><a name="l01446"></a><span class="lineno"><a class="line" href="a00199.xhtml#a9d2265e20a35a0471088c8fc33289583"> 1446</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00199.xhtml#a9d2265e20a35a0471088c8fc33289583">XMLElement::DeleteAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name )</div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;{</div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;    <a class="code" href="a00194.xhtml">XMLAttribute</a>* prev = 0;</div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    <span class="keywordflow">for</span>( <a class="code" href="a00194.xhtml">XMLAttribute</a>* a=<a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a>; a; a=a-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a> ) {</div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( name, a-&gt;Name() ) ) {</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;            <span class="keywordflow">if</span> ( prev ) {</div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;                prev-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a> = a-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a>;</div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;            }</div>
<div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;                <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a> = a-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a>;</div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;            }</div>
<div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;            <a class="code" href="a00199.xhtml#a9d2265e20a35a0471088c8fc33289583">DeleteAttribute</a>( a );</div>
<div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;        }</div>
<div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;        prev = a;</div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;    }</div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;}</div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;</div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;</div>
<div class="line"><a name="l01465"></a><span class="lineno"><a class="line" href="a00199.xhtml#a2b7dddea778d54aa6a213abed7ef7ab7"> 1465</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00199.xhtml#a2b7dddea778d54aa6a213abed7ef7ab7">XMLElement::ParseAttributes</a>( <span class="keywordtype">char</span>* p )</div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;{</div>
<div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* start = p;</div>
<div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;    <a class="code" href="a00194.xhtml">XMLAttribute</a>* prevAttribute = 0;</div>
<div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;</div>
<div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;    <span class="comment">// Read the attributes.</span></div>
<div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;    <span class="keywordflow">while</span>( p ) {</div>
<div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;        p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;        <span class="keywordflow">if</span> ( !p || !(*p) ) {</div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;            <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a3d56d517ab199286c2813b9d29e867b1">XML_ERROR_PARSING_ELEMENT</a>, start, <a class="code" href="a00199.xhtml#afd22b33b33e7128f217f96ec5b2f1871">Name</a>() );</div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;        }</div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;</div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;        <span class="comment">// attribute.</span></div>
<div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="a00205.xhtml#adc18aa919e561a1b17677bbc6ff30702">XMLUtil::IsNameStartChar</a>( *p ) ) {</div>
<div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;            <a class="code" href="a00194.xhtml">XMLAttribute</a>* attrib = <span class="keyword">new</span> (<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>.Alloc() ) <a class="code" href="a00194.xhtml">XMLAttribute</a>();</div>
<div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;            attrib-&gt;<a class="code" href="a00194.xhtml#a107532e7652ca2f5a425da8ef22ee5c1">_memPool</a> = &amp;<a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>;</div>
<div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;      attrib-&gt;<a class="code" href="a00194.xhtml#a107532e7652ca2f5a425da8ef22ee5c1">_memPool</a>-&gt;<a class="code" href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">SetTracked</a>();</div>
<div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;</div>
<div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;            p = attrib-&gt;<a class="code" href="a00194.xhtml#ab27bee7ca972cfb7b33a57ae150c9f46">ParseDeep</a>( p, <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a94602229a737b6e7eb7c22149090b2c4">ProcessEntities</a>() );</div>
<div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;            <span class="keywordflow">if</span> ( !p || <a class="code" href="a00199.xhtml#a824774b2d0c2b797d028a5e2434d3759">Attribute</a>( attrib-&gt;<a class="code" href="a00194.xhtml#a8868ecb5debed3389128f2ec29bc399e">Name</a>() ) ) {</div>
<div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;                <a class="code" href="a00199.xhtml#a9d2265e20a35a0471088c8fc33289583">DeleteAttribute</a>( attrib );</div>
<div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;                <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a146fe71576e510ef924ddfb36a0987cd">XML_ERROR_PARSING_ATTRIBUTE</a>, start, p );</div>
<div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;            }</div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;            <span class="comment">// There is a minor bug here: if the attribute in the source xml</span></div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;            <span class="comment">// document is duplicated, it will not be detected and the</span></div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;            <span class="comment">// attribute will be doubly added. However, tracking the &#39;prevAttribute&#39;</span></div>
<div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;            <span class="comment">// avoids re-scanning the attribute list. Preferring performance for</span></div>
<div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;            <span class="comment">// now, may reconsider in the future.</span></div>
<div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;            <span class="keywordflow">if</span> ( prevAttribute ) {</div>
<div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;                prevAttribute-&gt;<a class="code" href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">_next</a> = attrib;</div>
<div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;            }</div>
<div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;                <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a> = attrib;</div>
<div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;            }</div>
<div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;            prevAttribute = attrib;</div>
<div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;        }</div>
<div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;        <span class="comment">// end of the tag</span></div>
<div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( *p == <span class="charliteral">&#39;/&#39;</span> &amp;&amp; *(p+1) == <span class="charliteral">&#39;&gt;&#39;</span> ) {</div>
<div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;            <a class="code" href="a00199.xhtml#a67fe3c235bdf597abb2b2c1287135c73">_closingType</a> = <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a72084691e795117a916689a4d166e7a9">CLOSED</a>;</div>
<div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;            <span class="keywordflow">return</span> p+2; <span class="comment">// done; sealed element.</span></div>
<div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;        }</div>
<div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;        <span class="comment">// end of the tag</span></div>
<div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( *p == <span class="charliteral">&#39;&gt;&#39;</span> ) {</div>
<div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;            ++p;</div>
<div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;        }</div>
<div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;            <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>-&gt;<a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a3d56d517ab199286c2813b9d29e867b1">XML_ERROR_PARSING_ELEMENT</a>, start, p );</div>
<div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;        }</div>
<div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;    }</div>
<div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;}</div>
<div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;</div>
<div class="line"><a name="l01521"></a><span class="lineno"><a class="line" href="a00199.xhtml#a91a2451954d4cf065289f9f485679cb8"> 1521</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00199.xhtml#a9d2265e20a35a0471088c8fc33289583">XMLElement::DeleteAttribute</a>( <a class="code" href="a00194.xhtml">XMLAttribute</a>* attribute )</div>
<div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;{</div>
<div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;    <span class="keywordflow">if</span> ( attribute == 0 ) {</div>
<div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;    }</div>
<div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;    <a class="code" href="a00098.xhtml">MemPool</a>* pool = attribute-&gt;<a class="code" href="a00194.xhtml#a107532e7652ca2f5a425da8ef22ee5c1">_memPool</a>;</div>
<div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;    attribute-&gt;<a class="code" href="a00194.xhtml#a10480389db9cf2773794c3c815461b90">~XMLAttribute</a>();</div>
<div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;    pool-&gt;<a class="code" href="a00098.xhtml#af252371f4bf36310d2db949279b5ccf4">Free</a>( attribute );</div>
<div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;}</div>
<div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;</div>
<div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;<span class="comment">//  &lt;ele&gt;&lt;/ele&gt;</span></div>
<div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;<span class="comment">//  &lt;ele&gt;foo&lt;b&gt;bar&lt;/b&gt;&lt;/ele&gt;</span></div>
<div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01535"></a><span class="lineno"><a class="line" href="a00199.xhtml#a1f37b0bb41320c4121515755b8a057a4"> 1535</a></span>&#160;<span class="keywordtype">char</span>* <a class="code" href="a00199.xhtml#a1f37b0bb41320c4121515755b8a057a4">XMLElement::ParseDeep</a>( <span class="keywordtype">char</span>* p, <a class="code" href="a00133.xhtml">StrPair</a>* strPair )</div>
<div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;{</div>
<div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;    <span class="comment">// Read the element name.</span></div>
<div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;    p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;    <span class="keywordflow">if</span> ( !p ) {</div>
<div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;    }</div>
<div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;</div>
<div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;    <span class="comment">// The closing element is the &lt;/element&gt; form. It is</span></div>
<div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;    <span class="comment">// parsed just like a regular element then deleted from</span></div>
<div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;    <span class="comment">// the DOM.</span></div>
<div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;    <span class="keywordflow">if</span> ( *p == <span class="charliteral">&#39;/&#39;</span> ) {</div>
<div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;        <a class="code" href="a00199.xhtml#a67fe3c235bdf597abb2b2c1287135c73">_closingType</a> = <a class="code" href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51aaae91bf4fc3fb41663442b35cdc82c20">CLOSING</a>;</div>
<div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;        ++p;</div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;    }</div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;</div>
<div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;    p = <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a323f7549e32dd8102eafc04a748041fc">ParseName</a>( p );</div>
<div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">_value</a>.<a class="code" href="a00133.xhtml#a1afb202191668ec8e922e875c35c8c94">Empty</a>() ) {</div>
<div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;    }</div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;</div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;    p = <a class="code" href="a00199.xhtml#a2b7dddea778d54aa6a213abed7ef7ab7">ParseAttributes</a>( p );</div>
<div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;    <span class="keywordflow">if</span> ( !p || !*p || <a class="code" href="a00199.xhtml#a67fe3c235bdf597abb2b2c1287135c73">_closingType</a> ) {</div>
<div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;        <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;    }</div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;</div>
<div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;    p = <a class="code" href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">XMLNode::ParseDeep</a>( p, strPair );</div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;}</div>
<div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;</div>
<div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;</div>
<div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;</div>
<div class="line"><a name="l01567"></a><span class="lineno"><a class="line" href="a00199.xhtml#afe5dfc0730ed1c1b2c9e6b177e6b2fa6"> 1567</a></span>&#160;<a class="code" href="a00201.xhtml">XMLNode</a>* <a class="code" href="a00199.xhtml#afe5dfc0730ed1c1b2c9e6b177e6b2fa6">XMLElement::ShallowClone</a>( <a class="code" href="a00198.xhtml">XMLDocument</a>* doc )<span class="keyword"> const</span></div>
<div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;    <span class="keywordflow">if</span> ( !doc ) {</div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;        doc = <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a>;</div>
<div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;    }</div>
<div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;    <a class="code" href="a00199.xhtml">XMLElement</a>* element = doc-&gt;<a class="code" href="a00198.xhtml#a5e899350ec5132d5645c5064d57e24ca">NewElement</a>( <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() );         <span class="comment">// fixme: this will always allocate memory. Intern?</span></div>
<div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;    <span class="keywordflow">for</span>( <span class="keyword">const</span> <a class="code" href="a00194.xhtml">XMLAttribute</a>* a=<a class="code" href="a00199.xhtml#a20d987889ace8646249a60bfc5492fd3">FirstAttribute</a>(); a; a=a-&gt;<a class="code" href="a00194.xhtml#a8b773c004dcc3a093990492ebd4908b2">Next</a>() ) {</div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;        element-&gt;<a class="code" href="a00199.xhtml#a8eb0c41120e9da3a8648e6ca38a6596f">SetAttribute</a>( a-&gt;Name(), a-&gt;Value() );         <span class="comment">// fixme: this will always allocate memory. Intern?</span></div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;    }</div>
<div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;    <span class="keywordflow">return</span> element;</div>
<div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;}</div>
<div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;</div>
<div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;</div>
<div class="line"><a name="l01580"></a><span class="lineno"><a class="line" href="a00199.xhtml#acabaa32707cda48d09044f9e051f8a7b"> 1580</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00199.xhtml#acabaa32707cda48d09044f9e051f8a7b">XMLElement::ShallowEqual</a>( <span class="keyword">const</span> <a class="code" href="a00201.xhtml">XMLNode</a>* compare )<span class="keyword"> const</span></div>
<div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( compare );</div>
<div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* other = compare-&gt;<a class="code" href="a00201.xhtml#a2ef2c6efbc6c9c76767770160d2d123d">ToElement</a>();</div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;    <span class="keywordflow">if</span> ( other &amp;&amp; <a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( other-&gt;<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>(), <a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() )) {</div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;</div>
<div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;        <span class="keyword">const</span> <a class="code" href="a00194.xhtml">XMLAttribute</a>* a=<a class="code" href="a00199.xhtml#a20d987889ace8646249a60bfc5492fd3">FirstAttribute</a>();</div>
<div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;        <span class="keyword">const</span> <a class="code" href="a00194.xhtml">XMLAttribute</a>* b=other-&gt;<a class="code" href="a00199.xhtml#a20d987889ace8646249a60bfc5492fd3">FirstAttribute</a>();</div>
<div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;</div>
<div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;        <span class="keywordflow">while</span> ( a &amp;&amp; b ) {</div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;            <span class="keywordflow">if</span> ( !<a class="code" href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">XMLUtil::StringEqual</a>( a-&gt;<a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>(), b-&gt;<a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>() ) ) {</div>
<div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;            }</div>
<div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;            a = a-&gt;<a class="code" href="a00194.xhtml#a8b773c004dcc3a093990492ebd4908b2">Next</a>();</div>
<div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;            b = b-&gt;<a class="code" href="a00194.xhtml#a8b773c004dcc3a093990492ebd4908b2">Next</a>();</div>
<div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;        }</div>
<div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;        <span class="keywordflow">if</span> ( a || b ) {</div>
<div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;            <span class="comment">// different count</span></div>
<div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;        }</div>
<div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;    }</div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;}</div>
<div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;</div>
<div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;</div>
<div class="line"><a name="l01606"></a><span class="lineno"><a class="line" href="a00199.xhtml#a102accd4d1deceb158c8c3fb4c4b2fe6"> 1606</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00199.xhtml#a102accd4d1deceb158c8c3fb4c4b2fe6">XMLElement::Accept</a>( <a class="code" href="a00206.xhtml">XMLVisitor</a>* visitor )<span class="keyword"> const</span></div>
<div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( visitor );</div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;    <span class="keywordflow">if</span> ( visitor-&gt;<a class="code" href="a00206.xhtml#ad84b4221bdd2cdecbda2fe51ac506bed">VisitEnter</a>( *<span class="keyword">this</span>, <a class="code" href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">_rootAttribute</a> ) ) {</div>
<div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">const</span> <a class="code" href="a00201.xhtml">XMLNode</a>* node=<a class="code" href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">FirstChild</a>(); node; node=node-&gt;<a class="code" href="a00201.xhtml#aee7c15f0bf3bdc684fda87d584356c1b">NextSibling</a>() ) {</div>
<div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;            <span class="keywordflow">if</span> ( !node-&gt;Accept( visitor ) ) {</div>
<div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;            }</div>
<div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;        }</div>
<div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;    }</div>
<div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;    <span class="keywordflow">return</span> visitor-&gt;<a class="code" href="a00206.xhtml#a164c7fc45b4799c5d850571780deeb0a">VisitExit</a>( *<span class="keyword">this</span> );</div>
<div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;}</div>
<div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;</div>
<div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;</div>
<div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;<span class="comment">// --------- XMLDocument ----------- //</span></div>
<div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;</div>
<div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;<span class="comment">// Warning: List must match &#39;enum XMLError&#39;</span></div>
<div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00198.xhtml#ac661ab922be6279e4b962146ce09bfa1">XMLDocument::_errorNames</a>[<a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a66c0fd712f1d5fdd123fb663bf06b2fb">XML_ERROR_COUNT</a>] = {</div>
<div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;    <span class="stringliteral">&quot;XML_SUCCESS&quot;</span>,</div>
<div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;    <span class="stringliteral">&quot;XML_NO_ATTRIBUTE&quot;</span>,</div>
<div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;    <span class="stringliteral">&quot;XML_WRONG_ATTRIBUTE_TYPE&quot;</span>,</div>
<div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_FILE_NOT_FOUND&quot;</span>,</div>
<div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_FILE_COULD_NOT_BE_OPENED&quot;</span>,</div>
<div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_FILE_READ_ERROR&quot;</span>,</div>
<div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_ELEMENT_MISMATCH&quot;</span>,</div>
<div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING_ELEMENT&quot;</span>,</div>
<div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING_ATTRIBUTE&quot;</span>,</div>
<div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_IDENTIFYING_TAG&quot;</span>,</div>
<div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING_TEXT&quot;</span>,</div>
<div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING_CDATA&quot;</span>,</div>
<div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING_COMMENT&quot;</span>,</div>
<div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING_DECLARATION&quot;</span>,</div>
<div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING_UNKNOWN&quot;</span>,</div>
<div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_EMPTY_DOCUMENT&quot;</span>,</div>
<div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_MISMATCHED_ELEMENT&quot;</span>,</div>
<div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;    <span class="stringliteral">&quot;XML_ERROR_PARSING&quot;</span>,</div>
<div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;    <span class="stringliteral">&quot;XML_CAN_NOT_CONVERT_TEXT&quot;</span>,</div>
<div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;    <span class="stringliteral">&quot;XML_NO_TEXT_NODE&quot;</span></div>
<div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;};</div>
<div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;</div>
<div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;</div>
<div class="line"><a name="l01647"></a><span class="lineno"><a class="line" href="a00198.xhtml#a3df00f373065f116ed9488d10f6cc60c"> 1647</a></span>&#160;<a class="code" href="a00198.xhtml#a3df00f373065f116ed9488d10f6cc60c">XMLDocument::XMLDocument</a>( <span class="keywordtype">bool</span> processEntities, <a class="code" href="a00390.xhtml#gab7696696807cf77b45c5cc8a44dcd90d">Whitespace</a> whitespace ) :</div>
<div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;    <a class="code" href="a00201.xhtml">XMLNode</a>( 0 ),</div>
<div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;    _writeBOM( false ),</div>
<div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;    _processEntities( processEntities ),</div>
<div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;    _errorID( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">XML_NO_ERROR</a> ),</div>
<div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;    _whitespace( whitespace ),</div>
<div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;    _errorStr1( 0 ),</div>
<div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;    _errorStr2( 0 ),</div>
<div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;    _charBuffer( 0 )</div>
<div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;{</div>
<div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;    <a class="code" href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">_document</a> = <span class="keyword">this</span>; <span class="comment">// avoid warning about &#39;this&#39; in initializer list</span></div>
<div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;}</div>
<div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;</div>
<div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;</div>
<div class="line"><a name="l01661"></a><span class="lineno"><a class="line" href="a00198.xhtml#a6f714d611df15326a1ff41e31a39490d"> 1661</a></span>&#160;<a class="code" href="a00198.xhtml#a6f714d611df15326a1ff41e31a39490d">XMLDocument::~XMLDocument</a>()</div>
<div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;{</div>
<div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;    <a class="code" href="a00198.xhtml#a20554f58b1fbdc5a5e4986ca59126837">Clear</a>();</div>
<div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;}</div>
<div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;</div>
<div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;</div>
<div class="line"><a name="l01667"></a><span class="lineno"><a class="line" href="a00198.xhtml#a20554f58b1fbdc5a5e4986ca59126837"> 1667</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00198.xhtml#a20554f58b1fbdc5a5e4986ca59126837">XMLDocument::Clear</a>()</div>
<div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;{</div>
<div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;    <a class="code" href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">DeleteChildren</a>();</div>
<div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;</div>
<div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div>
<div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;<span class="preprocessor"></span>    <span class="keyword">const</span> <span class="keywordtype">bool</span> hadError = <a class="code" href="a00198.xhtml#a8302f8ca7f1ed6dd2690e3875f968a32">Error</a>();</div>
<div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;<span class="preprocessor"></span>    <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a> = <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">XML_NO_ERROR</a>;</div>
<div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;    <a class="code" href="a00198.xhtml#a4c0d8478e9b2ec5b016fe69ff0de3c7a">_errorStr1</a> = 0;</div>
<div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;    <a class="code" href="a00198.xhtml#ac1e0563501cc46d66cdb3dd253332d49">_errorStr2</a> = 0;</div>
<div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;</div>
<div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;    <span class="keyword">delete</span> [] <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>;</div>
<div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;    <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a> = 0;</div>
<div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;</div>
<div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;<span class="preprocessor"></span>    <a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>.Trace( <span class="stringliteral">&quot;text&quot;</span> );</div>
<div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;    <a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>.Trace( <span class="stringliteral">&quot;element&quot;</span> );</div>
<div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;    <a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Trace( <span class="stringliteral">&quot;comment&quot;</span> );</div>
<div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;    <a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>.Trace( <span class="stringliteral">&quot;attribute&quot;</span> );</div>
<div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div>
<div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> ( !hadError ) {</div>
<div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>.CurrentAllocs()   == <a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>.Untracked() );</div>
<div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>.CurrentAllocs() == <a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>.Untracked() );</div>
<div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>.CurrentAllocs()      == <a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>.Untracked() );</div>
<div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.CurrentAllocs()   == <a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Untracked() );</div>
<div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;    }</div>
<div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;</div>
<div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;</div>
<div class="line"><a name="l01699"></a><span class="lineno"><a class="line" href="a00198.xhtml#a5e899350ec5132d5645c5064d57e24ca"> 1699</a></span>&#160;<a class="code" href="a00199.xhtml">XMLElement</a>* <a class="code" href="a00198.xhtml#a5e899350ec5132d5645c5064d57e24ca">XMLDocument::NewElement</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name )</div>
<div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;{</div>
<div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;    <a class="code" href="a00199.xhtml">XMLElement</a>* ele = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>.Alloc()) <a class="code" href="a00198.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;    ele-&gt;_memPool = &amp;<a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>;</div>
<div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;    ele-&gt;<a class="code" href="a00199.xhtml#aabede12b3e41647f936ed34ef8905a1d">SetName</a>( name );</div>
<div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;    <span class="keywordflow">return</span> ele;</div>
<div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;}</div>
<div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;</div>
<div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;</div>
<div class="line"><a name="l01708"></a><span class="lineno"><a class="line" href="a00198.xhtml#a2991901a202867cec8de7254273c8b7c"> 1708</a></span>&#160;<a class="code" href="a00195.xhtml">XMLComment</a>* <a class="code" href="a00198.xhtml#a2991901a202867cec8de7254273c8b7c">XMLDocument::NewComment</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str )</div>
<div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;{</div>
<div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;    <a class="code" href="a00195.xhtml">XMLComment</a>* comment = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Alloc()) <a class="code" href="a00195.xhtml">XMLComment</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;    comment-&gt;_memPool = &amp;<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>;</div>
<div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;    comment-&gt;<a class="code" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">SetValue</a>( str );</div>
<div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;    <span class="keywordflow">return</span> comment;</div>
<div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;}</div>
<div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;</div>
<div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;</div>
<div class="line"><a name="l01717"></a><span class="lineno"><a class="line" href="a00198.xhtml#a7d3e915ac54b0b32f72a2a7910225630"> 1717</a></span>&#160;<a class="code" href="a00203.xhtml">XMLText</a>* <a class="code" href="a00198.xhtml#a7d3e915ac54b0b32f72a2a7910225630">XMLDocument::NewText</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str )</div>
<div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;{</div>
<div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;    <a class="code" href="a00203.xhtml">XMLText</a>* text = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>.Alloc()) <a class="code" href="a00203.xhtml">XMLText</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;    text-&gt;_memPool = &amp;<a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>;</div>
<div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;    text-&gt;<a class="code" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">SetValue</a>( str );</div>
<div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;    <span class="keywordflow">return</span> text;</div>
<div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;}</div>
<div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;</div>
<div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;</div>
<div class="line"><a name="l01726"></a><span class="lineno"><a class="line" href="a00198.xhtml#a949f550ca5a84f18404af5e050626a2e"> 1726</a></span>&#160;<a class="code" href="a00197.xhtml">XMLDeclaration</a>* <a class="code" href="a00198.xhtml#a949f550ca5a84f18404af5e050626a2e">XMLDocument::NewDeclaration</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str )</div>
<div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;{</div>
<div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;    <a class="code" href="a00197.xhtml">XMLDeclaration</a>* dec = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Alloc()) <a class="code" href="a00197.xhtml">XMLDeclaration</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;    dec-&gt;_memPool = &amp;<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>;</div>
<div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;    dec-&gt;<a class="code" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">SetValue</a>( str ? str : <span class="stringliteral">&quot;xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;&quot;</span> );</div>
<div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;    <span class="keywordflow">return</span> dec;</div>
<div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;}</div>
<div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;</div>
<div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;</div>
<div class="line"><a name="l01735"></a><span class="lineno"><a class="line" href="a00198.xhtml#aa8c76e2ecbc64d912bb6c7244ada0d16"> 1735</a></span>&#160;<a class="code" href="a00204.xhtml">XMLUnknown</a>* <a class="code" href="a00198.xhtml#aa8c76e2ecbc64d912bb6c7244ada0d16">XMLDocument::NewUnknown</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* str )</div>
<div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;{</div>
<div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;    <a class="code" href="a00204.xhtml">XMLUnknown</a>* unk = <span class="keyword">new</span> (<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Alloc()) <a class="code" href="a00204.xhtml">XMLUnknown</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;    unk-&gt;_memPool = &amp;<a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>;</div>
<div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;    unk-&gt;<a class="code" href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">SetValue</a>( str );</div>
<div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;    <span class="keywordflow">return</span> unk;</div>
<div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;}</div>
<div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;</div>
<div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;<span class="keyword">static</span> FILE* callfopen( <span class="keyword">const</span> <span class="keywordtype">char</span>* filepath, <span class="keyword">const</span> <span class="keywordtype">char</span>* mode )</div>
<div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;{</div>
<div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( filepath );</div>
<div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( mode );</div>
<div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;<span class="preprocessor">#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1400 ) &amp;&amp; (!defined WINCE)</span></div>
<div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;<span class="preprocessor"></span>    FILE* fp = 0;</div>
<div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;    errno_t err = fopen_s( &amp;fp, filepath, mode );</div>
<div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;    <span class="keywordflow">if</span> ( err ) {</div>
<div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;    }</div>
<div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;<span class="preprocessor"></span>    FILE* fp = fopen( filepath, mode );</div>
<div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> fp;</div>
<div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;}</div>
<div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;</div>
<div class="line"><a name="l01759"></a><span class="lineno"><a class="line" href="a00198.xhtml#a6665d0d689e8b8290a0cd6d8f340c19d"> 1759</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00198.xhtml#a6665d0d689e8b8290a0cd6d8f340c19d">XMLDocument::LoadFile</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* filename )</div>
<div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;{</div>
<div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;    <a class="code" href="a00198.xhtml#a20554f58b1fbdc5a5e4986ca59126837">Clear</a>();</div>
<div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;    FILE* fp = callfopen( filename, <span class="stringliteral">&quot;rb&quot;</span> );</div>
<div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;    <span class="keywordflow">if</span> ( !fp ) {</div>
<div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a5a941e561d15be89b11c6574149301e7">XML_ERROR_FILE_NOT_FOUND</a>, filename, 0 );</div>
<div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;    }</div>
<div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;    <a class="code" href="a00198.xhtml#a6665d0d689e8b8290a0cd6d8f340c19d">LoadFile</a>( fp );</div>
<div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;    fclose( fp );</div>
<div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;}</div>
<div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;</div>
<div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;</div>
<div class="line"><a name="l01773"></a><span class="lineno"><a class="line" href="a00198.xhtml#a25c1fd4903914444fc31fb1b90dcffdb"> 1773</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00198.xhtml#a6665d0d689e8b8290a0cd6d8f340c19d">XMLDocument::LoadFile</a>( FILE* fp )</div>
<div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;{</div>
<div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;    <a class="code" href="a00198.xhtml#a20554f58b1fbdc5a5e4986ca59126837">Clear</a>();</div>
<div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;</div>
<div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;    fseek( fp, 0, SEEK_SET );</div>
<div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;    <span class="keywordflow">if</span> ( fgetc( fp ) == EOF &amp;&amp; ferror( fp ) != 0 ) {</div>
<div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a88799ffe58541c67e96100f07e0a20e7">XML_ERROR_FILE_READ_ERROR</a>, 0, 0 );</div>
<div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;    }</div>
<div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;</div>
<div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;    fseek( fp, 0, SEEK_END );</div>
<div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">long</span> filelength = ftell( fp );</div>
<div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;    fseek( fp, 0, SEEK_SET );</div>
<div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;    <span class="keywordflow">if</span> ( filelength == -1L ) {</div>
<div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a88799ffe58541c67e96100f07e0a20e7">XML_ERROR_FILE_READ_ERROR</a>, 0, 0 );</div>
<div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;    }</div>
<div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;</div>
<div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> size = filelength;</div>
<div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;    <span class="keywordflow">if</span> ( size == 0 ) {</div>
<div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ae8928fd385881ccda8c41b889da94aae">XML_ERROR_EMPTY_DOCUMENT</a>, 0, 0 );</div>
<div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;    }</div>
<div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;</div>
<div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;    <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a> = <span class="keyword">new</span> <span class="keywordtype">char</span>[size+1];</div>
<div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;    <span class="keywordtype">size_t</span> read = fread( <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>, 1, size, fp );</div>
<div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;    <span class="keywordflow">if</span> ( read != size ) {</div>
<div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a88799ffe58541c67e96100f07e0a20e7">XML_ERROR_FILE_READ_ERROR</a>, 0, 0 );</div>
<div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;    }</div>
<div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;</div>
<div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;    <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>[size] = 0;</div>
<div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;</div>
<div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* p = <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>;</div>
<div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;    p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;    p = <a class="code" href="a00205.xhtml#add0878731f4c713ac43af19b24e569a7">XMLUtil::ReadBOM</a>( p, &amp;<a class="code" href="a00198.xhtml#ac289c48075bb8af550a77e14a204a0b2">_writeBOM</a> );</div>
<div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;    <span class="keywordflow">if</span> ( !p || !*p ) {</div>
<div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ae8928fd385881ccda8c41b889da94aae">XML_ERROR_EMPTY_DOCUMENT</a>, 0, 0 );</div>
<div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;    }</div>
<div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;</div>
<div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;    <a class="code" href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">ParseDeep</a>( <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a> + (p-<a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>), 0 );</div>
<div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;}</div>
<div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;</div>
<div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;</div>
<div class="line"><a name="l01819"></a><span class="lineno"><a class="line" href="a00198.xhtml#a373fbb58d1a7b34df617d1269bfb0ffa"> 1819</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00198.xhtml#a373fbb58d1a7b34df617d1269bfb0ffa">XMLDocument::SaveFile</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* filename, <span class="keywordtype">bool</span> compact )</div>
<div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;{</div>
<div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;    FILE* fp = callfopen( filename, <span class="stringliteral">&quot;w&quot;</span> );</div>
<div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;    <span class="keywordflow">if</span> ( !fp ) {</div>
<div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a5c5a9f238c435d1a577b7cd199e15e63">XML_ERROR_FILE_COULD_NOT_BE_OPENED</a>, filename, 0 );</div>
<div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;    }</div>
<div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;    <a class="code" href="a00198.xhtml#a373fbb58d1a7b34df617d1269bfb0ffa">SaveFile</a>(fp, compact);</div>
<div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;    fclose( fp );</div>
<div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;}</div>
<div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;</div>
<div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;</div>
<div class="line"><a name="l01832"></a><span class="lineno"><a class="line" href="a00198.xhtml#a45a57aa5bfd116cc1aa00fae72b7a07c"> 1832</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00198.xhtml#a373fbb58d1a7b34df617d1269bfb0ffa">XMLDocument::SaveFile</a>( FILE* fp, <span class="keywordtype">bool</span> compact )</div>
<div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;{</div>
<div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;    <a class="code" href="a00202.xhtml">XMLPrinter</a> stream( fp, compact );</div>
<div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;    <a class="code" href="a00198.xhtml#ac08d5b42d07bdd8956d9fec3e8c6e7b4">Print</a>( &amp;stream );</div>
<div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;}</div>
<div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;</div>
<div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;</div>
<div class="line"><a name="l01840"></a><span class="lineno"><a class="line" href="a00198.xhtml#a2734f0824ea57c5c26f61b4f3ff2514a"> 1840</a></span>&#160;<a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> <a class="code" href="a00198.xhtml#a2734f0824ea57c5c26f61b4f3ff2514a">XMLDocument::Parse</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* p, <span class="keywordtype">size_t</span> len )</div>
<div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;{</div>
<div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* start = p;</div>
<div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;    <a class="code" href="a00198.xhtml#a20554f58b1fbdc5a5e4986ca59126837">Clear</a>();</div>
<div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;</div>
<div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;    <span class="keywordflow">if</span> ( len == 0 || !p || !*p ) {</div>
<div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ae8928fd385881ccda8c41b889da94aae">XML_ERROR_EMPTY_DOCUMENT</a>, 0, 0 );</div>
<div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;    }</div>
<div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;    <span class="keywordflow">if</span> ( len == (<span class="keywordtype">size_t</span>)(-1) ) {</div>
<div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;        len = strlen( p );</div>
<div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;    }</div>
<div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;    <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a> = <span class="keyword">new</span> <span class="keywordtype">char</span>[ len+1 ];</div>
<div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;    memcpy( <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>, p, len );</div>
<div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;    <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>[len] = 0;</div>
<div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;</div>
<div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;    p = <a class="code" href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">XMLUtil::SkipWhiteSpace</a>( p );</div>
<div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;    p = <a class="code" href="a00205.xhtml#add0878731f4c713ac43af19b24e569a7">XMLUtil::ReadBOM</a>( p, &amp;<a class="code" href="a00198.xhtml#ac289c48075bb8af550a77e14a204a0b2">_writeBOM</a> );</div>
<div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;    <span class="keywordflow">if</span> ( !p || !*p ) {</div>
<div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;        <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">SetError</a>( <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ae8928fd385881ccda8c41b889da94aae">XML_ERROR_EMPTY_DOCUMENT</a>, 0, 0 );</div>
<div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;    }</div>
<div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;</div>
<div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;    ptrdiff_t delta = p - start;  <span class="comment">// skip initial whitespace, BOM, etc.</span></div>
<div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;    <a class="code" href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">ParseDeep</a>( <a class="code" href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">_charBuffer</a>+delta, 0 );</div>
<div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00198.xhtml#a8302f8ca7f1ed6dd2690e3875f968a32">Error</a>() ) {</div>
<div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;        <span class="comment">// clean up now essentially dangling memory.</span></div>
<div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;        <span class="comment">// and the parse fail can put objects in the</span></div>
<div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;        <span class="comment">// pools that are dead and inaccessible.</span></div>
<div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;        <a class="code" href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">DeleteChildren</a>();</div>
<div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;        <a class="code" href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">_elementPool</a>.Clear();</div>
<div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;        <a class="code" href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">_attributePool</a>.Clear();</div>
<div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;        <a class="code" href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">_textPool</a>.Clear();</div>
<div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;        <a class="code" href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">_commentPool</a>.Clear();</div>
<div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;    }</div>
<div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>;</div>
<div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;}</div>
<div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;</div>
<div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;</div>
<div class="line"><a name="l01879"></a><span class="lineno"><a class="line" href="a00198.xhtml#ac08d5b42d07bdd8956d9fec3e8c6e7b4"> 1879</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00198.xhtml#ac08d5b42d07bdd8956d9fec3e8c6e7b4">XMLDocument::Print</a>( <a class="code" href="a00202.xhtml">XMLPrinter</a>* streamer )<span class="keyword"> const</span></div>
<div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;    <a class="code" href="a00202.xhtml">XMLPrinter</a> stdStreamer( stdout );</div>
<div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;    <span class="keywordflow">if</span> ( !streamer ) {</div>
<div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;        streamer = &amp;stdStreamer;</div>
<div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;    }</div>
<div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;    <a class="code" href="a00198.xhtml#ad02be21c4459af97b6294eb4d1f82cd6">Accept</a>( streamer );</div>
<div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;}</div>
<div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;</div>
<div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;</div>
<div class="line"><a name="l01889"></a><span class="lineno"><a class="line" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d"> 1889</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">XMLDocument::SetError</a>( <a class="code" href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">XMLError</a> error, <span class="keyword">const</span> <span class="keywordtype">char</span>* str1, <span class="keyword">const</span> <span class="keywordtype">char</span>* str2 )</div>
<div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;{</div>
<div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( error &gt;= 0 &amp;&amp; error &lt; <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a66c0fd712f1d5fdd123fb663bf06b2fb">XML_ERROR_COUNT</a> );</div>
<div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;    <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a> = error;</div>
<div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;    <a class="code" href="a00198.xhtml#a4c0d8478e9b2ec5b016fe69ff0de3c7a">_errorStr1</a> = str1;</div>
<div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;    <a class="code" href="a00198.xhtml#ac1e0563501cc46d66cdb3dd253332d49">_errorStr2</a> = str2;</div>
<div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;}</div>
<div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;</div>
<div class="line"><a name="l01897"></a><span class="lineno"><a class="line" href="a00198.xhtml#acb0f4bc5afe609f8fea49d4bd073a48c"> 1897</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00198.xhtml#acb0f4bc5afe609f8fea49d4bd073a48c">XMLDocument::ErrorName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;  <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a> &gt;= 0 &amp;&amp; <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a> &lt; <a class="code" href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a66c0fd712f1d5fdd123fb663bf06b2fb">XML_ERROR_COUNT</a> );</div>
<div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="a00198.xhtml#ac661ab922be6279e4b962146ce09bfa1">_errorNames</a>[<a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>];</div>
<div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;}</div>
<div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;</div>
<div class="line"><a name="l01903"></a><span class="lineno"><a class="line" href="a00198.xhtml#a358e6212710ba0ab608aec8f8b4aa999"> 1903</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00198.xhtml#a358e6212710ba0ab608aec8f8b4aa999">XMLDocument::PrintError</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00198.xhtml#a8302f8ca7f1ed6dd2690e3875f968a32">Error</a>() ) {</div>
<div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> LEN = 20;</div>
<div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;        <span class="keywordtype">char</span> buf1[LEN] = { 0 };</div>
<div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;        <span class="keywordtype">char</span> buf2[LEN] = { 0 };</div>
<div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;</div>
<div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00198.xhtml#a4c0d8478e9b2ec5b016fe69ff0de3c7a">_errorStr1</a> ) {</div>
<div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;            <a class="code" href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a>( buf1, LEN, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="a00198.xhtml#a4c0d8478e9b2ec5b016fe69ff0de3c7a">_errorStr1</a> );</div>
<div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;        }</div>
<div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00198.xhtml#ac1e0563501cc46d66cdb3dd253332d49">_errorStr2</a> ) {</div>
<div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;            <a class="code" href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a>( buf2, LEN, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="a00198.xhtml#ac1e0563501cc46d66cdb3dd253332d49">_errorStr2</a> );</div>
<div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;        }</div>
<div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;</div>
<div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;        printf( <span class="stringliteral">&quot;XMLDocument error id=%d &#39;%s&#39; str1=%s str2=%s\n&quot;</span>,</div>
<div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;                <a class="code" href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">_errorID</a>, <a class="code" href="a00198.xhtml#acb0f4bc5afe609f8fea49d4bd073a48c">ErrorName</a>(), buf1, buf2 );</div>
<div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;    }</div>
<div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;}</div>
<div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;</div>
<div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;</div>
<div class="line"><a name="l01923"></a><span class="lineno"><a class="line" href="a00202.xhtml#ae0fa76ad605ced3fae6bc83f5d9a99b5"> 1923</a></span>&#160;<a class="code" href="a00202.xhtml#ae0fa76ad605ced3fae6bc83f5d9a99b5">XMLPrinter::XMLPrinter</a>( FILE* file, <span class="keywordtype">bool</span> compact, <span class="keywordtype">int</span> depth ) :</div>
<div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;    _elementJustOpened( false ),</div>
<div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;    _firstElement( true ),</div>
<div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;    _fp( file ),</div>
<div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;    _depth( depth ),</div>
<div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;    _textDepth( -1 ),</div>
<div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;    _processEntities( true ),</div>
<div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;    _compactMode( compact )</div>
<div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;{</div>
<div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;    <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i=0; i&lt;<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5ab43b7084e3e3f6859c571572a52f23a0">ENTITY_RANGE</a>; ++i ) {</div>
<div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;        <a class="code" href="a00202.xhtml#a121d74998ff1d97d57aa486c1905faef">_entityFlag</a>[i] = <span class="keyword">false</span>;</div>
<div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;        <a class="code" href="a00202.xhtml#adbed404cbf923009d5d09d77465dd704">_restrictedEntityFlag</a>[i] = <span class="keyword">false</span>;</div>
<div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;    }</div>
<div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;    <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i=0; i&lt;NUM_ENTITIES; ++i ) {</div>
<div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;        <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( entities[i].value &lt; ENTITY_RANGE );</div>
<div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;        <span class="keywordflow">if</span> ( entities[i].value &lt; ENTITY_RANGE ) {</div>
<div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;            <a class="code" href="a00202.xhtml#a121d74998ff1d97d57aa486c1905faef">_entityFlag</a>[ (<a class="code" href="a00397.xhtml">int</a>)entities[i].value ] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;        }</div>
<div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;    }</div>
<div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;    <a class="code" href="a00202.xhtml#adbed404cbf923009d5d09d77465dd704">_restrictedEntityFlag</a>[(<a class="code" href="a00397.xhtml">int</a>)<span class="charliteral">&#39;&amp;&#39;</span>] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;    <a class="code" href="a00202.xhtml#adbed404cbf923009d5d09d77465dd704">_restrictedEntityFlag</a>[(<a class="code" href="a00397.xhtml">int</a>)<span class="charliteral">&#39;&lt;&#39;</span>] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;    <a class="code" href="a00202.xhtml#adbed404cbf923009d5d09d77465dd704">_restrictedEntityFlag</a>[(<a class="code" href="a00397.xhtml">int</a>)<span class="charliteral">&#39;&gt;&#39;</span>] = <span class="keyword">true</span>; <span class="comment">// not required, but consistency is nice</span></div>
<div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;    <a class="code" href="a00202.xhtml#afb5b6a7c8bd91de22db5292b192a2efc">_buffer</a>.<a class="code" href="a00050.xhtml#a91184d9664c79ccf7ae5be06eb5ceebd">Push</a>( 0 );</div>
<div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;}</div>
<div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;</div>
<div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;</div>
<div class="line"><a name="l01949"></a><span class="lineno"><a class="line" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac"> 1949</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">XMLPrinter::Print</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* format, ... )</div>
<div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;{</div>
<div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;    va_list     va;</div>
<div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;    va_start( va, format );</div>
<div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;</div>
<div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ab8e5983e4852475ee0084aedbc3f235e">_fp</a> ) {</div>
<div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;        vfprintf( <a class="code" href="a00202.xhtml#ab8e5983e4852475ee0084aedbc3f235e">_fp</a>, format, va );</div>
<div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;    }</div>
<div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;<span class="preprocessor">#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1400 )</span></div>
<div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #if defined(WINCE)</span></div>
<div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">int</span> len = 512;</div>
<div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;    <span class="keywordflow">do</span> {</div>
<div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;        len = len*2;</div>
<div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;        <span class="keywordtype">char</span>* str = <span class="keyword">new</span> <span class="keywordtype">char</span>[len]();</div>
<div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;      len = _vsnprintf(str, len, format, va);</div>
<div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;      <span class="keyword">delete</span>[] str;</div>
<div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;    }<span class="keywordflow">while</span> (len &lt; 0);</div>
<div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;<span class="preprocessor">    #else</span></div>
<div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">int</span> len = _vscprintf( format, va );</div>
<div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">int</span> len = vsnprintf( 0, 0, format, va );</div>
<div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01973"></a><span class="lineno"> 1973</span>&#160;<span class="preprocessor"></span>        <span class="comment">// Close out and re-start the va-args</span></div>
<div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;        va_end( va );</div>
<div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;        va_start( va, format );</div>
<div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;        <span class="keywordtype">char</span>* p = <a class="code" href="a00202.xhtml#afb5b6a7c8bd91de22db5292b192a2efc">_buffer</a>.<a class="code" href="a00050.xhtml#aa57d94f1bc348e58f6f1381187807ffa">PushArr</a>( len ) - 1; <span class="comment">// back up over the null terminator.</span></div>
<div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;<span class="preprocessor">#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1400 )</span></div>
<div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #if defined(WINCE)</span></div>
<div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;<span class="preprocessor"></span>    _vsnprintf( p, len+1, format, va );</div>
<div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;<span class="preprocessor">    #else</span></div>
<div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;<span class="preprocessor"></span>    vsnprintf_s( p, len+1, _TRUNCATE, format, va );</div>
<div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;<span class="preprocessor"></span>    vsnprintf( p, len+1, format, va );</div>
<div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;    va_end( va );</div>
<div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;}</div>
<div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;</div>
<div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;</div>
<div class="line"><a name="l01991"></a><span class="lineno"><a class="line" href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de"> 1991</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de">XMLPrinter::PrintSpace</a>( <span class="keywordtype">int</span> depth )</div>
<div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;{</div>
<div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;    <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i=0; i&lt;depth; ++i ) {</div>
<div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;    &quot;</span> );</div>
<div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;    }</div>
<div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;}</div>
<div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;</div>
<div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;</div>
<div class="line"><a name="l01999"></a><span class="lineno"><a class="line" href="a00202.xhtml#a2db7bb356f93036da79d719cd13c96e5"> 1999</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a2db7bb356f93036da79d719cd13c96e5">XMLPrinter::PrintString</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* p, <span class="keywordtype">bool</span> restricted )</div>
<div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;{</div>
<div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;    <span class="comment">// Look for runs of bytes between entities to print.</span></div>
<div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* q = p;</div>
<div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>* flag = restricted ? <a class="code" href="a00202.xhtml#adbed404cbf923009d5d09d77465dd704">_restrictedEntityFlag</a> : <a class="code" href="a00202.xhtml#a121d74998ff1d97d57aa486c1905faef">_entityFlag</a>;</div>
<div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;</div>
<div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#a6cf72b01e4ca8a088ef5cf3f99aa4619">_processEntities</a> ) {</div>
<div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;        <span class="keywordflow">while</span> ( *q ) {</div>
<div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;            <span class="comment">// Remember, char is sometimes signed. (How many times has that bitten me?)</span></div>
<div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;            <span class="keywordflow">if</span> ( *q &gt; 0 &amp;&amp; *q &lt; <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5ab43b7084e3e3f6859c571572a52f23a0">ENTITY_RANGE</a> ) {</div>
<div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;                <span class="comment">// Check for entities. If one is found, flush</span></div>
<div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;                <span class="comment">// the stream up until the entity, write the</span></div>
<div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;                <span class="comment">// entity, and keep looking.</span></div>
<div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;                <span class="keywordflow">if</span> ( flag[(<span class="keywordtype">unsigned</span>)(*q)] ) {</div>
<div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;                    <span class="keywordflow">while</span> ( p &lt; q ) {</div>
<div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;                        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;%c&quot;</span>, *p );</div>
<div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;                        ++p;</div>
<div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;                    }</div>
<div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;                    <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i=0; i&lt;NUM_ENTITIES; ++i ) {</div>
<div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;                        <span class="keywordflow">if</span> ( entities[i].value == *q ) {</div>
<div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;                            <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&amp;%s;&quot;</span>, entities[i].pattern );</div>
<div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;                        }</div>
<div class="line"><a name="l02022"></a><span class="lineno"> 2022</span>&#160;                    }</div>
<div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160;                    ++p;</div>
<div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;                }</div>
<div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;            }</div>
<div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;            ++q;</div>
<div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;        }</div>
<div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;    }</div>
<div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;    <span class="comment">// Flush the remaining string. This will be the entire</span></div>
<div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;    <span class="comment">// string if an entity wasn&#39;t found.</span></div>
<div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="a00202.xhtml#a6cf72b01e4ca8a088ef5cf3f99aa4619">_processEntities</a> || (q-p &gt; 0) ) {</div>
<div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;%s&quot;</span>, p );</div>
<div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;    }</div>
<div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;}</div>
<div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;</div>
<div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;</div>
<div class="line"><a name="l02037"></a><span class="lineno"><a class="line" href="a00202.xhtml#a69111df3f67a582ee8b7d15de0cf08ea"> 2037</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a69111df3f67a582ee8b7d15de0cf08ea">XMLPrinter::PushHeader</a>( <span class="keywordtype">bool</span> writeBOM, <span class="keywordtype">bool</span> writeDec )</div>
<div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;{</div>
<div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;    <span class="keywordflow">if</span> ( writeBOM ) {</div>
<div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> bom[] = { TIXML_UTF_LEAD_0, TIXML_UTF_LEAD_1, TIXML_UTF_LEAD_2, 0 };</div>
<div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;%s&quot;</span>, bom );</div>
<div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;    }</div>
<div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;    <span class="keywordflow">if</span> ( writeDec ) {</div>
<div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;        <a class="code" href="a00202.xhtml#aaa3f679452ae4803a75e8fb27dd1598b">PushDeclaration</a>( <span class="stringliteral">&quot;xml version=\&quot;1.0\&quot;&quot;</span> );</div>
<div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;    }</div>
<div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;}</div>
<div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;</div>
<div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;</div>
<div class="line"><a name="l02049"></a><span class="lineno"><a class="line" href="a00202.xhtml#a51e42981371b82b64cac08d1248a7df7"> 2049</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a51e42981371b82b64cac08d1248a7df7">XMLPrinter::OpenElement</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">bool</span> compactMode )</div>
<div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;{</div>
<div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> ) {</div>
<div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;        <a class="code" href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc">SealElement</a>();</div>
<div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;    }</div>
<div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;    <a class="code" href="a00202.xhtml#a80f1e8f8bce0e2e7350ea32df345ea81">_stack</a>.<a class="code" href="a00050.xhtml#a91184d9664c79ccf7ae5be06eb5ceebd">Push</a>( name );</div>
<div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;</div>
<div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> &lt; 0 &amp;&amp; !<a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> &amp;&amp; !compactMode ) {</div>
<div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;    }</div>
<div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;    <span class="keywordflow">if</span> ( !compactMode ) {</div>
<div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;        <a class="code" href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de">PrintSpace</a>( <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a> );</div>
<div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;    }</div>
<div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;</div>
<div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;    <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&lt;%s&quot;</span>, name );</div>
<div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;    <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;    <a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;    ++<a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a>;</div>
<div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;}</div>
<div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;</div>
<div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;</div>
<div class="line"><a name="l02070"></a><span class="lineno"><a class="line" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1"> 2070</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">XMLPrinter::PushAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* value )</div>
<div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;{</div>
<div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;    <a class="code" href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a>( <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> );</div>
<div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;    <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot; %s=\&quot;&quot;</span>, name );</div>
<div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;    <a class="code" href="a00202.xhtml#a2db7bb356f93036da79d719cd13c96e5">PrintString</a>( value, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;    <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;\&quot;&quot;</span> );</div>
<div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;}</div>
<div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;</div>
<div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;</div>
<div class="line"><a name="l02079"></a><span class="lineno"><a class="line" href="a00202.xhtml#aa93650b98d80cae0beac2117b3de17ed"> 2079</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">XMLPrinter::PushAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">int</span> v )</div>
<div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;{</div>
<div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;    <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">PushAttribute</a>( name, buf );</div>
<div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;}</div>
<div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;</div>
<div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;</div>
<div class="line"><a name="l02087"></a><span class="lineno"><a class="line" href="a00202.xhtml#ae19a800059c676f3f334adb303859718"> 2087</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">XMLPrinter::PushAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">unsigned</span> v )</div>
<div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;{</div>
<div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;    <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">PushAttribute</a>( name, buf );</div>
<div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160;}</div>
<div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;</div>
<div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;</div>
<div class="line"><a name="l02095"></a><span class="lineno"><a class="line" href="a00202.xhtml#a67ac3c819838f93aa254ae504b59f8f6"> 2095</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">XMLPrinter::PushAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">bool</span> v )</div>
<div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;{</div>
<div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;    <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">PushAttribute</a>( name, buf );</div>
<div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160;}</div>
<div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;</div>
<div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;</div>
<div class="line"><a name="l02103"></a><span class="lineno"><a class="line" href="a00202.xhtml#a1be3dbb7b87270b40c6a2a8173347580"> 2103</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">XMLPrinter::PushAttribute</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">double</span> v )</div>
<div class="line"><a name="l02104"></a><span class="lineno"> 2104</span>&#160;{</div>
<div class="line"><a name="l02105"></a><span class="lineno"> 2105</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02106"></a><span class="lineno"> 2106</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( v, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02107"></a><span class="lineno"> 2107</span>&#160;    <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">PushAttribute</a>( name, buf );</div>
<div class="line"><a name="l02108"></a><span class="lineno"> 2108</span>&#160;}</div>
<div class="line"><a name="l02109"></a><span class="lineno"> 2109</span>&#160;</div>
<div class="line"><a name="l02110"></a><span class="lineno"> 2110</span>&#160;</div>
<div class="line"><a name="l02111"></a><span class="lineno"><a class="line" href="a00202.xhtml#a410f06cffa2fd3ce75481b125b64344d"> 2111</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a410f06cffa2fd3ce75481b125b64344d">XMLPrinter::CloseElement</a>( <span class="keywordtype">bool</span> compactMode )</div>
<div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;{</div>
<div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;    --<a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a>;</div>
<div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <a class="code" href="a00202.xhtml#a80f1e8f8bce0e2e7350ea32df345ea81">_stack</a>.<a class="code" href="a00050.xhtml#a5790b92694697e9566fdcaecd41cd49e">Pop</a>();</div>
<div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;</div>
<div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> ) {</div>
<div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;/&gt;&quot;</span> );</div>
<div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;    }</div>
<div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> &lt; 0 &amp;&amp; !compactMode) {</div>
<div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;            <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;            <a class="code" href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de">PrintSpace</a>( <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a> );</div>
<div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;        }</div>
<div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&lt;/%s&gt;&quot;</span>, name );</div>
<div class="line"><a name="l02125"></a><span class="lineno"> 2125</span>&#160;    }</div>
<div class="line"><a name="l02126"></a><span class="lineno"> 2126</span>&#160;</div>
<div class="line"><a name="l02127"></a><span class="lineno"> 2127</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> == <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a> ) {</div>
<div class="line"><a name="l02128"></a><span class="lineno"> 2128</span>&#160;        <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> = -1;</div>
<div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;    }</div>
<div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a> == 0 &amp;&amp; !compactMode) {</div>
<div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;    }</div>
<div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160;    <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;}</div>
<div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;</div>
<div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;</div>
<div class="line"><a name="l02137"></a><span class="lineno"><a class="line" href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc"> 2137</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc">XMLPrinter::SealElement</a>()</div>
<div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;{</div>
<div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;    <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;    <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&gt;&quot;</span> );</div>
<div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;}</div>
<div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;</div>
<div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;</div>
<div class="line"><a name="l02144"></a><span class="lineno"><a class="line" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4"> 2144</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">XMLPrinter::PushText</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* text, <span class="keywordtype">bool</span> cdata )</div>
<div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;{</div>
<div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;    <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> = <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a>-1;</div>
<div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;</div>
<div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> ) {</div>
<div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;        <a class="code" href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc">SealElement</a>();</div>
<div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;    }</div>
<div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;    <span class="keywordflow">if</span> ( cdata ) {</div>
<div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&lt;![CDATA[&quot;</span> );</div>
<div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;%s&quot;</span>, text );</div>
<div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;]]&gt;&quot;</span> );</div>
<div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;    }</div>
<div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;        <a class="code" href="a00202.xhtml#a2db7bb356f93036da79d719cd13c96e5">PrintString</a>( text, <span class="keyword">true</span> );</div>
<div class="line"><a name="l02158"></a><span class="lineno"> 2158</span>&#160;    }</div>
<div class="line"><a name="l02159"></a><span class="lineno"> 2159</span>&#160;}</div>
<div class="line"><a name="l02160"></a><span class="lineno"> 2160</span>&#160;</div>
<div class="line"><a name="l02161"></a><span class="lineno"><a class="line" href="a00202.xhtml#ac9af8629ac88bfdc9bf79a6aef4680cd"> 2161</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">XMLPrinter::PushText</a>( <span class="keywordtype">int</span> value )</div>
<div class="line"><a name="l02162"></a><span class="lineno"> 2162</span>&#160;{</div>
<div class="line"><a name="l02163"></a><span class="lineno"> 2163</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02164"></a><span class="lineno"> 2164</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( value, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02165"></a><span class="lineno"> 2165</span>&#160;    <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">PushText</a>( buf, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02166"></a><span class="lineno"> 2166</span>&#160;}</div>
<div class="line"><a name="l02167"></a><span class="lineno"> 2167</span>&#160;</div>
<div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160;</div>
<div class="line"><a name="l02169"></a><span class="lineno"><a class="line" href="a00202.xhtml#a1fbe72c0b6ca1844f223e386feee7250"> 2169</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">XMLPrinter::PushText</a>( <span class="keywordtype">unsigned</span> value )</div>
<div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;{</div>
<div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( value, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;    <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">PushText</a>( buf, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;}</div>
<div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160;</div>
<div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;</div>
<div class="line"><a name="l02177"></a><span class="lineno"><a class="line" href="a00202.xhtml#a648948b2cec3036a8251152e6e44b39a"> 2177</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">XMLPrinter::PushText</a>( <span class="keywordtype">bool</span> value )</div>
<div class="line"><a name="l02178"></a><span class="lineno"> 2178</span>&#160;{</div>
<div class="line"><a name="l02179"></a><span class="lineno"> 2179</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02180"></a><span class="lineno"> 2180</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( value, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02181"></a><span class="lineno"> 2181</span>&#160;    <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">PushText</a>( buf, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02182"></a><span class="lineno"> 2182</span>&#160;}</div>
<div class="line"><a name="l02183"></a><span class="lineno"> 2183</span>&#160;</div>
<div class="line"><a name="l02184"></a><span class="lineno"> 2184</span>&#160;</div>
<div class="line"><a name="l02185"></a><span class="lineno"><a class="line" href="a00202.xhtml#a21e3c1dd956d89866f2de84c3569b359"> 2185</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">XMLPrinter::PushText</a>( <span class="keywordtype">float</span> value )</div>
<div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;{</div>
<div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( value, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02189"></a><span class="lineno"> 2189</span>&#160;    <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">PushText</a>( buf, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160;}</div>
<div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;</div>
<div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;</div>
<div class="line"><a name="l02193"></a><span class="lineno"><a class="line" href="a00202.xhtml#aab2ca66507d33996109dee9cb2d2ba93"> 2193</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">XMLPrinter::PushText</a>( <span class="keywordtype">double</span> value )</div>
<div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;{</div>
<div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a>];</div>
<div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;    <a class="code" href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">XMLUtil::ToStr</a>( value, buf, <a class="code" href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">BUF_SIZE</a> );</div>
<div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;    <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">PushText</a>( buf, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;}</div>
<div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;</div>
<div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;</div>
<div class="line"><a name="l02201"></a><span class="lineno"><a class="line" href="a00202.xhtml#af22c1599559dfcf088cb83d496954254"> 2201</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#af22c1599559dfcf088cb83d496954254">XMLPrinter::PushComment</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* comment )</div>
<div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;{</div>
<div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> ) {</div>
<div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160;        <a class="code" href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc">SealElement</a>();</div>
<div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;    }</div>
<div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> &lt; 0 &amp;&amp; !<a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> &amp;&amp; !<a class="code" href="a00202.xhtml#a31deafc5a71b696468fc87e79f45ba58">_compactMode</a>) {</div>
<div class="line"><a name="l02207"></a><span class="lineno"> 2207</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l02208"></a><span class="lineno"> 2208</span>&#160;        <a class="code" href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de">PrintSpace</a>( <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a> );</div>
<div class="line"><a name="l02209"></a><span class="lineno"> 2209</span>&#160;    }</div>
<div class="line"><a name="l02210"></a><span class="lineno"> 2210</span>&#160;    <a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;    <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&lt;!--%s--&gt;&quot;</span>, comment );</div>
<div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;}</div>
<div class="line"><a name="l02213"></a><span class="lineno"> 2213</span>&#160;</div>
<div class="line"><a name="l02214"></a><span class="lineno"> 2214</span>&#160;</div>
<div class="line"><a name="l02215"></a><span class="lineno"><a class="line" href="a00202.xhtml#aaa3f679452ae4803a75e8fb27dd1598b"> 2215</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#aaa3f679452ae4803a75e8fb27dd1598b">XMLPrinter::PushDeclaration</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* value )</div>
<div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;{</div>
<div class="line"><a name="l02217"></a><span class="lineno"> 2217</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> ) {</div>
<div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;        <a class="code" href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc">SealElement</a>();</div>
<div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;    }</div>
<div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> &lt; 0 &amp;&amp; !<a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> &amp;&amp; !<a class="code" href="a00202.xhtml#a31deafc5a71b696468fc87e79f45ba58">_compactMode</a>) {</div>
<div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;        <a class="code" href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de">PrintSpace</a>( <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a> );</div>
<div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;    }</div>
<div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;    <a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;    <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&lt;?%s?&gt;&quot;</span>, value );</div>
<div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;}</div>
<div class="line"><a name="l02227"></a><span class="lineno"> 2227</span>&#160;</div>
<div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;</div>
<div class="line"><a name="l02229"></a><span class="lineno"><a class="line" href="a00202.xhtml#ae4b518424d5c7907f02232f2b4c51eca"> 2229</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00202.xhtml#ae4b518424d5c7907f02232f2b4c51eca">XMLPrinter::PushUnknown</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* value )</div>
<div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;{</div>
<div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">_elementJustOpened</a> ) {</div>
<div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;        <a class="code" href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc">SealElement</a>();</div>
<div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;    }</div>
<div class="line"><a name="l02234"></a><span class="lineno"> 2234</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">_textDepth</a> &lt; 0 &amp;&amp; !<a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> &amp;&amp; !<a class="code" href="a00202.xhtml#a31deafc5a71b696468fc87e79f45ba58">_compactMode</a>) {</div>
<div class="line"><a name="l02235"></a><span class="lineno"> 2235</span>&#160;        <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l02236"></a><span class="lineno"> 2236</span>&#160;        <a class="code" href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de">PrintSpace</a>( <a class="code" href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">_depth</a> );</div>
<div class="line"><a name="l02237"></a><span class="lineno"> 2237</span>&#160;    }</div>
<div class="line"><a name="l02238"></a><span class="lineno"> 2238</span>&#160;    <a class="code" href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">_firstElement</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l02239"></a><span class="lineno"> 2239</span>&#160;    <a class="code" href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">Print</a>( <span class="stringliteral">&quot;&lt;!%s&gt;&quot;</span>, value );</div>
<div class="line"><a name="l02240"></a><span class="lineno"> 2240</span>&#160;}</div>
<div class="line"><a name="l02241"></a><span class="lineno"> 2241</span>&#160;</div>
<div class="line"><a name="l02242"></a><span class="lineno"> 2242</span>&#160;</div>
<div class="line"><a name="l02243"></a><span class="lineno"><a class="line" href="a00202.xhtml#ad435597c3719cf0521c39d0720ffdf77"> 2243</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00202.xhtml#ad435597c3719cf0521c39d0720ffdf77">XMLPrinter::VisitEnter</a>( <span class="keyword">const</span> <a class="code" href="a00198.xhtml">XMLDocument</a>&amp; doc )</div>
<div class="line"><a name="l02244"></a><span class="lineno"> 2244</span>&#160;{</div>
<div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;    <a class="code" href="a00202.xhtml#a6cf72b01e4ca8a088ef5cf3f99aa4619">_processEntities</a> = doc.<a class="code" href="a00198.xhtml#a94602229a737b6e7eb7c22149090b2c4">ProcessEntities</a>();</div>
<div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160;    <span class="keywordflow">if</span> ( doc.<a class="code" href="a00198.xhtml#aa7f8f96c55022e3e2d7dc4eb492860cf">HasBOM</a>() ) {</div>
<div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;        <a class="code" href="a00202.xhtml#a69111df3f67a582ee8b7d15de0cf08ea">PushHeader</a>( <span class="keyword">true</span>, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;    }</div>
<div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;}</div>
<div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;</div>
<div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;</div>
<div class="line"><a name="l02253"></a><span class="lineno"><a class="line" href="a00202.xhtml#a4b451a18ff455a3ba120179017af44de"> 2253</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00202.xhtml#ad435597c3719cf0521c39d0720ffdf77">XMLPrinter::VisitEnter</a>( <span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>&amp; element, <span class="keyword">const</span> <a class="code" href="a00194.xhtml">XMLAttribute</a>* attribute )</div>
<div class="line"><a name="l02254"></a><span class="lineno"> 2254</span>&#160;{</div>
<div class="line"><a name="l02255"></a><span class="lineno"> 2255</span>&#160;  <span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>* parentElem = element.<a class="code" href="a00201.xhtml#a5f038bc06894ab6f6914bf5841a9f53f">Parent</a>()-&gt;<a class="code" href="a00201.xhtml#a2ef2c6efbc6c9c76767770160d2d123d">ToElement</a>();</div>
<div class="line"><a name="l02256"></a><span class="lineno"> 2256</span>&#160;  <span class="keywordtype">bool</span>    compactMode = parentElem ? <a class="code" href="a00202.xhtml#aeb9b414dc70c361aa44b52d09a9a5e1e">CompactMode</a>(*parentElem) : <a class="code" href="a00202.xhtml#a31deafc5a71b696468fc87e79f45ba58">_compactMode</a>;</div>
<div class="line"><a name="l02257"></a><span class="lineno"> 2257</span>&#160;    <a class="code" href="a00202.xhtml#a51e42981371b82b64cac08d1248a7df7">OpenElement</a>( element.<a class="code" href="a00199.xhtml#afd22b33b33e7128f217f96ec5b2f1871">Name</a>(), compactMode );</div>
<div class="line"><a name="l02258"></a><span class="lineno"> 2258</span>&#160;    <span class="keywordflow">while</span> ( attribute ) {</div>
<div class="line"><a name="l02259"></a><span class="lineno"> 2259</span>&#160;        <a class="code" href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">PushAttribute</a>( attribute-&gt;<a class="code" href="a00194.xhtml#a8868ecb5debed3389128f2ec29bc399e">Name</a>(), attribute-&gt;<a class="code" href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">Value</a>() );</div>
<div class="line"><a name="l02260"></a><span class="lineno"> 2260</span>&#160;        attribute = attribute-&gt;<a class="code" href="a00194.xhtml#a8b773c004dcc3a093990492ebd4908b2">Next</a>();</div>
<div class="line"><a name="l02261"></a><span class="lineno"> 2261</span>&#160;    }</div>
<div class="line"><a name="l02262"></a><span class="lineno"> 2262</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;}</div>
<div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;</div>
<div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;</div>
<div class="line"><a name="l02266"></a><span class="lineno"><a class="line" href="a00202.xhtml#a2040dcd08333a4d06e5ff20ae7076e30"> 2266</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00202.xhtml#a88d3e942a37166ca72eb60b08cc76aab">XMLPrinter::VisitExit</a>( <span class="keyword">const</span> <a class="code" href="a00199.xhtml">XMLElement</a>&amp; element )</div>
<div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;{</div>
<div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;    <a class="code" href="a00202.xhtml#a410f06cffa2fd3ce75481b125b64344d">CloseElement</a>( <a class="code" href="a00202.xhtml#aeb9b414dc70c361aa44b52d09a9a5e1e">CompactMode</a>(element) );</div>
<div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;}</div>
<div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;</div>
<div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;</div>
<div class="line"><a name="l02273"></a><span class="lineno"><a class="line" href="a00202.xhtml#ae2661fa12bc3d2a0907d2d6aed03020b"> 2273</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00202.xhtml#ae2661fa12bc3d2a0907d2d6aed03020b">XMLPrinter::Visit</a>( <span class="keyword">const</span> <a class="code" href="a00203.xhtml">XMLText</a>&amp; text )</div>
<div class="line"><a name="l02274"></a><span class="lineno"> 2274</span>&#160;{</div>
<div class="line"><a name="l02275"></a><span class="lineno"> 2275</span>&#160;    <a class="code" href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">PushText</a>( text.<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>(), text.<a class="code" href="a00203.xhtml#a98f45fac97f30ec41d7aaa2f4a5fdf17">CData</a>() );</div>
<div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02277"></a><span class="lineno"> 2277</span>&#160;}</div>
<div class="line"><a name="l02278"></a><span class="lineno"> 2278</span>&#160;</div>
<div class="line"><a name="l02279"></a><span class="lineno"> 2279</span>&#160;</div>
<div class="line"><a name="l02280"></a><span class="lineno"><a class="line" href="a00202.xhtml#abcfc8b0af0a714ade80976275f530ae7"> 2280</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00202.xhtml#ae2661fa12bc3d2a0907d2d6aed03020b">XMLPrinter::Visit</a>( <span class="keyword">const</span> <a class="code" href="a00195.xhtml">XMLComment</a>&amp; comment )</div>
<div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160;{</div>
<div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;    <a class="code" href="a00202.xhtml#af22c1599559dfcf088cb83d496954254">PushComment</a>( comment.<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() );</div>
<div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02284"></a><span class="lineno"> 2284</span>&#160;}</div>
<div class="line"><a name="l02285"></a><span class="lineno"> 2285</span>&#160;</div>
<div class="line"><a name="l02286"></a><span class="lineno"><a class="line" href="a00202.xhtml#aa1df6579573094ba842131bd37294005"> 2286</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00202.xhtml#ae2661fa12bc3d2a0907d2d6aed03020b">XMLPrinter::Visit</a>( <span class="keyword">const</span> <a class="code" href="a00197.xhtml">XMLDeclaration</a>&amp; declaration )</div>
<div class="line"><a name="l02287"></a><span class="lineno"> 2287</span>&#160;{</div>
<div class="line"><a name="l02288"></a><span class="lineno"> 2288</span>&#160;    <a class="code" href="a00202.xhtml#aaa3f679452ae4803a75e8fb27dd1598b">PushDeclaration</a>( declaration.<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() );</div>
<div class="line"><a name="l02289"></a><span class="lineno"> 2289</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02290"></a><span class="lineno"> 2290</span>&#160;}</div>
<div class="line"><a name="l02291"></a><span class="lineno"> 2291</span>&#160;</div>
<div class="line"><a name="l02292"></a><span class="lineno"> 2292</span>&#160;</div>
<div class="line"><a name="l02293"></a><span class="lineno"><a class="line" href="a00202.xhtml#a100e317bedf55f9ccba58554c9c0b39b"> 2293</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00202.xhtml#ae2661fa12bc3d2a0907d2d6aed03020b">XMLPrinter::Visit</a>( <span class="keyword">const</span> <a class="code" href="a00204.xhtml">XMLUnknown</a>&amp; unknown )</div>
<div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160;{</div>
<div class="line"><a name="l02295"></a><span class="lineno"> 2295</span>&#160;    <a class="code" href="a00202.xhtml#ae4b518424d5c7907f02232f2b4c51eca">PushUnknown</a>( unknown.<a class="code" href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">Value</a>() );</div>
<div class="line"><a name="l02296"></a><span class="lineno"> 2296</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02297"></a><span class="lineno"> 2297</span>&#160;}</div>
<div class="line"><a name="l02298"></a><span class="lineno"> 2298</span>&#160;</div>
<div class="line"><a name="l02299"></a><span class="lineno"> 2299</span>&#160;}   <span class="comment">// namespace tinyxml2</span></div>
<div class="line"><a name="l02300"></a><span class="lineno"> 2300</span>&#160;</div>
<div class="ttc" id="a00199_xhtml_a824774b2d0c2b797d028a5e2434d3759"><div class="ttname"><a href="a00199.xhtml#a824774b2d0c2b797d028a5e2434d3759">TinyXML2::XMLElement::Attribute</a></div><div class="ttdeci">const char * Attribute(const char *name, const char *value=0) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01280">TinyXML2.cpp:1280</a></div></div>
<div class="ttc" id="a00397_xhtml"><div class="ttname"><a href="a00397.xhtml">int</a></div></div>
<div class="ttc" id="a00050_xhtml_aa57d94f1bc348e58f6f1381187807ffa"><div class="ttname"><a href="a00050.xhtml#aa57d94f1bc348e58f6f1381187807ffa">TinyXML2::DynArray::PushArr</a></div><div class="ttdeci">T * PushArr(int count)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00255">TinyXML2.h:255</a></div></div>
<div class="ttc" id="a00199_xhtml_a67fe3c235bdf597abb2b2c1287135c73"><div class="ttname"><a href="a00199.xhtml#a67fe3c235bdf597abb2b2c1287135c73">TinyXML2::XMLElement::_closingType</a></div><div class="ttdeci">int _closingType</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01520">TinyXML2.h:1520</a></div></div>
<div class="ttc" id="a00133_xhtml_aa49c81c2847e30ec02d2cb971de60eab"><div class="ttname"><a href="a00133.xhtml#aa49c81c2847e30ec02d2cb971de60eab">TinyXML2::StrPair::TransferTo</a></div><div class="ttdeci">void TransferTo(StrPair *other)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00078">TinyXML2.cpp:78</a></div></div>
<div class="ttc" id="a00197_xhtml_aa89f796d04ddf4a87cbaaf847df3726f"><div class="ttname"><a href="a00197.xhtml#aa89f796d04ddf4a87cbaaf847df3726f">TinyXML2::XMLDeclaration::ShallowEqual</a></div><div class="ttdeci">virtual bool ShallowEqual(const XMLNode *compare) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01052">TinyXML2.cpp:1052</a></div></div>
<div class="ttc" id="a00202_xhtml_a31deafc5a71b696468fc87e79f45ba58"><div class="ttname"><a href="a00202.xhtml#a31deafc5a71b696468fc87e79f45ba58">TinyXML2::XMLPrinter::_compactMode</a></div><div class="ttdeci">bool _compactMode</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02098">TinyXML2.h:2098</a></div></div>
<div class="ttc" id="a00198_xhtml_ac1e0563501cc46d66cdb3dd253332d49"><div class="ttname"><a href="a00198.xhtml#ac1e0563501cc46d66cdb3dd253332d49">TinyXML2::XMLDocument::_errorStr2</a></div><div class="ttdeci">const char * _errorStr2</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01736">TinyXML2.h:1736</a></div></div>
<div class="ttc" id="a00194_xhtml"><div class="ttname"><a href="a00194.xhtml">TinyXML2::XMLAttribute</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01065">TinyXML2.h:1065</a></div></div>
<div class="ttc" id="a00201_xhtml_ae64fa52593db503652ee0258bf69d376"><div class="ttname"><a href="a00201.xhtml#ae64fa52593db503652ee0258bf69d376">TinyXML2::XMLNode::DeleteNode</a></div><div class="ttdeci">static void DeleteNode(XMLNode *node)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00904">TinyXML2.cpp:904</a></div></div>
<div class="ttc" id="a00133_xhtml_a7d56cd79475b9e7e6349134b89331311"><div class="ttname"><a href="a00133.xhtml#a7d56cd79475b9e7e6349134b89331311">TinyXML2::StrPair::CollapseWhitespace</a></div><div class="ttdeci">void CollapseWhitespace()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00163">TinyXML2.cpp:163</a></div></div>
<div class="ttc" id="a00198_xhtml_a373fbb58d1a7b34df617d1269bfb0ffa"><div class="ttname"><a href="a00198.xhtml#a373fbb58d1a7b34df617d1269bfb0ffa">TinyXML2::XMLDocument::SaveFile</a></div><div class="ttdeci">XMLError SaveFile(const char *filename, bool compact=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01819">TinyXML2.cpp:1819</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5c744e506654df019e2794c5dd25699"><div class="ttname"><a href="a00201.xhtml#ab5c744e506654df019e2794c5dd25699">TinyXML2::XMLNode::GetDocument</a></div><div class="ttdeci">const XMLDocument * GetDocument() const </div><div class="ttdoc">Get the XMLDocument that owns this XMLNode. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00653">TinyXML2.h:653</a></div></div>
<div class="ttc" id="a00199_xhtml_a20d987889ace8646249a60bfc5492fd3"><div class="ttname"><a href="a00199.xhtml#a20d987889ace8646249a60bfc5492fd3">TinyXML2::XMLElement::FirstAttribute</a></div><div class="ttdeci">const XMLAttribute * FirstAttribute() const </div><div class="ttdoc">Return the first attribute in the list. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01374">TinyXML2.h:1374</a></div></div>
<div class="ttc" id="a00204_xhtml"><div class="ttname"><a href="a00204.xhtml">TinyXML2::XMLUnknown</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01033">TinyXML2.h:1033</a></div></div>
<div class="ttc" id="a00201_xhtml_a86cc8875788543eee38da2b8f35efabc"><div class="ttname"><a href="a00201.xhtml#a86cc8875788543eee38da2b8f35efabc">TinyXML2::XMLNode::FirstChildElement</a></div><div class="ttdeci">const XMLElement * FirstChildElement(const char *value=0) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00770">TinyXML2.cpp:770</a></div></div>
<div class="ttc" id="a00203_xhtml_a0c6715890d2ac6b5972416a02896e1fb"><div class="ttname"><a href="a00203.xhtml#a0c6715890d2ac6b5972416a02896e1fb">TinyXML2::XMLText::Accept</a></div><div class="ttdeci">virtual bool Accept(XMLVisitor *visitor) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00961">TinyXML2.cpp:961</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a9bbf02bb29585a521dbf9335152d0ba7"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a9bbf02bb29585a521dbf9335152d0ba7">TinyXML2::XML_ERROR_PARSING</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00536">TinyXML2.h:536</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a88799ffe58541c67e96100f07e0a20e7"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a88799ffe58541c67e96100f07e0a20e7">TinyXML2::XML_ERROR_FILE_READ_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00524">TinyXML2.h:524</a></div></div>
<div class="ttc" id="a00197_xhtml"><div class="ttname"><a href="a00197.xhtml">TinyXML2::XMLDeclaration</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01001">TinyXML2.h:1001</a></div></div>
<div class="ttc" id="a00198_xhtml_a6882efe02d25892be9843afb46f36052"><div class="ttname"><a href="a00198.xhtml#a6882efe02d25892be9843afb46f36052">TinyXML2::XMLDocument::_elementPool</a></div><div class="ttdeci">MemPoolT&lt; sizeof(XMLElement) &gt; _elementPool</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01739">TinyXML2.h:1739</a></div></div>
<div class="ttc" id="a00197_xhtml_a15e09609a452799cb50fd0cfc233e15c"><div class="ttname"><a href="a00197.xhtml#a15e09609a452799cb50fd0cfc233e15c">TinyXML2::XMLDeclaration::XMLDeclaration</a></div><div class="ttdeci">XMLDeclaration(XMLDocument *doc)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01019">TinyXML2.cpp:1019</a></div></div>
<div class="ttc" id="a00201_xhtml_aa4c176052f5724527a78f403b4e507ee"><div class="ttname"><a href="a00201.xhtml#aa4c176052f5724527a78f403b4e507ee">TinyXML2::XMLNode::NextSiblingElement</a></div><div class="ttdeci">const XMLElement * NextSiblingElement(const char *value=0) const </div><div class="ttdoc">Get the next (right) sibling element of this node, with an optionally supplied name. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00798">TinyXML2.cpp:798</a></div></div>
<div class="ttc" id="a00194_xhtml_a4037788a612e1acac4e806ae917bce65"><div class="ttname"><a href="a00194.xhtml#a4037788a612e1acac4e806ae917bce65">TinyXML2::XMLAttribute::QueryFloatValue</a></div><div class="ttdeci">XMLError QueryFloatValue(float *value) const </div><div class="ttdoc">See QueryIntValue. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01189">TinyXML2.cpp:1189</a></div></div>
<div class="ttc" id="a00205_xhtml_a568fea7b3c469d8fae0e1f3480a0d96c"><div class="ttname"><a href="a00205.xhtml#a568fea7b3c469d8fae0e1f3480a0d96c">TinyXML2::XMLUtil::ConvertUTF32ToUTF8</a></div><div class="ttdeci">static void ConvertUTF32ToUTF8(unsigned long input, char *output, int *length)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00298">TinyXML2.cpp:298</a></div></div>
<div class="ttc" id="a00201_xhtml_a6fcd0b8fdee9cacd6b45e7802244c909"><div class="ttname"><a href="a00201.xhtml#a6fcd0b8fdee9cacd6b45e7802244c909">TinyXML2::XMLNode::_prev</a></div><div class="ttdeci">XMLNode * _prev</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00902">TinyXML2.h:902</a></div></div>
<div class="ttc" id="a00199_xhtml_adc21c65d535a3b4a741f18969e961c92"><div class="ttname"><a href="a00199.xhtml#adc21c65d535a3b4a741f18969e961c92">TinyXML2::XMLElement::QueryFloatText</a></div><div class="ttdeci">XMLError QueryFloatText(float *fval) const </div><div class="ttdoc">See QueryIntText() </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01405">TinyXML2.cpp:1405</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a5a941e561d15be89b11c6574149301e7"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a5a941e561d15be89b11c6574149301e7">TinyXML2::XML_ERROR_FILE_NOT_FOUND</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00522">TinyXML2.h:522</a></div></div>
<div class="ttc" id="a00199_xhtml_a0470fdbcbb2a16f10479b1d23d772225"><div class="ttname"><a href="a00199.xhtml#a0470fdbcbb2a16f10479b1d23d772225">TinyXML2::XMLElement::XMLElement</a></div><div class="ttdeci">XMLElement(XMLDocument *doc)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01252">TinyXML2.cpp:1252</a></div></div>
<div class="ttc" id="a00203_xhtml_a719ba88474f639c91c13e9f3c3691166"><div class="ttname"><a href="a00203.xhtml#a719ba88474f639c91c13e9f3c3691166">TinyXML2::XMLText::ShallowEqual</a></div><div class="ttdeci">virtual bool ShallowEqual(const XMLNode *compare) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00954">TinyXML2.cpp:954</a></div></div>
<div class="ttc" id="a00201_xhtml_a8ae11185b5fbb9620d71114c70b31368"><div class="ttname"><a href="a00201.xhtml#a8ae11185b5fbb9620d71114c70b31368">TinyXML2::XMLNode::InsertEndChild</a></div><div class="ttdeci">XMLNode * InsertEndChild(XMLNode *addThis)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00669">TinyXML2.cpp:669</a></div></div>
<div class="ttc" id="a00194_xhtml_a37effab97ca5300dacdec6ca00a04ad3"><div class="ttname"><a href="a00194.xhtml#a37effab97ca5300dacdec6ca00a04ad3">TinyXML2::XMLAttribute::QueryDoubleValue</a></div><div class="ttdeci">XMLError QueryDoubleValue(double *value) const </div><div class="ttdoc">See QueryIntValue. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01198">TinyXML2.cpp:1198</a></div></div>
<div class="ttc" id="a00202_xhtml_adc0b55a75420e8cbc9268bca2b8e40ac"><div class="ttname"><a href="a00202.xhtml#adc0b55a75420e8cbc9268bca2b8e40ac">TinyXML2::XMLPrinter::Print</a></div><div class="ttdeci">void Print(const char *format,...)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01949">TinyXML2.cpp:1949</a></div></div>
<div class="ttc" id="a00202_xhtml_ac77bbe5d53de6e5d3aea99e20f56069c"><div class="ttname"><a href="a00202.xhtml#ac77bbe5d53de6e5d3aea99e20f56069c">TinyXML2::XMLPrinter::_depth</a></div><div class="ttdeci">int _depth</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02095">TinyXML2.h:2095</a></div></div>
<div class="ttc" id="a00319_xhtml_a96f54d7c855ad92e705510904a040393"><div class="ttname"><a href="a00319.xhtml#a96f54d7c855ad92e705510904a040393">TIXML_SSCANF</a></div><div class="ttdeci">#define TIXML_SSCANF</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00129">TinyXML2.h:129</a></div></div>
<div class="ttc" id="a00202_xhtml_ad435597c3719cf0521c39d0720ffdf77"><div class="ttname"><a href="a00202.xhtml#ad435597c3719cf0521c39d0720ffdf77">TinyXML2::XMLPrinter::VisitEnter</a></div><div class="ttdeci">virtual bool VisitEnter(const XMLDocument &amp;)</div><div class="ttdoc">Visit a document. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02243">TinyXML2.cpp:2243</a></div></div>
<div class="ttc" id="a00202_xhtml"><div class="ttname"><a href="a00202.xhtml">TinyXML2::XMLPrinter</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01994">TinyXML2.h:1994</a></div></div>
<div class="ttc" id="a00205_xhtml_af0f1d719f7e1067ec06eeb2d687520a5"><div class="ttname"><a href="a00205.xhtml#af0f1d719f7e1067ec06eeb2d687520a5">TinyXML2::XMLUtil::StringEqual</a></div><div class="ttdeci">static bool StringEqual(const char *p, const char *q, int nChar=INT_MAX)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00579">TinyXML2.h:579</a></div></div>
<div class="ttc" id="a00050_xhtml_a5790b92694697e9566fdcaecd41cd49e"><div class="ttname"><a href="a00050.xhtml#a5790b92694697e9566fdcaecd41cd49e">TinyXML2::DynArray::Pop</a></div><div class="ttdeci">T Pop()</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00262">TinyXML2.h:262</a></div></div>
<div class="ttc" id="a00194_xhtml_a8b773c004dcc3a093990492ebd4908b2"><div class="ttname"><a href="a00194.xhtml#a8b773c004dcc3a093990492ebd4908b2">TinyXML2::XMLAttribute::Next</a></div><div class="ttdeci">const XMLAttribute * Next() const </div><div class="ttdoc">The next attribute in the list. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01076">TinyXML2.h:1076</a></div></div>
<div class="ttc" id="a00052_xhtml_a78d2d6df29ba9c8848a57e8400a997b1"><div class="ttname"><a href="a00052.xhtml#a78d2d6df29ba9c8848a57e8400a997b1">TinyXML2::Entity::value</a></div><div class="ttdeci">char value</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00059">TinyXML2.cpp:59</a></div></div>
<div class="ttc" id="a00195_xhtml"><div class="ttname"><a href="a00195.xhtml">TinyXML2::XMLComment</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00963">TinyXML2.h:963</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a66c0fd712f1d5fdd123fb663bf06b2fb"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a66c0fd712f1d5fdd123fb663bf06b2fb">TinyXML2::XML_ERROR_COUNT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00540">TinyXML2.h:540</a></div></div>
<div class="ttc" id="a00198_xhtml_a20554f58b1fbdc5a5e4986ca59126837"><div class="ttname"><a href="a00198.xhtml#a20554f58b1fbdc5a5e4986ca59126837">TinyXML2::XMLDocument::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clear the document, resetting it to the initial state. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01667">TinyXML2.cpp:1667</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6fac41926a45405298c40a3c98b0037502f"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fac41926a45405298c40a3c98b0037502f">TinyXML2::StrPair::ATTRIBUTE_VALUE_LEAVE_ENTITIES</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00174">TinyXML2.h:174</a></div></div>
<div class="ttc" id="a00205_xhtml_a4f28848a9d313016991adc7d0581458e"><div class="ttname"><a href="a00205.xhtml#a4f28848a9d313016991adc7d0581458e">TinyXML2::XMLUtil::ToFloat</a></div><div class="ttdeci">static bool ToFloat(const char *str, float *value)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00492">TinyXML2.cpp:492</a></div></div>
<div class="ttc" id="a00133_xhtml_a6e89623a22f1dd43bc4037d6fe6487c0"><div class="ttname"><a href="a00133.xhtml#a6e89623a22f1dd43bc4037d6fe6487c0">TinyXML2::StrPair::SetInternedStr</a></div><div class="ttdeci">void SetInternedStr(const char *str)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00194">TinyXML2.h:194</a></div></div>
<div class="ttc" id="a00205_xhtml_a843346320dbd62a317a34b25cafb1ba1"><div class="ttname"><a href="a00205.xhtml#a843346320dbd62a317a34b25cafb1ba1">TinyXML2::XMLUtil::ToUnsigned</a></div><div class="ttdeci">static bool ToUnsigned(const char *str, unsigned *value)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00465">TinyXML2.cpp:465</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a891d7a199688dc9deb7781f8bd5500b5"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a891d7a199688dc9deb7781f8bd5500b5">TinyXML2::XML_WRONG_ATTRIBUTE_TYPE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00521">TinyXML2.h:521</a></div></div>
<div class="ttc" id="a00198_xhtml_ac08d5b42d07bdd8956d9fec3e8c6e7b4"><div class="ttname"><a href="a00198.xhtml#ac08d5b42d07bdd8956d9fec3e8c6e7b4">TinyXML2::XMLDocument::Print</a></div><div class="ttdeci">void Print(XMLPrinter *streamer=0) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01879">TinyXML2.cpp:1879</a></div></div>
<div class="ttc" id="a00319_xhtml_afc6433f9b56e4f18833089b1df629e0a"><div class="ttname"><a href="a00319.xhtml#afc6433f9b56e4f18833089b1df629e0a">TIXML_SNPRINTF</a></div><div class="ttdeci">#define TIXML_SNPRINTF</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00128">TinyXML2.h:128</a></div></div>
<div class="ttc" id="a00199_xhtml_a6461265b324c3901b5d83d51e9560693"><div class="ttname"><a href="a00199.xhtml#a6461265b324c3901b5d83d51e9560693">TinyXML2::XMLElement::FindAttribute</a></div><div class="ttdeci">const XMLAttribute * FindAttribute(const char *name) const </div><div class="ttdoc">Query a specific attribute in the list. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01269">TinyXML2.cpp:1269</a></div></div>
<div class="ttc" id="a00201_xhtml_ac71764a70bec2eb37ed1ee30c97b2b51"><div class="ttname"><a href="a00201.xhtml#ac71764a70bec2eb37ed1ee30c97b2b51">TinyXML2::XMLNode::DeleteChildren</a></div><div class="ttdeci">void DeleteChildren()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00628">TinyXML2.cpp:628</a></div></div>
<div class="ttc" id="a00133_xhtml_a5e2c5bd32ba79f32f219cf9301c2bce6"><div class="ttname"><a href="a00133.xhtml#a5e2c5bd32ba79f32f219cf9301c2bce6">TinyXML2::StrPair::GetStr</a></div><div class="ttdeci">const char * GetStr()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00192">TinyXML2.cpp:192</a></div></div>
<div class="ttc" id="a00133_xhtml"><div class="ttname"><a href="a00133.xhtml">TinyXML2::StrPair</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00162">TinyXML2.h:162</a></div></div>
<div class="ttc" id="a00198_xhtml_acb0f4bc5afe609f8fea49d4bd073a48c"><div class="ttname"><a href="a00198.xhtml#acb0f4bc5afe609f8fea49d4bd073a48c">TinyXML2::XMLDocument::ErrorName</a></div><div class="ttdeci">const char * ErrorName() const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01897">TinyXML2.cpp:1897</a></div></div>
<div class="ttc" id="a00133_xhtml_a8dc70245f3bdc3dcdfb94aabaa4ab3b0"><div class="ttname"><a href="a00133.xhtml#a8dc70245f3bdc3dcdfb94aabaa4ab3b0">TinyXML2::StrPair::_start</a></div><div class="ttdeci">char * _start</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00217">TinyXML2.h:217</a></div></div>
<div class="ttc" id="a00199_xhtml_a66fb22f8dcc79b96229572b2149e22d8"><div class="ttname"><a href="a00199.xhtml#a66fb22f8dcc79b96229572b2149e22d8">TinyXML2::XMLElement::ClosingType</a></div><div class="ttdeci">int ClosingType() const </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01498">TinyXML2.h:1498</a></div></div>
<div class="ttc" id="a00052_xhtml_a40262273783df3568a3c344adbe3baa1"><div class="ttname"><a href="a00052.xhtml#a40262273783df3568a3c344adbe3baa1">TinyXML2::Entity::length</a></div><div class="ttdeci">int length</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00058">TinyXML2.cpp:58</a></div></div>
<div class="ttc" id="a00203_xhtml"><div class="ttname"><a href="a00203.xhtml">TinyXML2::XMLText</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00924">TinyXML2.h:924</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6fa66ff62847ced7ac17c68df6f5c2e589c"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa66ff62847ced7ac17c68df6f5c2e589c">TinyXML2::StrPair::NEEDS_ENTITY_PROCESSING</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00166">TinyXML2.h:166</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6fa6f9e2d223bcf705cc6487c90d466bf9c"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa6f9e2d223bcf705cc6487c90d466bf9c">TinyXML2::StrPair::NEEDS_NEWLINE_NORMALIZATION</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00167">TinyXML2.h:167</a></div></div>
<div class="ttc" id="a00194_xhtml_ae4db412ad0a77e732dd666123d019179"><div class="ttname"><a href="a00194.xhtml#ae4db412ad0a77e732dd666123d019179">TinyXML2::XMLAttribute::_value</a></div><div class="ttdeci">StrPair _value</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01154">TinyXML2.h:1154</a></div></div>
<div class="ttc" id="a00198_xhtml_a38edba63c6f6b5de49f4ece2ba14dd8d"><div class="ttname"><a href="a00198.xhtml#a38edba63c6f6b5de49f4ece2ba14dd8d">TinyXML2::XMLDocument::SetError</a></div><div class="ttdeci">void SetError(XMLError error, const char *str1, const char *str2)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01889">TinyXML2.cpp:1889</a></div></div>
<div class="ttc" id="a00202_xhtml_a53f283a8d996056061838fd9e9a85237"><div class="ttname"><a href="a00202.xhtml#a53f283a8d996056061838fd9e9a85237">TinyXML2::XMLPrinter::_elementJustOpened</a></div><div class="ttdeci">bool _elementJustOpened</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02087">TinyXML2.h:2087</a></div></div>
<div class="ttc" id="a00199_xhtml_a9d2265e20a35a0471088c8fc33289583"><div class="ttname"><a href="a00199.xhtml#a9d2265e20a35a0471088c8fc33289583">TinyXML2::XMLElement::DeleteAttribute</a></div><div class="ttdeci">void DeleteAttribute(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01446">TinyXML2.cpp:1446</a></div></div>
<div class="ttc" id="a00194_xhtml_a8868ecb5debed3389128f2ec29bc399e"><div class="ttname"><a href="a00194.xhtml#a8868ecb5debed3389128f2ec29bc399e">TinyXML2::XMLAttribute::Name</a></div><div class="ttdeci">const char * Name() const </div><div class="ttdoc">The name of the attribute. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01118">TinyXML2.cpp:1118</a></div></div>
<div class="ttc" id="a00204_xhtml_a2606af690e60499209f7f45ef1f6f9c3"><div class="ttname"><a href="a00204.xhtml#a2606af690e60499209f7f45ef1f6f9c3">TinyXML2::XMLUnknown::XMLUnknown</a></div><div class="ttdeci">XMLUnknown(XMLDocument *doc)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01069">TinyXML2.cpp:1069</a></div></div>
<div class="ttc" id="a00201_xhtml_a4cb5b246b9cb53405776c36bf67f36c1"><div class="ttname"><a href="a00201.xhtml#a4cb5b246b9cb53405776c36bf67f36c1">TinyXML2::XMLNode::ToUnknown</a></div><div class="ttdeci">virtual XMLUnknown * ToUnknown()</div><div class="ttdoc">Safely cast to an Unknown, or null. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00682">TinyXML2.h:682</a></div></div>
<div class="ttc" id="a00198_xhtml_abf67de61c0ec2e963d1aed3e0c4439e8"><div class="ttname"><a href="a00198.xhtml#abf67de61c0ec2e963d1aed3e0c4439e8">TinyXML2::XMLDocument::_charBuffer</a></div><div class="ttdeci">char * _charBuffer</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01737">TinyXML2.h:1737</a></div></div>
<div class="ttc" id="a00202_xhtml_a5a6b6d6ea01bcc4c1b11480290dd46b5ab43b7084e3e3f6859c571572a52f23a0"><div class="ttname"><a href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5ab43b7084e3e3f6859c571572a52f23a0">TinyXML2::XMLPrinter::ENTITY_RANGE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02101">TinyXML2.h:2101</a></div></div>
<div class="ttc" id="a00201_xhtml_a76031498d32776e907d2ba79b7029b18"><div class="ttname"><a href="a00201.xhtml#a76031498d32776e907d2ba79b7029b18">TinyXML2::XMLNode::Value</a></div><div class="ttdeci">const char * Value() const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00612">TinyXML2.cpp:612</a></div></div>
<div class="ttc" id="a00133_xhtml_a58a9dd6aeb52f818342b72636661c928"><div class="ttname"><a href="a00133.xhtml#a58a9dd6aeb52f818342b72636661c928">TinyXML2::StrPair::_end</a></div><div class="ttdeci">char * _end</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00218">TinyXML2.h:218</a></div></div>
<div class="ttc" id="a00199_xhtml_a6ab4f6a3ad156db7daab35c9218d9f4a"><div class="ttname"><a href="a00199.xhtml#a6ab4f6a3ad156db7daab35c9218d9f4a">TinyXML2::XMLElement::ToElement</a></div><div class="ttdeci">virtual XMLElement * ToElement()</div><div class="ttdoc">Safely cast to an Element, or null. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01178">TinyXML2.h:1178</a></div></div>
<div class="ttc" id="a00199_xhtml_a102accd4d1deceb158c8c3fb4c4b2fe6"><div class="ttname"><a href="a00199.xhtml#a102accd4d1deceb158c8c3fb4c4b2fe6">TinyXML2::XMLElement::Accept</a></div><div class="ttdeci">virtual bool Accept(XMLVisitor *visitor) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01606">TinyXML2.cpp:1606</a></div></div>
<div class="ttc" id="a00201_xhtml_a1959951484643d4d29dd52eabc30e314"><div class="ttname"><a href="a00201.xhtml#a1959951484643d4d29dd52eabc30e314">TinyXML2::XMLNode::_parent</a></div><div class="ttdeci">XMLNode * _parent</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00896">TinyXML2.h:896</a></div></div>
<div class="ttc" id="a00199_xhtml_a4a5e98979332d1a44f7bf646d5893f3b"><div class="ttname"><a href="a00199.xhtml#a4a5e98979332d1a44f7bf646d5893f3b">TinyXML2::XMLElement::QueryUnsignedText</a></div><div class="ttdeci">XMLError QueryUnsignedText(unsigned *uval) const </div><div class="ttdoc">See QueryIntText() </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01366">TinyXML2.cpp:1366</a></div></div>
<div class="ttc" id="a00133_xhtml_a7907910f1687d5028c138b3d2aa18f5ba3653bbc25d655e333f8ecd3bd9d805f5"><div class="ttname"><a href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba3653bbc25d655e333f8ecd3bd9d805f5">TinyXML2::StrPair::NEEDS_FLUSH</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00211">TinyXML2.h:211</a></div></div>
<div class="ttc" id="a00133_xhtml_a6cb2da1d707d90e015006ba9d0295356"><div class="ttname"><a href="a00133.xhtml#a6cb2da1d707d90e015006ba9d0295356">TinyXML2::StrPair::~StrPair</a></div><div class="ttdeci">~StrPair()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00072">TinyXML2.cpp:72</a></div></div>
<div class="ttc" id="a00197_xhtml_a6e32f30fbdec75b25799ee9b476d9104"><div class="ttname"><a href="a00197.xhtml#a6e32f30fbdec75b25799ee9b476d9104">TinyXML2::XMLDeclaration::ParseDeep</a></div><div class="ttdeci">char * ParseDeep(char *, StrPair *endTag)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01030">TinyXML2.cpp:1030</a></div></div>
<div class="ttc" id="a00205_xhtml_aba48680e0f80b37e9d9bab73ffedc548"><div class="ttname"><a href="a00205.xhtml#aba48680e0f80b37e9d9bab73ffedc548">TinyXML2::XMLUtil::IsNameChar</a></div><div class="ttdeci">static bool IsNameChar(unsigned char ch)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00572">TinyXML2.h:572</a></div></div>
<div class="ttc" id="a00199_xhtml_ad0f8edb7feb82def4e5245a9650f80fc"><div class="ttname"><a href="a00199.xhtml#ad0f8edb7feb82def4e5245a9650f80fc">TinyXML2::XMLElement::SetText</a></div><div class="ttdeci">void SetText(const char *inText)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01302">TinyXML2.cpp:1302</a></div></div>
<div class="ttc" id="a00201_xhtml_a1e2c7a0d50f222702e1f2226c175b0c2"><div class="ttname"><a href="a00201.xhtml#a1e2c7a0d50f222702e1f2226c175b0c2">TinyXML2::XMLNode::ToComment</a></div><div class="ttdeci">virtual XMLComment * ToComment()</div><div class="ttdoc">Safely cast to a Comment, or null. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00670">TinyXML2.h:670</a></div></div>
<div class="ttc" id="a00202_xhtml_adbed404cbf923009d5d09d77465dd704"><div class="ttname"><a href="a00202.xhtml#adbed404cbf923009d5d09d77465dd704">TinyXML2::XMLPrinter::_restrictedEntityFlag</a></div><div class="ttdeci">bool _restrictedEntityFlag[ENTITY_RANGE]</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02105">TinyXML2.h:2105</a></div></div>
<div class="ttc" id="a00205_xhtml_a25dd8394af7cc2735c3b08c4613d401a"><div class="ttname"><a href="a00205.xhtml#a25dd8394af7cc2735c3b08c4613d401a">TinyXML2::XMLUtil::ToBool</a></div><div class="ttdeci">static bool ToBool(const char *str, bool *value)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00473">TinyXML2.cpp:473</a></div></div>
<div class="ttc" id="a00202_xhtml_a121d74998ff1d97d57aa486c1905faef"><div class="ttname"><a href="a00202.xhtml#a121d74998ff1d97d57aa486c1905faef">TinyXML2::XMLPrinter::_entityFlag</a></div><div class="ttdeci">bool _entityFlag[ENTITY_RANGE]</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02104">TinyXML2.h:2104</a></div></div>
<div class="ttc" id="a00198_xhtml_a7d3e915ac54b0b32f72a2a7910225630"><div class="ttname"><a href="a00198.xhtml#a7d3e915ac54b0b32f72a2a7910225630">TinyXML2::XMLDocument::NewText</a></div><div class="ttdeci">XMLText * NewText(const char *text)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01717">TinyXML2.cpp:1717</a></div></div>
<div class="ttc" id="a00198_xhtml_a358e6212710ba0ab608aec8f8b4aa999"><div class="ttname"><a href="a00198.xhtml#a358e6212710ba0ab608aec8f8b4aa999">TinyXML2::XMLDocument::PrintError</a></div><div class="ttdeci">void PrintError() const </div><div class="ttdoc">If there is an error, print it to stdout. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01903">TinyXML2.cpp:1903</a></div></div>
<div class="ttc" id="a00133_xhtml_a1afb202191668ec8e922e875c35c8c94"><div class="ttname"><a href="a00133.xhtml#a1afb202191668ec8e922e875c35c8c94">TinyXML2::StrPair::Empty</a></div><div class="ttdeci">bool Empty() const </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00190">TinyXML2.h:190</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656affe7fef955419cd2dd3348a3363ce4a1"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656affe7fef955419cd2dd3348a3363ce4a1">TinyXML2::XML_ERROR_PARSING_UNKNOWN</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00533">TinyXML2.h:533</a></div></div>
<div class="ttc" id="a00201_xhtml_ab5452cb997f7f989bdfe590b28c0abe6"><div class="ttname"><a href="a00201.xhtml#ab5452cb997f7f989bdfe590b28c0abe6">TinyXML2::XMLNode::_document</a></div><div class="ttdeci">XMLDocument * _document</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00895">TinyXML2.h:895</a></div></div>
<div class="ttc" id="a00201_xhtml_abacd334fbb331a53cf18114b260e4bb3"><div class="ttname"><a href="a00201.xhtml#abacd334fbb331a53cf18114b260e4bb3">TinyXML2::XMLNode::ToText</a></div><div class="ttdeci">virtual XMLText * ToText()</div><div class="ttdoc">Safely cast to Text, or null. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00666">TinyXML2.h:666</a></div></div>
<div class="ttc" id="a00198_xhtml_a8302f8ca7f1ed6dd2690e3875f968a32"><div class="ttname"><a href="a00198.xhtml#a8302f8ca7f1ed6dd2690e3875f968a32">TinyXML2::XMLDocument::Error</a></div><div class="ttdeci">bool Error() const </div><div class="ttdoc">Return true if there was an error parsing the document. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01694">TinyXML2.h:1694</a></div></div>
<div class="ttc" id="a00133_xhtml_acb766a3f2144ff1e37aaf3a130db993e"><div class="ttname"><a href="a00133.xhtml#acb766a3f2144ff1e37aaf3a130db993e">TinyXML2::StrPair::Set</a></div><div class="ttdeci">void Set(char *start, char *end, int flags)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00181">TinyXML2.h:181</a></div></div>
<div class="ttc" id="a00133_xhtml_a8d21246f67287932bba28e6393f5ea2c"><div class="ttname"><a href="a00133.xhtml#a8d21246f67287932bba28e6393f5ea2c">TinyXML2::StrPair::SetStr</a></div><div class="ttdeci">void SetStr(const char *str, int flags=0)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00112">TinyXML2.cpp:112</a></div></div>
<div class="ttc" id="a00198_xhtml_acd797bae5ddb1ab5c5cfbf1f76dbec2b"><div class="ttname"><a href="a00198.xhtml#acd797bae5ddb1ab5c5cfbf1f76dbec2b">TinyXML2::XMLDocument::_errorID</a></div><div class="ttdeci">XMLError _errorID</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01733">TinyXML2.h:1733</a></div></div>
<div class="ttc" id="a00202_xhtml_ae4b518424d5c7907f02232f2b4c51eca"><div class="ttname"><a href="a00202.xhtml#ae4b518424d5c7907f02232f2b4c51eca">TinyXML2::XMLPrinter::PushUnknown</a></div><div class="ttdeci">void PushUnknown(const char *value)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02229">TinyXML2.cpp:2229</a></div></div>
<div class="ttc" id="a00204_xhtml_af73a7cb95fd6d32558912e0d3111d3e2"><div class="ttname"><a href="a00204.xhtml#af73a7cb95fd6d32558912e0d3111d3e2">TinyXML2::XMLUnknown::~XMLUnknown</a></div><div class="ttdeci">virtual ~XMLUnknown()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01074">TinyXML2.cpp:1074</a></div></div>
<div class="ttc" id="a00201_xhtml_a8b1ca00b71ef6447eb27f63d81ce548d"><div class="ttname"><a href="a00201.xhtml#a8b1ca00b71ef6447eb27f63d81ce548d">TinyXML2::XMLNode::LastChildElement</a></div><div class="ttdeci">const XMLElement * LastChildElement(const char *value=0) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00784">TinyXML2.cpp:784</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6fad1d1b61640512c641b60db597bb2edcf"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fad1d1b61640512c641b60db597bb2edcf">TinyXML2::StrPair::COLLAPSE_WHITESPACE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00168">TinyXML2.h:168</a></div></div>
<div class="ttc" id="a00202_xhtml_a2b2e57355330eb95489fa05dac639da1"><div class="ttname"><a href="a00202.xhtml#a2b2e57355330eb95489fa05dac639da1">TinyXML2::XMLPrinter::PushAttribute</a></div><div class="ttdeci">void PushAttribute(const char *name, const char *value)</div><div class="ttdoc">If streaming, add an attribute to an open element. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02070">TinyXML2.cpp:2070</a></div></div>
<div class="ttc" id="a00390_xhtml_ggab7696696807cf77b45c5cc8a44dcd90dae5724ff792095d5c52977294c1925dbe"><div class="ttname"><a href="a00390.xhtml#ggab7696696807cf77b45c5cc8a44dcd90dae5724ff792095d5c52977294c1925dbe">TinyXML2::COLLAPSE_WHITESPACE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01530">TinyXML2.h:1530</a></div></div>
<div class="ttc" id="a00199_xhtml_af5d64f466a0b18f38183e4e9437bd5bd"><div class="ttname"><a href="a00199.xhtml#af5d64f466a0b18f38183e4e9437bd5bd">TinyXML2::XMLElement::QueryBoolText</a></div><div class="ttdeci">XMLError QueryBoolText(bool *bval) const </div><div class="ttdoc">See QueryIntText() </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01379">TinyXML2.cpp:1379</a></div></div>
<div class="ttc" id="a00194_xhtml_af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795"><div class="ttname"><a href="a00194.xhtml#af575d44c80a2de5e0f1c9200ad708769afbd586fdc235fbb55ac2ae01e8de2795">TinyXML2::XMLAttribute::BUF_SIZE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01142">TinyXML2.h:1142</a></div></div>
<div class="ttc" id="a00201_xhtml_a0fe718d6c3d1252c48992c1adc1ce93b"><div class="ttname"><a href="a00201.xhtml#a0fe718d6c3d1252c48992c1adc1ce93b">TinyXML2::XMLNode::Unlink</a></div><div class="ttdeci">void Unlink(XMLNode *child)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00641">TinyXML2.cpp:641</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a146fe71576e510ef924ddfb36a0987cd"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a146fe71576e510ef924ddfb36a0987cd">TinyXML2::XML_ERROR_PARSING_ATTRIBUTE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00527">TinyXML2.h:527</a></div></div>
<div class="ttc" id="a00201_xhtml_ac70ccc62dd015847bf911e22a0fca172"><div class="ttname"><a href="a00201.xhtml#ac70ccc62dd015847bf911e22a0fca172">TinyXML2::XMLNode::XMLNode</a></div><div class="ttdeci">XMLNode(XMLDocument *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00594">TinyXML2.cpp:594</a></div></div>
<div class="ttc" id="a00197_xhtml_a49644cc372095559a185c3b1aea8f193"><div class="ttname"><a href="a00197.xhtml#a49644cc372095559a185c3b1aea8f193">TinyXML2::XMLDeclaration::~XMLDeclaration</a></div><div class="ttdeci">virtual ~XMLDeclaration()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01024">TinyXML2.cpp:1024</a></div></div>
<div class="ttc" id="a00202_xhtml_a721dab4541ef371089725f38db9eac06"><div class="ttname"><a href="a00202.xhtml#a721dab4541ef371089725f38db9eac06">TinyXML2::XMLPrinter::_firstElement</a></div><div class="ttdeci">bool _firstElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02093">TinyXML2.h:2093</a></div></div>
<div class="ttc" id="a00202_xhtml_ad954780201bf26d00578d7acf65b6800"><div class="ttname"><a href="a00202.xhtml#ad954780201bf26d00578d7acf65b6800">TinyXML2::XMLPrinter::_textDepth</a></div><div class="ttdeci">int _textDepth</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02096">TinyXML2.h:2096</a></div></div>
<div class="ttc" id="a00133_xhtml_a323f7549e32dd8102eafc04a748041fc"><div class="ttname"><a href="a00133.xhtml#a323f7549e32dd8102eafc04a748041fc">TinyXML2::StrPair::ParseName</a></div><div class="ttdeci">char * ParseName(char *in)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00143">TinyXML2.cpp:143</a></div></div>
<div class="ttc" id="a00198_xhtml_a9570cbfc60d507faad4fdc7ed53abf69"><div class="ttname"><a href="a00198.xhtml#a9570cbfc60d507faad4fdc7ed53abf69">TinyXML2::XMLDocument::_attributePool</a></div><div class="ttdeci">MemPoolT&lt; sizeof(XMLAttribute) &gt; _attributePool</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01740">TinyXML2.h:1740</a></div></div>
<div class="ttc" id="a00194_xhtml_a446d3d65226fa84cca9c038521bfa0e6"><div class="ttname"><a href="a00194.xhtml#a446d3d65226fa84cca9c038521bfa0e6">TinyXML2::XMLAttribute::Value</a></div><div class="ttdeci">const char * Value() const </div><div class="ttdoc">The value of the attribute. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01123">TinyXML2.cpp:1123</a></div></div>
<div class="ttc" id="a00203_xhtml_a48075a5d36447886eef9bb98b4db951d"><div class="ttname"><a href="a00203.xhtml#a48075a5d36447886eef9bb98b4db951d">TinyXML2::XMLText::ParseDeep</a></div><div class="ttdeci">char * ParseDeep(char *, StrPair *endTag)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00915">TinyXML2.cpp:915</a></div></div>
<div class="ttc" id="a00098_xhtml"><div class="ttname"><a href="a00098.xhtml">TinyXML2::MemPool</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00331">TinyXML2.h:331</a></div></div>
<div class="ttc" id="a00194_xhtml_aeb3f40e5032781658289c543a24a25c1"><div class="ttname"><a href="a00194.xhtml#aeb3f40e5032781658289c543a24a25c1">TinyXML2::XMLAttribute::QueryIntValue</a></div><div class="ttdeci">XMLError QueryIntValue(int *value) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01162">TinyXML2.cpp:1162</a></div></div>
<div class="ttc" id="a00202_xhtml_a0434e8616034c33d17083d8113a294b4"><div class="ttname"><a href="a00202.xhtml#a0434e8616034c33d17083d8113a294b4">TinyXML2::XMLPrinter::PushText</a></div><div class="ttdeci">void PushText(const char *text, bool cdata=false)</div><div class="ttdoc">Add a text node. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02144">TinyXML2.cpp:2144</a></div></div>
<div class="ttc" id="a00202_xhtml_a69111df3f67a582ee8b7d15de0cf08ea"><div class="ttname"><a href="a00202.xhtml#a69111df3f67a582ee8b7d15de0cf08ea">TinyXML2::XMLPrinter::PushHeader</a></div><div class="ttdeci">void PushHeader(bool writeBOM, bool writeDeclaration)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02037">TinyXML2.cpp:2037</a></div></div>
<div class="ttc" id="a00202_xhtml_a2db7bb356f93036da79d719cd13c96e5"><div class="ttname"><a href="a00202.xhtml#a2db7bb356f93036da79d719cd13c96e5">TinyXML2::XMLPrinter::PrintString</a></div><div class="ttdeci">void PrintString(const char *, bool restrictedEntitySet)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01999">TinyXML2.cpp:1999</a></div></div>
<div class="ttc" id="a00198_xhtml_a3df00f373065f116ed9488d10f6cc60c"><div class="ttname"><a href="a00198.xhtml#a3df00f373065f116ed9488d10f6cc60c">TinyXML2::XMLDocument::XMLDocument</a></div><div class="ttdeci">XMLDocument(bool processEntities=true, Whitespace=PRESERVE_WHITESPACE)</div><div class="ttdoc">constructor </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01647">TinyXML2.cpp:1647</a></div></div>
<div class="ttc" id="a00199_xhtml_a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974"><div class="ttname"><a href="a00199.xhtml#a720b61f3ba9253b0f562a8f01863e114a271a5e6254d0a42b41acb5fd89e26974">TinyXML2::XMLElement::BUF_SIZE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01519">TinyXML2.h:1519</a></div></div>
<div class="ttc" id="a00194_xhtml_a3bb8836bee3c3c3e2414d79020fdc027"><div class="ttname"><a href="a00194.xhtml#a3bb8836bee3c3c3e2414d79020fdc027">TinyXML2::XMLAttribute::QueryUnsignedValue</a></div><div class="ttdeci">XMLError QueryUnsignedValue(unsigned int *value) const </div><div class="ttdoc">See QueryIntValue. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01171">TinyXML2.cpp:1171</a></div></div>
<div class="ttc" id="a00202_xhtml_aed3f30b7b9c09a84cfd6ae8f4bb1f1de"><div class="ttname"><a href="a00202.xhtml#aed3f30b7b9c09a84cfd6ae8f4bb1f1de">TinyXML2::XMLPrinter::PrintSpace</a></div><div class="ttdeci">virtual void PrintSpace(int depth)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01991">TinyXML2.cpp:1991</a></div></div>
<div class="ttc" id="a00201_xhtml_a81d2f010536dc2ca37f74d40b074ac8d"><div class="ttname"><a href="a00201.xhtml#a81d2f010536dc2ca37f74d40b074ac8d">TinyXML2::XMLNode::FirstChild</a></div><div class="ttdeci">const XMLNode * FirstChild() const </div><div class="ttdoc">Get the first child node, or null if none exists. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00736">TinyXML2.h:736</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656aa471d625646e3f6add96f21463a3be19"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656aa471d625646e3f6add96f21463a3be19">TinyXML2::XML_ERROR_PARSING_COMMENT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00531">TinyXML2.h:531</a></div></div>
<div class="ttc" id="a00201_xhtml_a122044df0acdbc45e1a8d0d691a188e3"><div class="ttname"><a href="a00201.xhtml#a122044df0acdbc45e1a8d0d691a188e3">TinyXML2::XMLNode::_lastChild</a></div><div class="ttdeci">XMLNode * _lastChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00900">TinyXML2.h:900</a></div></div>
<div class="ttc" id="a00201_xhtml_a666a962d4e7ce40fad31a0d273659176"><div class="ttname"><a href="a00201.xhtml#a666a962d4e7ce40fad31a0d273659176">TinyXML2::XMLNode::ParseDeep</a></div><div class="ttdeci">virtual char * ParseDeep(char *, StrPair *)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00824">TinyXML2.cpp:824</a></div></div>
<div class="ttc" id="a00202_xhtml_a6cf72b01e4ca8a088ef5cf3f99aa4619"><div class="ttname"><a href="a00202.xhtml#a6cf72b01e4ca8a088ef5cf3f99aa4619">TinyXML2::XMLPrinter::_processEntities</a></div><div class="ttdeci">bool _processEntities</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02097">TinyXML2.h:2097</a></div></div>
<div class="ttc" id="a00198_xhtml_aa8c76e2ecbc64d912bb6c7244ada0d16"><div class="ttname"><a href="a00198.xhtml#aa8c76e2ecbc64d912bb6c7244ada0d16">TinyXML2::XMLDocument::NewUnknown</a></div><div class="ttdeci">XMLUnknown * NewUnknown(const char *text)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01735">TinyXML2.cpp:1735</a></div></div>
<div class="ttc" id="a00201_xhtml_a28b94200b666def2677964cb83df1569"><div class="ttname"><a href="a00201.xhtml#a28b94200b666def2677964cb83df1569">TinyXML2::XMLNode::DeleteChild</a></div><div class="ttdeci">void DeleteChild(XMLNode *node)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00661">TinyXML2.cpp:661</a></div></div>
<div class="ttc" id="a00201_xhtml_a104c1f0a0dc912d977631b4da9b56aa5"><div class="ttname"><a href="a00201.xhtml#a104c1f0a0dc912d977631b4da9b56aa5">TinyXML2::XMLNode::_firstChild</a></div><div class="ttdeci">XMLNode * _firstChild</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00899">TinyXML2.h:899</a></div></div>
<div class="ttc" id="a00198_xhtml_a6f714d611df15326a1ff41e31a39490d"><div class="ttname"><a href="a00198.xhtml#a6f714d611df15326a1ff41e31a39490d">TinyXML2::XMLDocument::~XMLDocument</a></div><div class="ttdeci">~XMLDocument()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01661">TinyXML2.cpp:1661</a></div></div>
<div class="ttc" id="a00194_xhtml_a10480389db9cf2773794c3c815461b90"><div class="ttname"><a href="a00194.xhtml#a10480389db9cf2773794c3c815461b90">TinyXML2::XMLAttribute::~XMLAttribute</a></div><div class="ttdeci">virtual ~XMLAttribute()</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01145">TinyXML2.h:1145</a></div></div>
<div class="ttc" id="a00201_xhtml_ae7eb7051f843bf705bbcf6551c13fd97"><div class="ttname"><a href="a00201.xhtml#ae7eb7051f843bf705bbcf6551c13fd97">TinyXML2::XMLNode::InsertFirstChild</a></div><div class="ttdeci">XMLNode * InsertFirstChild(XMLNode *addThis)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00702">TinyXML2.cpp:702</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a3d56d517ab199286c2813b9d29e867b1"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a3d56d517ab199286c2813b9d29e867b1">TinyXML2::XML_ERROR_PARSING_ELEMENT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00526">TinyXML2.h:526</a></div></div>
<div class="ttc" id="a00194_xhtml_ad243bb7bdbdb8906a211a683a1b7e0e6"><div class="ttname"><a href="a00194.xhtml#ad243bb7bdbdb8906a211a683a1b7e0e6">TinyXML2::XMLAttribute::_name</a></div><div class="ttdeci">StrPair _name</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01153">TinyXML2.h:1153</a></div></div>
<div class="ttc" id="a00194_xhtml_a63c839cfa95b0a88bdace75571e2e061"><div class="ttname"><a href="a00194.xhtml#a63c839cfa95b0a88bdace75571e2e061">TinyXML2::XMLAttribute::QueryBoolValue</a></div><div class="ttdeci">XMLError QueryBoolValue(bool *value) const </div><div class="ttdoc">See QueryIntValue. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01180">TinyXML2.cpp:1180</a></div></div>
<div class="ttc" id="a00199_xhtml_ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8"><div class="ttname"><a href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a39dbd5e6f37108d2034b17614fa437f8">TinyXML2::XMLElement::OPEN</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01494">TinyXML2.h:1494</a></div></div>
<div class="ttc" id="a00194_xhtml_ac93d475679bf1fb3e46418c012f238eb"><div class="ttname"><a href="a00194.xhtml#ac93d475679bf1fb3e46418c012f238eb">TinyXML2::XMLAttribute::SetName</a></div><div class="ttdeci">void SetName(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01156">TinyXML2.cpp:1156</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6faf789cc5c76c7eda06466f8b738c79190"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6faf789cc5c76c7eda06466f8b738c79190">TinyXML2::StrPair::TEXT_ELEMENT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00170">TinyXML2.h:170</a></div></div>
<div class="ttc" id="a00195_xhtml_a15a0eddf7fc540c4d5a3dbed6cb7e8b6"><div class="ttname"><a href="a00195.xhtml#a15a0eddf7fc540c4d5a3dbed6cb7e8b6">TinyXML2::XMLComment::ParseDeep</a></div><div class="ttdeci">char * ParseDeep(char *, StrPair *endTag)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00980">TinyXML2.cpp:980</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a7542914b1cfe6e38ab7bf720eaf129a3"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a7542914b1cfe6e38ab7bf720eaf129a3">TinyXML2::XML_SUCCESS</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00518">TinyXML2.h:518</a></div></div>
<div class="ttc" id="a00199_xhtml_a8eb0c41120e9da3a8648e6ca38a6596f"><div class="ttname"><a href="a00199.xhtml#a8eb0c41120e9da3a8648e6ca38a6596f">TinyXML2::XMLElement::SetAttribute</a></div><div class="ttdeci">void SetAttribute(const char *name, const char *value)</div><div class="ttdoc">Sets the named attribute to value. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01338">TinyXML2.h:1338</a></div></div>
<div class="ttc" id="a00201_xhtml"><div class="ttname"><a href="a00201.xhtml">TinyXML2::XMLNode</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00646">TinyXML2.h:646</a></div></div>
<div class="ttc" id="a00203_xhtml_a98f45fac97f30ec41d7aaa2f4a5fdf17"><div class="ttname"><a href="a00203.xhtml#a98f45fac97f30ec41d7aaa2f4a5fdf17">TinyXML2::XMLText::CData</a></div><div class="ttdeci">bool CData() const </div><div class="ttdoc">Returns true if this is a CDATA text element. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00943">TinyXML2.h:943</a></div></div>
<div class="ttc" id="a00201_xhtml_afa77fe36a3f0401eb576b2ee3152c58e"><div class="ttname"><a href="a00201.xhtml#afa77fe36a3f0401eb576b2ee3152c58e">TinyXML2::XMLNode::_next</a></div><div class="ttdeci">XMLNode * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00903">TinyXML2.h:903</a></div></div>
<div class="ttc" id="a00198_xhtml_a5e899350ec5132d5645c5064d57e24ca"><div class="ttname"><a href="a00198.xhtml#a5e899350ec5132d5645c5064d57e24ca">TinyXML2::XMLDocument::NewElement</a></div><div class="ttdeci">XMLElement * NewElement(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01699">TinyXML2.cpp:1699</a></div></div>
<div class="ttc" id="a00194_xhtml_aa3dd7a461cd63bea4781f89af1316fb6"><div class="ttname"><a href="a00194.xhtml#aa3dd7a461cd63bea4781f89af1316fb6">TinyXML2::XMLAttribute::SetAttribute</a></div><div class="ttdeci">void SetAttribute(const char *value)</div><div class="ttdoc">Set the attribute to a string value. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01207">TinyXML2.cpp:1207</a></div></div>
<div class="ttc" id="a00199_xhtml_aabede12b3e41647f936ed34ef8905a1d"><div class="ttname"><a href="a00199.xhtml#aabede12b3e41647f936ed34ef8905a1d">TinyXML2::XMLElement::SetName</a></div><div class="ttdeci">void SetName(const char *str, bool staticMem=false)</div><div class="ttdoc">Set the name of the element. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01174">TinyXML2.h:1174</a></div></div>
<div class="ttc" id="a00204_xhtml_a1a9b1c4c1144acbf5c9f8a3b6e4ec55c"><div class="ttname"><a href="a00204.xhtml#a1a9b1c4c1144acbf5c9f8a3b6e4ec55c">TinyXML2::XMLUnknown::ParseDeep</a></div><div class="ttdeci">char * ParseDeep(char *, StrPair *endTag)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01079">TinyXML2.cpp:1079</a></div></div>
<div class="ttc" id="a00198_xhtml"><div class="ttname"><a href="a00198.xhtml">TinyXML2::XMLDocument</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01539">TinyXML2.h:1539</a></div></div>
<div class="ttc" id="a00198_xhtml_ac2fba9b6e452829dd892f7392c24e0eb"><div class="ttname"><a href="a00198.xhtml#ac2fba9b6e452829dd892f7392c24e0eb">TinyXML2::XMLDocument::XMLElement</a></div><div class="ttdeci">friend class XMLElement</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01541">TinyXML2.h:1541</a></div></div>
<div class="ttc" id="a00198_xhtml_ac661ab922be6279e4b962146ce09bfa1"><div class="ttname"><a href="a00198.xhtml#ac661ab922be6279e4b962146ce09bfa1">TinyXML2::XMLDocument::_errorNames</a></div><div class="ttdeci">static const char * _errorNames[XML_ERROR_COUNT]</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01744">TinyXML2.h:1744</a></div></div>
<div class="ttc" id="a00194_xhtml_a1978370f3a3c0b93e0e0ed4c82f3a9ab"><div class="ttname"><a href="a00194.xhtml#a1978370f3a3c0b93e0e0ed4c82f3a9ab">TinyXML2::XMLAttribute::_next</a></div><div class="ttdeci">XMLAttribute * _next</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01155">TinyXML2.h:1155</a></div></div>
<div class="ttc" id="a00197_xhtml_a7d46862e40732a3504f11bedee5c8b88"><div class="ttname"><a href="a00197.xhtml#a7d46862e40732a3504f11bedee5c8b88">TinyXML2::XMLDeclaration::ShallowClone</a></div><div class="ttdeci">virtual XMLNode * ShallowClone(XMLDocument *document) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01042">TinyXML2.cpp:1042</a></div></div>
<div class="ttc" id="a00199_xhtml_a1f37b0bb41320c4121515755b8a057a4"><div class="ttname"><a href="a00199.xhtml#a1f37b0bb41320c4121515755b8a057a4">TinyXML2::XMLElement::ParseDeep</a></div><div class="ttdeci">char * ParseDeep(char *p, StrPair *endTag)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01535">TinyXML2.cpp:1535</a></div></div>
<div class="ttc" id="a00203_xhtml_a44acb8346adaa28c3ed043a22104b917"><div class="ttname"><a href="a00203.xhtml#a44acb8346adaa28c3ed043a22104b917">TinyXML2::XMLText::SetCData</a></div><div class="ttdeci">void SetCData(bool isCData)</div><div class="ttdoc">Declare whether this should be CDATA or standard text. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00939">TinyXML2.h:939</a></div></div>
<div class="ttc" id="a00133_xhtml_afbc7a4f921afeff8ef2aca24765ed24f"><div class="ttname"><a href="a00133.xhtml#afbc7a4f921afeff8ef2aca24765ed24f">TinyXML2::StrPair::Reset</a></div><div class="ttdeci">void Reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00101">TinyXML2.cpp:101</a></div></div>
<div class="ttc" id="a00199_xhtml_a655693477d6d7dcf4d075b2bc1d21f13"><div class="ttname"><a href="a00199.xhtml#a655693477d6d7dcf4d075b2bc1d21f13">TinyXML2::XMLElement::~XMLElement</a></div><div class="ttdeci">virtual ~XMLElement()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01259">TinyXML2.cpp:1259</a></div></div>
<div class="ttc" id="a00204_xhtml_a3124e27c7380527b71da6ac8956e3c49"><div class="ttname"><a href="a00204.xhtml#a3124e27c7380527b71da6ac8956e3c49">TinyXML2::XMLUnknown::ShallowEqual</a></div><div class="ttdeci">virtual bool ShallowEqual(const XMLNode *compare) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01102">TinyXML2.cpp:1102</a></div></div>
<div class="ttc" id="a00198_xhtml_a8b0125e914bf2bd77f4c9ffbf7a2cdee"><div class="ttname"><a href="a00198.xhtml#a8b0125e914bf2bd77f4c9ffbf7a2cdee">TinyXML2::XMLDocument::_textPool</a></div><div class="ttdeci">MemPoolT&lt; sizeof(XMLText) &gt; _textPool</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01741">TinyXML2.h:1741</a></div></div>
<div class="ttc" id="a00195_xhtml_a606ebc75737f12f2824a69a1813a336a"><div class="ttname"><a href="a00195.xhtml#a606ebc75737f12f2824a69a1813a336a">TinyXML2::XMLComment::~XMLComment</a></div><div class="ttdeci">virtual ~XMLComment()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00975">TinyXML2.cpp:975</a></div></div>
<div class="ttc" id="a00203_xhtml_a30e358bdfd667629b483d014ed2f92a7"><div class="ttname"><a href="a00203.xhtml#a30e358bdfd667629b483d014ed2f92a7">TinyXML2::XMLText::ShallowClone</a></div><div class="ttdeci">virtual XMLNode * ShallowClone(XMLDocument *document) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00943">TinyXML2.cpp:943</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a4bab69fe7f79af66da2525f7594c11ed"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a4bab69fe7f79af66da2525f7594c11ed">TinyXML2::XML_ERROR_PARSING_DECLARATION</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00532">TinyXML2.h:532</a></div></div>
<div class="ttc" id="a00390_xhtml_gab7696696807cf77b45c5cc8a44dcd90d"><div class="ttname"><a href="a00390.xhtml#gab7696696807cf77b45c5cc8a44dcd90d">TinyXML2::Whitespace</a></div><div class="ttdeci">Whitespace</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01528">TinyXML2.h:1528</a></div></div>
<div class="ttc" id="a00201_xhtml_a3b5858a879823b5f5ba1d80f3addace8"><div class="ttname"><a href="a00201.xhtml#a3b5858a879823b5f5ba1d80f3addace8">TinyXML2::XMLNode::_memPool</a></div><div class="ttdeci">MemPool * _memPool</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00906">TinyXML2.h:906</a></div></div>
<div class="ttc" id="a00201_xhtml_a527b7ce2a80b4580275531020867b53a"><div class="ttname"><a href="a00201.xhtml#a527b7ce2a80b4580275531020867b53a">TinyXML2::XMLNode::SetValue</a></div><div class="ttdeci">void SetValue(const char *val, bool staticMem=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00617">TinyXML2.cpp:617</a></div></div>
<div class="ttc" id="a00199_xhtml_acabaa32707cda48d09044f9e051f8a7b"><div class="ttname"><a href="a00199.xhtml#acabaa32707cda48d09044f9e051f8a7b">TinyXML2::XMLElement::ShallowEqual</a></div><div class="ttdeci">virtual bool ShallowEqual(const XMLNode *compare) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01580">TinyXML2.cpp:1580</a></div></div>
<div class="ttc" id="a00195_xhtml_a276638861144ec98369f755704911260"><div class="ttname"><a href="a00195.xhtml#a276638861144ec98369f755704911260">TinyXML2::XMLComment::XMLComment</a></div><div class="ttdeci">XMLComment(XMLDocument *doc)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00970">TinyXML2.cpp:970</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a0206e4b52a4d2f499a8485701f037017"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a0206e4b52a4d2f499a8485701f037017">TinyXML2::XML_NO_TEXT_NODE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00538">TinyXML2.h:538</a></div></div>
<div class="ttc" id="a00199_xhtml_afd22b33b33e7128f217f96ec5b2f1871"><div class="ttname"><a href="a00199.xhtml#afd22b33b33e7128f217f96ec5b2f1871">TinyXML2::XMLElement::Name</a></div><div class="ttdeci">const char * Name() const </div><div class="ttdoc">Get the name of an element (which is the Value() of the node.) </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01170">TinyXML2.h:1170</a></div></div>
<div class="ttc" id="a00199_xhtml_a079b02a944021267fd0109fd78bad905"><div class="ttname"><a href="a00199.xhtml#a079b02a944021267fd0109fd78bad905">TinyXML2::XMLElement::QueryIntText</a></div><div class="ttdeci">XMLError QueryIntText(int *ival) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01353">TinyXML2.cpp:1353</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656afc7d9f64eb47f1e1a323b3deef7e9a55"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afc7d9f64eb47f1e1a323b3deef7e9a55">TinyXML2::XML_ERROR_PARSING_CDATA</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00530">TinyXML2.h:530</a></div></div>
<div class="ttc" id="a00205_xhtml_a7b69ac5d9474c28a4b2fd675d692ea43"><div class="ttname"><a href="a00205.xhtml#a7b69ac5d9474c28a4b2fd675d692ea43">TinyXML2::XMLUtil::GetCharacterRef</a></div><div class="ttdeci">static const char * GetCharacterRef(const char *p, char *value, int *length)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00346">TinyXML2.cpp:346</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6fa7c29f15852b4b666bc2aadbe7b3a49bf"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa7c29f15852b4b666bc2aadbe7b3a49bf">TinyXML2::StrPair::TEXT_ELEMENT_LEAVE_ENTITIES</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00171">TinyXML2.h:171</a></div></div>
<div class="ttc" id="a00194_xhtml_ab27bee7ca972cfb7b33a57ae150c9f46"><div class="ttname"><a href="a00194.xhtml#ab27bee7ca972cfb7b33a57ae150c9f46">TinyXML2::XMLAttribute::ParseDeep</a></div><div class="ttdeci">char * ParseDeep(char *p, bool processEntities)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01128">TinyXML2.cpp:1128</a></div></div>
<div class="ttc" id="a00202_xhtml_ab8e5983e4852475ee0084aedbc3f235e"><div class="ttname"><a href="a00202.xhtml#ab8e5983e4852475ee0084aedbc3f235e">TinyXML2::XMLPrinter::_fp</a></div><div class="ttdeci">FILE * _fp</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02094">TinyXML2.h:2094</a></div></div>
<div class="ttc" id="a00194_xhtml_a107532e7652ca2f5a425da8ef22ee5c1"><div class="ttname"><a href="a00194.xhtml#a107532e7652ca2f5a425da8ef22ee5c1">TinyXML2::XMLAttribute::_memPool</a></div><div class="ttdeci">MemPool * _memPool</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01156">TinyXML2.h:1156</a></div></div>
<div class="ttc" id="a00199_xhtml_aba98ff0fab1bf13625988d0f2e3afa57"><div class="ttname"><a href="a00199.xhtml#aba98ff0fab1bf13625988d0f2e3afa57">TinyXML2::XMLElement::FindOrCreateAttribute</a></div><div class="ttdeci">XMLAttribute * FindOrCreateAttribute(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01419">TinyXML2.cpp:1419</a></div></div>
<div class="ttc" id="a00206_xhtml"><div class="ttname"><a href="a00206.xhtml">TinyXML2::XMLVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00475">TinyXML2.h:475</a></div></div>
<div class="ttc" id="a00050_xhtml_a91184d9664c79ccf7ae5be06eb5ceebd"><div class="ttname"><a href="a00050.xhtml#a91184d9664c79ccf7ae5be06eb5ceebd">TinyXML2::DynArray::Push</a></div><div class="ttdeci">void Push(T t)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00250">TinyXML2.h:250</a></div></div>
<div class="ttc" id="a00202_xhtml_a51e42981371b82b64cac08d1248a7df7"><div class="ttname"><a href="a00202.xhtml#a51e42981371b82b64cac08d1248a7df7">TinyXML2::XMLPrinter::OpenElement</a></div><div class="ttdeci">void OpenElement(const char *name, bool compactMode=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02049">TinyXML2.cpp:2049</a></div></div>
<div class="ttc" id="a00199_xhtml_a2b7dddea778d54aa6a213abed7ef7ab7"><div class="ttname"><a href="a00199.xhtml#a2b7dddea778d54aa6a213abed7ef7ab7">TinyXML2::XMLElement::ParseAttributes</a></div><div class="ttdeci">char * ParseAttributes(char *p)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01465">TinyXML2.cpp:1465</a></div></div>
<div class="ttc" id="a00133_xhtml_a7907910f1687d5028c138b3d2aa18f5ba930bde12ea0249c2a72c99796ae5bd31"><div class="ttname"><a href="a00133.xhtml#a7907910f1687d5028c138b3d2aa18f5ba930bde12ea0249c2a72c99796ae5bd31">TinyXML2::StrPair::NEEDS_DELETE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00212">TinyXML2.h:212</a></div></div>
<div class="ttc" id="a00202_xhtml_af22c1599559dfcf088cb83d496954254"><div class="ttname"><a href="a00202.xhtml#af22c1599559dfcf088cb83d496954254">TinyXML2::XMLPrinter::PushComment</a></div><div class="ttdeci">void PushComment(const char *comment)</div><div class="ttdoc">Add a comment. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02201">TinyXML2.cpp:2201</a></div></div>
<div class="ttc" id="a00205_xhtml_a1e45f8b533ef3584a8afbd1cbe31ca1f"><div class="ttname"><a href="a00205.xhtml#a1e45f8b533ef3584a8afbd1cbe31ca1f">TinyXML2::XMLUtil::ToDouble</a></div><div class="ttdeci">static bool ToDouble(const char *str, double *value)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00500">TinyXML2.cpp:500</a></div></div>
<div class="ttc" id="a00133_xhtml_ae017372fa61c26746d127fe3748780c7"><div class="ttname"><a href="a00133.xhtml#ae017372fa61c26746d127fe3748780c7">TinyXML2::StrPair::_flags</a></div><div class="ttdeci">int _flags</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00216">TinyXML2.h:216</a></div></div>
<div class="ttc" id="a00197_xhtml_a0fcb8c5402eef454e6c35b4dcceeb938"><div class="ttname"><a href="a00197.xhtml#a0fcb8c5402eef454e6c35b4dcceeb938">TinyXML2::XMLDeclaration::Accept</a></div><div class="ttdeci">virtual bool Accept(XMLVisitor *visitor) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01061">TinyXML2.cpp:1061</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656afa5e3c5abac7e92f102fd3bc7e0e74f0">TinyXML2::XML_NO_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00519">TinyXML2.h:519</a></div></div>
<div class="ttc" id="a00195_xhtml_a897927b8b91e02f01a9f85bac9c7dec3"><div class="ttname"><a href="a00195.xhtml#a897927b8b91e02f01a9f85bac9c7dec3">TinyXML2::XMLComment::ShallowEqual</a></div><div class="ttdeci">virtual bool ShallowEqual(const XMLNode *compare) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01002">TinyXML2.cpp:1002</a></div></div>
<div class="ttc" id="a00195_xhtml_a13d113649df2846da1e2f7c59c417941"><div class="ttname"><a href="a00195.xhtml#a13d113649df2846da1e2f7c59c417941">TinyXML2::XMLComment::Accept</a></div><div class="ttdeci">virtual bool Accept(XMLVisitor *visitor) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01010">TinyXML2.cpp:1010</a></div></div>
<div class="ttc" id="a00202_xhtml_a4eb457bcdc4e24dbc7fdbdb22e3e00cc"><div class="ttname"><a href="a00202.xhtml#a4eb457bcdc4e24dbc7fdbdb22e3e00cc">TinyXML2::XMLPrinter::SealElement</a></div><div class="ttdeci">void SealElement()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02137">TinyXML2.cpp:2137</a></div></div>
<div class="ttc" id="a00202_xhtml_ae0fa76ad605ced3fae6bc83f5d9a99b5"><div class="ttname"><a href="a00202.xhtml#ae0fa76ad605ced3fae6bc83f5d9a99b5">TinyXML2::XMLPrinter::XMLPrinter</a></div><div class="ttdeci">XMLPrinter(FILE *file=0, bool compact=false, int depth=0)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01923">TinyXML2.cpp:1923</a></div></div>
<div class="ttc" id="a00098_xhtml_a97d309d72afeb96d9e54186285c26705"><div class="ttname"><a href="a00098.xhtml#a97d309d72afeb96d9e54186285c26705">TinyXML2::MemPool::SetTracked</a></div><div class="ttdeci">virtual void SetTracked()=0</div></div>
<div class="ttc" id="a00199_xhtml_ac6ec7cfed0b1684bd3ff3441d2400d51aaae91bf4fc3fb41663442b35cdc82c20"><div class="ttname"><a href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51aaae91bf4fc3fb41663442b35cdc82c20">TinyXML2::XMLElement::CLOSING</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01496">TinyXML2.h:1496</a></div></div>
<div class="ttc" id="a00204_xhtml_ad1af7fc04a6ea1ef03430ada735750e5"><div class="ttname"><a href="a00204.xhtml#ad1af7fc04a6ea1ef03430ada735750e5">TinyXML2::XMLUnknown::ShallowClone</a></div><div class="ttdeci">virtual XMLNode * ShallowClone(XMLDocument *document) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01092">TinyXML2.cpp:1092</a></div></div>
<div class="ttc" id="a00198_xhtml_a6665d0d689e8b8290a0cd6d8f340c19d"><div class="ttname"><a href="a00198.xhtml#a6665d0d689e8b8290a0cd6d8f340c19d">TinyXML2::XMLDocument::LoadFile</a></div><div class="ttdeci">XMLError LoadFile(const char *filename)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01759">TinyXML2.cpp:1759</a></div></div>
<div class="ttc" id="a00198_xhtml_a2991901a202867cec8de7254273c8b7c"><div class="ttname"><a href="a00198.xhtml#a2991901a202867cec8de7254273c8b7c">TinyXML2::XMLDocument::NewComment</a></div><div class="ttdeci">XMLComment * NewComment(const char *comment)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01708">TinyXML2.cpp:1708</a></div></div>
<div class="ttc" id="a00198_xhtml_a0a09219933989db01f4e0cff84ce5af2"><div class="ttname"><a href="a00198.xhtml#a0a09219933989db01f4e0cff84ce5af2">TinyXML2::XMLDocument::Identify</a></div><div class="ttdeci">char * Identify(char *p, XMLNode **node)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00509">TinyXML2.cpp:509</a></div></div>
<div class="ttc" id="a00201_xhtml_a5f038bc06894ab6f6914bf5841a9f53f"><div class="ttname"><a href="a00201.xhtml#a5f038bc06894ab6f6914bf5841a9f53f">TinyXML2::XMLNode::Parent</a></div><div class="ttdeci">const XMLNode * Parent() const </div><div class="ttdoc">Get the parent of this node on the DOM. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00722">TinyXML2.h:722</a></div></div>
<div class="ttc" id="a00202_xhtml_aaa3f679452ae4803a75e8fb27dd1598b"><div class="ttname"><a href="a00202.xhtml#aaa3f679452ae4803a75e8fb27dd1598b">TinyXML2::XMLPrinter::PushDeclaration</a></div><div class="ttdeci">void PushDeclaration(const char *value)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02215">TinyXML2.cpp:2215</a></div></div>
<div class="ttc" id="a00201_xhtml_aee7c15f0bf3bdc684fda87d584356c1b"><div class="ttname"><a href="a00201.xhtml#aee7c15f0bf3bdc684fda87d584356c1b">TinyXML2::XMLNode::NextSibling</a></div><div class="ttdeci">const XMLNode * NextSibling() const </div><div class="ttdoc">Get the next (right) sibling node of this node. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00788">TinyXML2.h:788</a></div></div>
<div class="ttc" id="a00205_xhtml_a04c3a14fa44c8d41a27f501700ee02ea"><div class="ttname"><a href="a00205.xhtml#a04c3a14fa44c8d41a27f501700ee02ea">TinyXML2::XMLUtil::ToStr</a></div><div class="ttdeci">static void ToStr(int v, char *buffer, int bufferSize)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00424">TinyXML2.cpp:424</a></div></div>
<div class="ttc" id="a00201_xhtml_a4a5ab8dd7f54c25a2397eebb305eb583"><div class="ttname"><a href="a00201.xhtml#a4a5ab8dd7f54c25a2397eebb305eb583">TinyXML2::XMLNode::_value</a></div><div class="ttdeci">StrPair _value</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00897">TinyXML2.h:897</a></div></div>
<div class="ttc" id="a00319_xhtml_a029877acb3c6fd71698561044953bd14"><div class="ttname"><a href="a00319.xhtml#a029877acb3c6fd71698561044953bd14">TIXMLASSERT</a></div><div class="ttdeci">#define TIXMLASSERT(x)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00100">TinyXML2.h:100</a></div></div>
<div class="ttc" id="a00198_xhtml_ad02be21c4459af97b6294eb4d1f82cd6"><div class="ttname"><a href="a00198.xhtml#ad02be21c4459af97b6294eb4d1f82cd6">TinyXML2::XMLDocument::Accept</a></div><div class="ttdeci">virtual bool Accept(XMLVisitor *visitor) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00579">TinyXML2.cpp:579</a></div></div>
<div class="ttc" id="a00198_xhtml_ac289c48075bb8af550a77e14a204a0b2"><div class="ttname"><a href="a00198.xhtml#ac289c48075bb8af550a77e14a204a0b2">TinyXML2::XMLDocument::_writeBOM</a></div><div class="ttdeci">bool _writeBOM</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01731">TinyXML2.h:1731</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656ae8928fd385881ccda8c41b889da94aae"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ae8928fd385881ccda8c41b889da94aae">TinyXML2::XML_ERROR_EMPTY_DOCUMENT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00534">TinyXML2.h:534</a></div></div>
<div class="ttc" id="a00206_xhtml_ad84b4221bdd2cdecbda2fe51ac506bed"><div class="ttname"><a href="a00206.xhtml#ad84b4221bdd2cdecbda2fe51ac506bed">TinyXML2::XMLVisitor::VisitEnter</a></div><div class="ttdeci">virtual bool VisitEnter(const XMLDocument &amp;)</div><div class="ttdoc">Visit a document. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00481">TinyXML2.h:481</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656ab718cc69109159eddde3ead0f4a94bdb"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab718cc69109159eddde3ead0f4a94bdb">TinyXML2::XML_ERROR_PARSING_TEXT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00529">TinyXML2.h:529</a></div></div>
<div class="ttc" id="a00202_xhtml_a88d3e942a37166ca72eb60b08cc76aab"><div class="ttname"><a href="a00202.xhtml#a88d3e942a37166ca72eb60b08cc76aab">TinyXML2::XMLPrinter::VisitExit</a></div><div class="ttdeci">virtual bool VisitExit(const XMLDocument &amp;)</div><div class="ttdoc">Visit a document. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02041">TinyXML2.h:2041</a></div></div>
<div class="ttc" id="a00098_xhtml_af252371f4bf36310d2db949279b5ccf4"><div class="ttname"><a href="a00098.xhtml#af252371f4bf36310d2db949279b5ccf4">TinyXML2::MemPool::Free</a></div><div class="ttdeci">virtual void Free(void *)=0</div></div>
<div class="ttc" id="a00205_xhtml_a151c32ae2f90003379a2fc78a80da4f1"><div class="ttname"><a href="a00205.xhtml#a151c32ae2f90003379a2fc78a80da4f1">TinyXML2::XMLUtil::SkipWhiteSpace</a></div><div class="ttdeci">static const char * SkipWhiteSpace(const char *p)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00550">TinyXML2.h:550</a></div></div>
<div class="ttc" id="a00202_xhtml_a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa"><div class="ttname"><a href="a00202.xhtml#a5a6b6d6ea01bcc4c1b11480290dd46b5a49514f458ae86c352ec57a54cd00c9aa">TinyXML2::XMLPrinter::BUF_SIZE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02102">TinyXML2.h:2102</a></div></div>
<div class="ttc" id="a00202_xhtml_a80f1e8f8bce0e2e7350ea32df345ea81"><div class="ttname"><a href="a00202.xhtml#a80f1e8f8bce0e2e7350ea32df345ea81">TinyXML2::XMLPrinter::_stack</a></div><div class="ttdeci">DynArray&lt; const char *, 10 &gt; _stack</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02088">TinyXML2.h:2088</a></div></div>
<div class="ttc" id="a00195_xhtml_a71e4d7cfc0349f5eddfa4d8da54908fd"><div class="ttname"><a href="a00195.xhtml#a71e4d7cfc0349f5eddfa4d8da54908fd">TinyXML2::XMLComment::ShallowClone</a></div><div class="ttdeci">virtual XMLNode * ShallowClone(XMLDocument *document) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00992">TinyXML2.cpp:992</a></div></div>
<div class="ttc" id="a00204_xhtml_a590ad9fe166b2ad702f8b39bb880847c"><div class="ttname"><a href="a00204.xhtml#a590ad9fe166b2ad702f8b39bb880847c">TinyXML2::XMLUnknown::Accept</a></div><div class="ttdeci">virtual bool Accept(XMLVisitor *visitor) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01110">TinyXML2.cpp:1110</a></div></div>
<div class="ttc" id="a00201_xhtml_acd44b243b52240d10cb875ee2a36eb01"><div class="ttname"><a href="a00201.xhtml#acd44b243b52240d10cb875ee2a36eb01">TinyXML2::XMLNode::PreviousSiblingElement</a></div><div class="ttdeci">const XMLElement * PreviousSiblingElement(const char *value=0) const </div><div class="ttdoc">Get the previous (left) sibling element of this node, with an optionally supplied name...</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00811">TinyXML2.cpp:811</a></div></div>
<div class="ttc" id="a00319_xhtml"><div class="ttname"><a href="a00319.xhtml">TinyXML2.h</a></div></div>
<div class="ttc" id="a00199_xhtml_ad9a87e90db7a84d4ad66318717e0ec11"><div class="ttname"><a href="a00199.xhtml#ad9a87e90db7a84d4ad66318717e0ec11">TinyXML2::XMLElement::GetText</a></div><div class="ttdeci">const char * GetText() const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01293">TinyXML2.cpp:1293</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656a5c5a9f238c435d1a577b7cd199e15e63"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656a5c5a9f238c435d1a577b7cd199e15e63">TinyXML2::XML_ERROR_FILE_COULD_NOT_BE_OPENED</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00523">TinyXML2.h:523</a></div></div>
<div class="ttc" id="a00198_xhtml_a997c5acf6ea216de5c7acc6ef5061bf6"><div class="ttname"><a href="a00198.xhtml#a997c5acf6ea216de5c7acc6ef5061bf6">TinyXML2::XMLDocument::WhitespaceMode</a></div><div class="ttdeci">Whitespace WhitespaceMode() const </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01601">TinyXML2.h:1601</a></div></div>
<div class="ttc" id="a00202_xhtml_afb5b6a7c8bd91de22db5292b192a2efc"><div class="ttname"><a href="a00202.xhtml#afb5b6a7c8bd91de22db5292b192a2efc">TinyXML2::XMLPrinter::_buffer</a></div><div class="ttdeci">DynArray&lt; char, 20 &gt; _buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02107">TinyXML2.h:2107</a></div></div>
<div class="ttc" id="a00205_xhtml_aa1b7cab8abab24f6deeb0b34a31b5a86"><div class="ttname"><a href="a00205.xhtml#aa1b7cab8abab24f6deeb0b34a31b5a86">TinyXML2::XMLUtil::IsWhiteSpace</a></div><div class="ttdeci">static bool IsWhiteSpace(char p)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00562">TinyXML2.h:562</a></div></div>
<div class="ttc" id="a00198_xhtml_a4c0d8478e9b2ec5b016fe69ff0de3c7a"><div class="ttname"><a href="a00198.xhtml#a4c0d8478e9b2ec5b016fe69ff0de3c7a">TinyXML2::XMLDocument::_errorStr1</a></div><div class="ttdeci">const char * _errorStr1</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01735">TinyXML2.h:1735</a></div></div>
<div class="ttc" id="a00205_xhtml_add0878731f4c713ac43af19b24e569a7"><div class="ttname"><a href="a00205.xhtml#add0878731f4c713ac43af19b24e569a7">TinyXML2::XMLUtil::ReadBOM</a></div><div class="ttdeci">static const char * ReadBOM(const char *p, bool *hasBOM)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00283">TinyXML2.cpp:283</a></div></div>
<div class="ttc" id="a00201_xhtml_a07becef2e0637d530a6109c0c546bdcd"><div class="ttname"><a href="a00201.xhtml#a07becef2e0637d530a6109c0c546bdcd">TinyXML2::XMLNode::ToDeclaration</a></div><div class="ttdeci">virtual XMLDeclaration * ToDeclaration()</div><div class="ttdoc">Safely cast to a Declaration, or null. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00678">TinyXML2.h:678</a></div></div>
<div class="ttc" id="a00198_xhtml_a94602229a737b6e7eb7c22149090b2c4"><div class="ttname"><a href="a00198.xhtml#a94602229a737b6e7eb7c22149090b2c4">TinyXML2::XMLDocument::ProcessEntities</a></div><div class="ttdeci">bool ProcessEntities() const </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01598">TinyXML2.h:1598</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6faf48fdb62d5cb241b0b013df44a9e5243"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6faf48fdb62d5cb241b0b013df44a9e5243">TinyXML2::StrPair::ATTRIBUTE_VALUE</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00173">TinyXML2.h:173</a></div></div>
<div class="ttc" id="a00198_xhtml_a6c1fc1a5bcbe7792a21d23395c0b7bb2"><div class="ttname"><a href="a00198.xhtml#a6c1fc1a5bcbe7792a21d23395c0b7bb2">TinyXML2::XMLDocument::_commentPool</a></div><div class="ttdeci">MemPoolT&lt; sizeof(XMLComment) &gt; _commentPool</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01742">TinyXML2.h:1742</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656af3965a4eac450a47610fa349ff13ef53"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656af3965a4eac450a47610fa349ff13ef53">TinyXML2::XML_ERROR_MISMATCHED_ELEMENT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00535">TinyXML2.h:535</a></div></div>
<div class="ttc" id="a00205_xhtml_ab788174893c461fa399fc0ee05b75f4c"><div class="ttname"><a href="a00205.xhtml#ab788174893c461fa399fc0ee05b75f4c">TinyXML2::XMLUtil::ToInt</a></div><div class="ttdeci">static bool ToInt(const char *str, int *value)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00457">TinyXML2.cpp:457</a></div></div>
<div class="ttc" id="a00199_xhtml_a7bb77b01d3914167ca41b654757de07e"><div class="ttname"><a href="a00199.xhtml#a7bb77b01d3914167ca41b654757de07e">TinyXML2::XMLElement::_rootAttribute</a></div><div class="ttdeci">XMLAttribute * _rootAttribute</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01524">TinyXML2.h:1524</a></div></div>
<div class="ttc" id="a00199_xhtml_ac6ec7cfed0b1684bd3ff3441d2400d51a72084691e795117a916689a4d166e7a9"><div class="ttname"><a href="a00199.xhtml#ac6ec7cfed0b1684bd3ff3441d2400d51a72084691e795117a916689a4d166e7a9">TinyXML2::XMLElement::CLOSED</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01495">TinyXML2.h:1495</a></div></div>
<div class="ttc" id="a00206_xhtml_a4928bf63cf7b06aca54e53c6dd4a017c"><div class="ttname"><a href="a00206.xhtml#a4928bf63cf7b06aca54e53c6dd4a017c">TinyXML2::XMLVisitor::Visit</a></div><div class="ttdeci">virtual bool Visit(const XMLDeclaration &amp;)</div><div class="ttdoc">Visit a declaration. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00499">TinyXML2.h:499</a></div></div>
<div class="ttc" id="a00202_xhtml_ae2661fa12bc3d2a0907d2d6aed03020b"><div class="ttname"><a href="a00202.xhtml#ae2661fa12bc3d2a0907d2d6aed03020b">TinyXML2::XMLPrinter::Visit</a></div><div class="ttdeci">virtual bool Visit(const XMLText &amp;text)</div><div class="ttdoc">Visit a text node. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02273">TinyXML2.cpp:2273</a></div></div>
<div class="ttc" id="a00202_xhtml_aeb9b414dc70c361aa44b52d09a9a5e1e"><div class="ttname"><a href="a00202.xhtml#aeb9b414dc70c361aa44b52d09a9a5e1e">TinyXML2::XMLPrinter::CompactMode</a></div><div class="ttdeci">virtual bool CompactMode(const XMLElement &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l02078">TinyXML2.h:2078</a></div></div>
<div class="ttc" id="a00199_xhtml"><div class="ttname"><a href="a00199.xhtml">TinyXML2::XMLElement</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01164">TinyXML2.h:1164</a></div></div>
<div class="ttc" id="a00199_xhtml_afe5dfc0730ed1c1b2c9e6b177e6b2fa6"><div class="ttname"><a href="a00199.xhtml#afe5dfc0730ed1c1b2c9e6b177e6b2fa6">TinyXML2::XMLElement::ShallowClone</a></div><div class="ttdeci">virtual XMLNode * ShallowClone(XMLDocument *document) const </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01567">TinyXML2.cpp:1567</a></div></div>
<div class="ttc" id="a00206_xhtml_a164c7fc45b4799c5d850571780deeb0a"><div class="ttname"><a href="a00206.xhtml#a164c7fc45b4799c5d850571780deeb0a">TinyXML2::XMLVisitor::VisitExit</a></div><div class="ttdeci">virtual bool VisitExit(const XMLDocument &amp;)</div><div class="ttdoc">Visit a document. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00485">TinyXML2.h:485</a></div></div>
<div class="ttc" id="a00205_xhtml_adc18aa919e561a1b17677bbc6ff30702"><div class="ttname"><a href="a00205.xhtml#adc18aa919e561a1b17677bbc6ff30702">TinyXML2::XMLUtil::IsNameStartChar</a></div><div class="ttdeci">static bool IsNameStartChar(unsigned char ch)</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00566">TinyXML2.h:566</a></div></div>
<div class="ttc" id="a00390_xhtml_ggad429894f5d1ba989c21f143f0ec06656ab9e93ad21487f1de9410e1616e378c77"><div class="ttname"><a href="a00390.xhtml#ggad429894f5d1ba989c21f143f0ec06656ab9e93ad21487f1de9410e1616e378c77">TinyXML2::XML_CAN_NOT_CONVERT_TEXT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00537">TinyXML2.h:537</a></div></div>
<div class="ttc" id="a00133_xhtml_ac61470d9ada706865ea7c04f98eb9d6fa9f1c9c26d13ea5f32bbb10c4e14f6d3b"><div class="ttname"><a href="a00133.xhtml#ac61470d9ada706865ea7c04f98eb9d6fa9f1c9c26d13ea5f32bbb10c4e14f6d3b">TinyXML2::StrPair::COMMENT</a></div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00175">TinyXML2.h:175</a></div></div>
<div class="ttc" id="a00201_xhtml_ae27e0da5712dd159e879e2baf07f48db"><div class="ttname"><a href="a00201.xhtml#ae27e0da5712dd159e879e2baf07f48db">TinyXML2::XMLNode::InsertAfterChild</a></div><div class="ttdeci">XMLNode * InsertAfterChild(XMLNode *afterThis, XMLNode *addThis)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00736">TinyXML2.cpp:736</a></div></div>
<div class="ttc" id="a00201_xhtml_a2ef2c6efbc6c9c76767770160d2d123d"><div class="ttname"><a href="a00201.xhtml#a2ef2c6efbc6c9c76767770160d2d123d">TinyXML2::XMLNode::ToElement</a></div><div class="ttdeci">virtual XMLElement * ToElement()</div><div class="ttdoc">Safely cast to an Element, or null. </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00662">TinyXML2.h:662</a></div></div>
<div class="ttc" id="a00198_xhtml_a2734f0824ea57c5c26f61b4f3ff2514a"><div class="ttname"><a href="a00198.xhtml#a2734f0824ea57c5c26f61b4f3ff2514a">TinyXML2::XMLDocument::Parse</a></div><div class="ttdeci">XMLError Parse(const char *xml, size_t nBytes=(size_t)(-1))</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01840">TinyXML2.cpp:1840</a></div></div>
<div class="ttc" id="a00133_xhtml_a758cab9c11619f17dbf4758d62bd2310"><div class="ttname"><a href="a00133.xhtml#a758cab9c11619f17dbf4758d62bd2310">TinyXML2::StrPair::ParseText</a></div><div class="ttdeci">char * ParseText(char *in, const char *endTag, int strFlags)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00123">TinyXML2.cpp:123</a></div></div>
<div class="ttc" id="a00198_xhtml_aa7f8f96c55022e3e2d7dc4eb492860cf"><div class="ttname"><a href="a00198.xhtml#aa7f8f96c55022e3e2d7dc4eb492860cf">TinyXML2::XMLDocument::HasBOM</a></div><div class="ttdeci">bool HasBOM() const </div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l01608">TinyXML2.h:1608</a></div></div>
<div class="ttc" id="a00052_xhtml"><div class="ttname"><a href="a00052.xhtml">TinyXML2::Entity</a></div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00056">TinyXML2.cpp:56</a></div></div>
<div class="ttc" id="a00201_xhtml_a5ce8791c0920489f9df667b0a0264935"><div class="ttname"><a href="a00201.xhtml#a5ce8791c0920489f9df667b0a0264935">TinyXML2::XMLNode::~XMLNode</a></div><div class="ttdeci">virtual ~XMLNode()</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00604">TinyXML2.cpp:604</a></div></div>
<div class="ttc" id="a00199_xhtml_a5cb3327503417ee863296973b0e7c77f"><div class="ttname"><a href="a00199.xhtml#a5cb3327503417ee863296973b0e7c77f">TinyXML2::XMLElement::QueryDoubleText</a></div><div class="ttdeci">XMLError QueryDoubleText(double *dval) const </div><div class="ttdoc">See QueryIntText() </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01392">TinyXML2.cpp:1392</a></div></div>
<div class="ttc" id="a00198_xhtml_a949f550ca5a84f18404af5e050626a2e"><div class="ttname"><a href="a00198.xhtml#a949f550ca5a84f18404af5e050626a2e">TinyXML2::XMLDocument::NewDeclaration</a></div><div class="ttdeci">XMLDeclaration * NewDeclaration(const char *text=0)</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l01726">TinyXML2.cpp:1726</a></div></div>
<div class="ttc" id="a00202_xhtml_a410f06cffa2fd3ce75481b125b64344d"><div class="ttname"><a href="a00202.xhtml#a410f06cffa2fd3ce75481b125b64344d">TinyXML2::XMLPrinter::CloseElement</a></div><div class="ttdeci">virtual void CloseElement(bool compactMode=false)</div><div class="ttdoc">If streaming, close the Element. </div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l02111">TinyXML2.cpp:2111</a></div></div>
<div class="ttc" id="a00390_xhtml_gad429894f5d1ba989c21f143f0ec06656"><div class="ttname"><a href="a00390.xhtml#gad429894f5d1ba989c21f143f0ec06656">TinyXML2::XMLError</a></div><div class="ttdeci">XMLError</div><div class="ttdef"><b>Definition:</b> <a href="a00319_source.xhtml#l00517">TinyXML2.h:517</a></div></div>
<div class="ttc" id="a00052_xhtml_a260e8b6b1517621183446929141a4cc1"><div class="ttname"><a href="a00052.xhtml#a260e8b6b1517621183446929141a4cc1">TinyXML2::Entity::pattern</a></div><div class="ttdeci">const char * pattern</div><div class="ttdef"><b>Definition:</b> <a href="a00318_source.xhtml#l00057">TinyXML2.cpp:57</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 12 2015 21:49:56 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
