<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: elfio_dump.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d4f7a754e06480f800a6fab4b04999ce.xhtml">Util</a></li><li class="navelem"><a class="el" href="dir_fd724d2bac3d76b33b528d46582418a2.xhtml">elfio</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">elfio_dump.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="elfio__dump_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">Copyright (C) 2001-2015 by Serge Lamikhov-Center</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">all copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">THE SOFTWARE.</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#ifndef ELFIO_DUMP_HPP</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#define ELFIO_DUMP_HPP</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;iomanip&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="elfio_8hpp.xhtml">elfio/elfio.hpp</a>&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>ELFIO {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>class_table_t {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>  key;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* str;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;} class_table [] = </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a>, <span class="stringliteral">&quot;ELF32&quot;</span> },</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a>, <span class="stringliteral">&quot;ELF64&quot;</span> },</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;};</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>endian_table_t {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>  key;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* str;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;} endian_table [] = </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad25f21c9d99ad7f440811610bfc57ff6">ELFDATANONE</a>, <span class="stringliteral">&quot;None&quot;</span>          },</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af66303c799da18c8aec282ea8592e7e7">ELFDATA2LSB</a>, <span class="stringliteral">&quot;Little endian&quot;</span> },</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a06385c3e5f0a3b62fae7f5e224e10f89">ELFDATA2MSB</a>, <span class="stringliteral">&quot;Big endian&quot;</span>    },</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;};</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>version_table_t {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">const</span> <a class="code" href="elf__types_8hpp.xhtml#ab86c8c85735ba7bdd95962cc6691c348">Elf64_Word</a> key;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*      str;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;} version_table [] = </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a0307c9d093060e148ecca1c7cfb02429">EV_NONE</a>   , <span class="stringliteral">&quot;None&quot;</span>    },</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8085a255e82173046afefd2a1c6de930">EV_CURRENT</a>, <span class="stringliteral">&quot;Current&quot;</span> },</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;};</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>type_table_t {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <a class="code" href="elf__types_8hpp.xhtml#a2d130ebbbf1d832c2f0bb676df0181d7">Elf32_Half</a> key;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*      str;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;} type_table [] = </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a343a36d721130c5017a5669537e96822">ET_NONE</a>, <span class="stringliteral">&quot;No file type&quot;</span>       },</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2a91046a80fd753ce3dbfb109212761d">ET_REL</a> , <span class="stringliteral">&quot;Relocatable file&quot;</span>   },</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a942478985eb016311380dee473cc8c3e">ET_EXEC</a>, <span class="stringliteral">&quot;Executable file&quot;</span>    },</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4373ea3b3d512434ebe2213829b6751b">ET_DYN</a> , <span class="stringliteral">&quot;Shared object file&quot;</span> },</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2b9430d26ba60f7a9d65c8d43e54f213">ET_CORE</a>, <span class="stringliteral">&quot;Core file&quot;</span>          },</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;};</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>machine_table_t {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">const</span> <a class="code" href="elf__types_8hpp.xhtml#a0129045e44f674a632feb79c4c24d44d">Elf64_Half</a> key;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*      str;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;} machine_table [] = </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5a14b1234094272355977c59e351a14f">EM_NONE</a>         , <span class="stringliteral">&quot;No machine&quot;</span>                                                              },</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a19b0cea9b063bb97e84b0931ebc7d699">EM_M32</a>          , <span class="stringliteral">&quot;AT&amp;T WE 32100&quot;</span>                                                           },</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3d33cb376c76e9fb077ddf5389f8f8b8">EM_SPARC</a>        , <span class="stringliteral">&quot;SUN SPARC&quot;</span>                                                               },</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a77301c665274669ba8d05978eb0d299e">EM_386</a>          , <span class="stringliteral">&quot;Intel 80386&quot;</span>                                                             },</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#acc74dd2d7cd1e872c2d2f52d64a7982a">EM_68K</a>          , <span class="stringliteral">&quot;Motorola m68k family&quot;</span>                                                    },</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a66801fe3ae7746ab9386537d236cd4e4">EM_88K</a>          , <span class="stringliteral">&quot;Motorola m88k family&quot;</span>                                                    },</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a30d75bc66f7816194718e1711f6df9a8">EM_486</a>          , <span class="stringliteral">&quot;Intel 80486// Reserved for future use&quot;</span>                                   },</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a80e7667a64867c4252a1c3a6333514d9">EM_860</a>          , <span class="stringliteral">&quot;Intel 80860&quot;</span>                                                             },</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3168ea327621f9848abb996540342fb6">EM_MIPS</a>         , <span class="stringliteral">&quot;MIPS R3000 (officially, big-endian only)&quot;</span>                                },</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a7d5aebf469008b18be87985186eed899">EM_S370</a>         , <span class="stringliteral">&quot;IBM System/370&quot;</span>                                                          },</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a851ceddbf5546d941c2fd647c2200ba5">EM_MIPS_RS3_LE</a>  , <span class="stringliteral">&quot;MIPS R3000 little-endian (Oct 4 1999 Draft) Deprecated&quot;</span>                  },</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8cb993f89091902b3ed36719d815eb42">EM_res011</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5aedf14e65166445b25e845978d0e16f">EM_res012</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a953d4b756dfd775eea37ffaf577350f8">EM_res013</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac0667a92568e103c2e2047b5735d7fff">EM_res014</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a81190acbe6100558ef494d752aa42e7d">EM_PARISC</a>       , <span class="stringliteral">&quot;HPPA&quot;</span>                                                                    },</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa5a0be583e90df860b81b30ac7e4af3a">EM_res016</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ade3c7c7e0d7d96b0afe95dfd0f39e952">EM_VPP550</a>       , <span class="stringliteral">&quot;Fujitsu VPP500&quot;</span>                                                          },</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#acb4e795071e36755d6e84361bc83f94d">EM_SPARC32PLUS</a>  , <span class="stringliteral">&quot;Sun&#39;s v8plus&quot;</span>                                                            },</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aefa265beb734492f7ba2a1e48e9368dd">EM_960</a>          , <span class="stringliteral">&quot;Intel 80960&quot;</span>                                                             },</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aceec29f8bf25eff4c55932933a68dcae">EM_PPC</a>          , <span class="stringliteral">&quot;PowerPC&quot;</span>                                                                 },</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a416acf1af7155b8a8856f87601985794">EM_PPC64</a>        , <span class="stringliteral">&quot;64-bit PowerPC&quot;</span>                                                          },</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4963a97a7c325cd4ce581e4c7ff3dc69">EM_S390</a>         , <span class="stringliteral">&quot;IBM S/390&quot;</span>                                                               },</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8e89591c0e7cea25d155b826605823c2">EM_SPU</a>          , <span class="stringliteral">&quot;Sony/Toshiba/IBM SPU&quot;</span>                                                    },</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2eeb4439e78454a78e74181a95d47c97">EM_res024</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2eb80074aabd6bc7962267d093faad42">EM_res025</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af7bb2357371dcd092867d6b817aa8fbf">EM_res026</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a62973bdd257e5f59e3219781395a7fa4">EM_res027</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#add16337d49ed449da71d3811f3ec1fb7">EM_res028</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af8f9dd71fa71d8928818413e0d8f15c0">EM_res029</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a24d310c737df1fc6e80f151ac53f682f">EM_res030</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a1789be55e29ba81041935f9b60ad2cfd">EM_res031</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afece3cfa0ef413b01766125cf7a308e8">EM_res032</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#adedce18a93b7b7b8d34073eb76981327">EM_res033</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a6b69970e935517b39cabd47567647e50">EM_res034</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3135d8ea00d3dc605687fbe482a59d49">EM_res035</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae8258f376b7b6cc61bd6d1651492bf1e">EM_V800</a>         , <span class="stringliteral">&quot;NEC V800 series&quot;</span>                                                         },</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad347d75dbb7ecff52f6970ac89478f23">EM_FR20</a>         , <span class="stringliteral">&quot;Fujitsu FR20&quot;</span>                                                            },</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a6ca204ae2d5c6ff607c5cc5d420b4d07">EM_RH32</a>         , <span class="stringliteral">&quot;TRW RH32&quot;</span>                                                                },</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a19566d7b4dd9248b0688f1fdab5f943f">EM_MCORE</a>        , <span class="stringliteral">&quot;Motorola M*Core // May also be taken by Fujitsu MMA&quot;</span>                     },</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a1e9f9d7662daae640a617097ad51710e">EM_RCE</a>          , <span class="stringliteral">&quot;Old name for MCore&quot;</span>                                                      },</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad8fac71aae0d2fbfab30f278a79c941a">EM_ARM</a>          , <span class="stringliteral">&quot;ARM&quot;</span>                                                                     },</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a59aef04f5e353594a554570e49555739">EM_OLD_ALPHA</a>    , <span class="stringliteral">&quot;Digital Alpha&quot;</span>                                                           },</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa5e1c59dfa7c8265d3321f997a922fd6">EM_SH</a>           , <span class="stringliteral">&quot;Renesas (formerly Hitachi) / SuperH SH&quot;</span>                                  },</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad3be48b70ed10f4f1a70e1fca938d970">EM_SPARCV9</a>      , <span class="stringliteral">&quot;SPARC v9 64-bit&quot;</span>                                                         },</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac48655f306a10e5b67f02bea02927f06">EM_TRICORE</a>      , <span class="stringliteral">&quot;Siemens Tricore embedded processor&quot;</span>                                      },</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a41fdb5cc6d934a934fb024e509730bbb">EM_ARC</a>          , <span class="stringliteral">&quot;ARC Cores&quot;</span>                                                               },</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a80e9ddcb3c37cfc4aeac19bc0382f296">EM_H8_300</a>       , <span class="stringliteral">&quot;Renesas (formerly Hitachi) H8/300&quot;</span>                                       },</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#acc9b8e7e11e21f904e75ff4d4bab3cc0">EM_H8_300H</a>      , <span class="stringliteral">&quot;Renesas (formerly Hitachi) H8/300H&quot;</span>                                      },</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab28842a49aef0cf22fa7e335d5427713">EM_H8S</a>          , <span class="stringliteral">&quot;Renesas (formerly Hitachi) H8S&quot;</span>                                          },</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a31f55fa5be0ca6b100d9fe999ba4f45d">EM_H8_500</a>       , <span class="stringliteral">&quot;Renesas (formerly Hitachi) H8/500&quot;</span>                                       },</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad64bfea4eea6f9f832d4ade8efa73a67">EM_IA_64</a>        , <span class="stringliteral">&quot;Intel IA-64 Processor&quot;</span>                                                   },</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a0889fc3c476fe4884bb09c5c6577a098">EM_MIPS_X</a>       , <span class="stringliteral">&quot;Stanford MIPS-X&quot;</span>                                                         },</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a881bf9c16d928bf85dbbf05771975132">EM_COLDFIRE</a>     , <span class="stringliteral">&quot;Motorola Coldfire&quot;</span>                                                       },</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5f22637616c42b3841668d5083177a1a">EM_68HC12</a>       , <span class="stringliteral">&quot;Motorola M68HC12&quot;</span>                                                        },</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a57dff8f7eb814730c2dadcb32bd901e5">EM_MMA</a>          , <span class="stringliteral">&quot;Fujitsu Multimedia Accelerator&quot;</span>                                          },</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a421cf1f02e413be5ee4779c7ce809275">EM_PCP</a>          , <span class="stringliteral">&quot;Siemens PCP&quot;</span>                                                             },</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a71f56884cf3065340bf2a5c86a80361f">EM_NCPU</a>         , <span class="stringliteral">&quot;Sony nCPU embedded RISC processor&quot;</span>                                       },</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2b07eefc8800d75434a3b165d392c14d">EM_NDR1</a>         , <span class="stringliteral">&quot;Denso NDR1 microprocesspr&quot;</span>                                               },</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa329bee12b7c6b47998b65457914100b">EM_STARCORE</a>     , <span class="stringliteral">&quot;Motorola Star*Core processor&quot;</span>                                            },</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a87950dfcb354dc6a671cafc6c080f3f0">EM_ME16</a>         , <span class="stringliteral">&quot;Toyota ME16 processor&quot;</span>                                                   },</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a7ccfa2c5743b37663e459897701ec5d6">EM_ST100</a>        , <span class="stringliteral">&quot;STMicroelectronics ST100 processor&quot;</span>                                      },</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aeecbbe09920b92feb01f6cd1af9bd48d">EM_TINYJ</a>        , <span class="stringliteral">&quot;Advanced Logic Corp. TinyJ embedded processor&quot;</span>                           },</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a23fd3947ed1cfe58469b045efb4bb418">EM_X86_64</a>       , <span class="stringliteral">&quot;Advanced Micro Devices X86-64 processor&quot;</span>                                 },</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8a4c916f39f1eac8aad45b863aa94d12">EM_PDSP</a>         , <span class="stringliteral">&quot;Sony DSP Processor&quot;</span>                                                      },</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a0e910cd10d2d9418e7bc963d3096b4a1">EM_PDP10</a>        , <span class="stringliteral">&quot;Digital Equipment Corp. PDP-10&quot;</span>                                          },</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a140ae30855f5b61fcc8146a4a8993c5b">EM_PDP11</a>        , <span class="stringliteral">&quot;Digital Equipment Corp. PDP-11&quot;</span>                                          },</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad02dac6c36de37115f7922f4aea16d04">EM_FX66</a>         , <span class="stringliteral">&quot;Siemens FX66 microcontroller&quot;</span>                                            },</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a990781d4d4db63e414467be49fa8dc64">EM_ST9PLUS</a>      , <span class="stringliteral">&quot;STMicroelectronics ST9+ 8/16 bit microcontroller&quot;</span>                        },</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a11e50ca1a55ea4e6eb7331889681a3a9">EM_ST7</a>          , <span class="stringliteral">&quot;STMicroelectronics ST7 8-bit microcontroller&quot;</span>                            },</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3b0db6c4c1f251f6e979dc66d654d52c">EM_68HC16</a>       , <span class="stringliteral">&quot;Motorola MC68HC16 Microcontroller&quot;</span>                                       },</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa771941533b07c25189025b5a8d8131b">EM_68HC11</a>       , <span class="stringliteral">&quot;Motorola MC68HC11 Microcontroller&quot;</span>                                       },</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac8d80ccd43333c561f4959e19f2d4516">EM_68HC08</a>       , <span class="stringliteral">&quot;Motorola MC68HC08 Microcontroller&quot;</span>                                       },</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2a0823ace4224d7c31755abff99e5c11">EM_68HC05</a>       , <span class="stringliteral">&quot;Motorola MC68HC05 Microcontroller&quot;</span>                                       },</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab83196a0d8bb8f3c2423ebb912e7e4f4">EM_SVX</a>          , <span class="stringliteral">&quot;Silicon Graphics SVx&quot;</span>                                                    },</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aca06f67850449fa24ddca95a6dcd2754">EM_ST19</a>         , <span class="stringliteral">&quot;STMicroelectronics ST19 8-bit cpu&quot;</span>                                       },</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aea82878407e83e89f3330c1ed2a86e15">EM_VAX</a>          , <span class="stringliteral">&quot;Digital VAX&quot;</span>                                                             },</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4049b60ff89d8fc5987779a77b04aaf1">EM_CRIS</a>         , <span class="stringliteral">&quot;Axis Communications 32-bit embedded processor&quot;</span>                           },</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a550bf66673973381072c9b6b1c36fafa">EM_JAVELIN</a>      , <span class="stringliteral">&quot;Infineon Technologies 32-bit embedded cpu&quot;</span>                               },</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a916359aebd25a6db0b308937c227013f">EM_FIREPATH</a>     , <span class="stringliteral">&quot;Element 14 64-bit DSP processor&quot;</span>                                         },</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af88922163c3eef6634243299aba4b82d">EM_ZSP</a>          , <span class="stringliteral">&quot;LSI Logic&#39;s 16-bit DSP processor&quot;</span>                                        },</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a317bab1f54143bfeffd4c2519603c8ae">EM_MMIX</a>         , <span class="stringliteral">&quot;Donald Knuth&#39;s educational 64-bit processor&quot;</span>                             },</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a81f818fb4fe5892a2c9082ca6f0c8026">EM_HUANY</a>        , <span class="stringliteral">&quot;Harvard&#39;s machine-independent format&quot;</span>                                    },</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac6ee64a77587650e71e097422bb924a2">EM_PRISM</a>        , <span class="stringliteral">&quot;SiTera Prism&quot;</span>                                                            },</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afa2d180f2a8054a8406cc4535a522da4">EM_AVR</a>          , <span class="stringliteral">&quot;Atmel AVR 8-bit microcontroller&quot;</span>                                         },</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae46431993c695f6b3b319a30e06170e5">EM_FR30</a>         , <span class="stringliteral">&quot;Fujitsu FR30&quot;</span>                                                            },</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a28502b14e09090636df11ba31001e143">EM_D10V</a>         , <span class="stringliteral">&quot;Mitsubishi D10V&quot;</span>                                                         },</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8ca359d4c544e0453d7c3eea72cffba3">EM_D30V</a>         , <span class="stringliteral">&quot;Mitsubishi D30V&quot;</span>                                                         },</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9cd9ec2a5c2d1d93aba76e4d2701945e">EM_V850</a>         , <span class="stringliteral">&quot;NEC v850&quot;</span>                                                                },</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac163a66b47e95aeebf167fe7b3a4502a">EM_M32R</a>         , <span class="stringliteral">&quot;Renesas M32R (formerly Mitsubishi M32R)&quot;</span>                                 },</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abecf6afbdd6836bbbe6ee8ed9d4112c2">EM_MN10300</a>      , <span class="stringliteral">&quot;Matsushita MN10300&quot;</span>                                                      },</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad6d687d90ceed6953a098950a7f0ccb6">EM_MN10200</a>      , <span class="stringliteral">&quot;Matsushita MN10200&quot;</span>                                                      },</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aee8507d9ba53457bd41b0cad982f65e4">EM_PJ</a>           , <span class="stringliteral">&quot;picoJava&quot;</span>                                                                },</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab15a3357b0f0c27e508cab28504346a6">EM_OPENRISC</a>     , <span class="stringliteral">&quot;OpenRISC 32-bit embedded processor&quot;</span>                                      },</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab7a3c693de1d7231d092733cb540a26e">EM_ARC_A5</a>       , <span class="stringliteral">&quot;ARC Cores Tangent-A5&quot;</span>                                                    },</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a27ae160258d9b3c35b16b940c4317f08">EM_XTENSA</a>       , <span class="stringliteral">&quot;Tensilica Xtensa Architecture&quot;</span>                                           },</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8cc685407ec2d1c5b7807789f5d0f2f3">EM_VIDEOCORE</a>    , <span class="stringliteral">&quot;Alphamosaic VideoCore processor&quot;</span>                                         },</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9ce86b76b229e96d028b67b4216e1a8c">EM_TMM_GPP</a>      , <span class="stringliteral">&quot;Thompson Multimedia General Purpose Processor&quot;</span>                           },</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a268ce7117706283b6bf9b6a2157bb901">EM_NS32K</a>        , <span class="stringliteral">&quot;National Semiconductor 32000 series&quot;</span>                                     },</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad11c10fa2f107629b7c2a307b07babb0">EM_TPC</a>          , <span class="stringliteral">&quot;Tenor Network TPC processor&quot;</span>                                             },</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae51ab135aae79c2c807763687d11fcb1">EM_SNP1K</a>        , <span class="stringliteral">&quot;Trebia SNP 1000 processor&quot;</span>                                               },</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afebfe5fc7b7b2c8a4c45c7797688677e">EM_ST200</a>        , <span class="stringliteral">&quot;STMicroelectronics ST200 microcontroller&quot;</span>                                },</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab1923cd7a6745120010182330cfd59c2">EM_IP2K</a>         , <span class="stringliteral">&quot;Ubicom IP2022 micro controller&quot;</span>                                          },</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abd8569f12e829eeebd7d4ba6d6fb4b38">EM_MAX</a>          , <span class="stringliteral">&quot;MAX Processor&quot;</span>                                                           },</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad34ab1a88a9f6a6530e764bf722a0bb2">EM_CR</a>           , <span class="stringliteral">&quot;National Semiconductor CompactRISC&quot;</span>                                      },</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a07eef78dc4e8e1fea9941c1575ce5d57">EM_F2MC16</a>       , <span class="stringliteral">&quot;Fujitsu F2MC16&quot;</span>                                                          },</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a44b6059deb2b3e5858e058a466149d96">EM_MSP430</a>       , <span class="stringliteral">&quot;TI msp430 micro controller&quot;</span>                                              },</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9946f05d0ff6fa8ca96c5c6ec10b25b0">EM_BLACKFIN</a>     , <span class="stringliteral">&quot;ADI Blackfin&quot;</span>                                                            },</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a61849b49d63245eb406d8ee2a81da6f9">EM_SE_C33</a>       , <span class="stringliteral">&quot;S1C33 Family of Seiko Epson processors&quot;</span>                                  },</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa987c856d5cea48b7593cd6f1f4c5fa6">EM_SEP</a>          , <span class="stringliteral">&quot;Sharp embedded microprocessor&quot;</span>                                           },</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2c4d9a8b639b8162af79933049fbfbaa">EM_ARCA</a>         , <span class="stringliteral">&quot;Arca RISC Microprocessor&quot;</span>                                                },</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a7c59b6d72aa4b7d178416833d439ecc7">EM_UNICORE</a>      , <span class="stringliteral">&quot;Microprocessor series from PKU-Unity Ltd. and MPRC of Peking University&quot;</span> },</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a57486af2ae5e180263539a5395f1ed67">EM_EXCESS</a>       , <span class="stringliteral">&quot;eXcess: 16/32/64-bit configurable embedded CPU&quot;</span>                          },</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a214273fb98cb28c776d2146c9ad6acda">EM_DXP</a>          , <span class="stringliteral">&quot;Icera Semiconductor Inc. Deep Execution Processor&quot;</span>                       },</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af87c414df9261ef62e768be30d81d911">EM_ALTERA_NIOS2</a> , <span class="stringliteral">&quot;Altera Nios II soft-core processor&quot;</span>                                      },</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3d26bf66ca28492e1c2b50d91fe49d1b">EM_CRX</a>          , <span class="stringliteral">&quot;National Semiconductor CRX&quot;</span>                                              },</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4f9866770e1922ff0fd217efba129165">EM_XGATE</a>        , <span class="stringliteral">&quot;Motorola XGATE embedded processor&quot;</span>                                       },</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a577dbab317df660fb4a7f416680a250e">EM_C166</a>         , <span class="stringliteral">&quot;Infineon C16x/XC16x processor&quot;</span>                                           },</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad1b4db03f276d72711279cab049bd26c">EM_M16C</a>         , <span class="stringliteral">&quot;Renesas M16C series microprocessors&quot;</span>                                     },</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a200cda5ea3fbbf8cdbea070888220dd4">EM_DSPIC30F</a>     , <span class="stringliteral">&quot;Microchip Technology dsPIC30F Digital Signal Controller&quot;</span>                 },</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#adbb5d6231187c73dbeeed0d6dbdd5d38">EM_CE</a>           , <span class="stringliteral">&quot;Freescale Communication Engine RISC core&quot;</span>                                },</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab328a3235e0b9bd804b4f763b2c276d9">EM_M32C</a>         , <span class="stringliteral">&quot;Renesas M32C series microprocessors&quot;</span>                                     },</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab6dbc86644e55db3c0eeef9ef43a7f70">EM_res121</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a236f4b895e822e5c4846a87e0366ac05">EM_res122</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a7df5eeaf8383b8c32996cc7ac1b3bc6a">EM_res123</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa3be0686b6baf6a4a2e3fce78b4d2e3c">EM_res124</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9c442688ca4a05cac98e33f97f1dde77">EM_res125</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae5960bd15ee686265c2e6dca4db59c51">EM_res126</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9c25828b68b184aecc0bde2a1f6850e1">EM_res127</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a835121fb9bd3f27ecf69c5c63f23ede8">EM_res128</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a08af3f04e4a09ff9121ad983fb019531">EM_res129</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aeedf57dc509f8d7e0057fa364374166c">EM_res130</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a675401c3e084a4c6a9559068987183cd">EM_TSK3000</a>      , <span class="stringliteral">&quot;Altium TSK3000 core&quot;</span>                                                     },</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a1c3b36c2bd8640546e10d37cb6214242">EM_RS08</a>         , <span class="stringliteral">&quot;Freescale RS08 embedded processor&quot;</span>                                       },</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3463107b15b53e9d56600f9cd466044e">EM_res133</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa8f4e2f82318dc17cea7704894457eee">EM_ECOG2</a>        , <span class="stringliteral">&quot;Cyan Technology eCOG2 microprocessor&quot;</span>                                    },</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a858de0ea72e19697b3995fb6bcc11f3a">EM_SCORE</a>        , <span class="stringliteral">&quot;Sunplus Score&quot;</span>                                                           },</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a46eab9a90bd242bff248113e51bd1952">EM_SCORE7</a>       , <span class="stringliteral">&quot;Sunplus S+core7 RISC processor&quot;</span>                                          },</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5f01fb6ed55d0592dcef0f3d22a3ac43">EM_DSP24</a>        , <span class="stringliteral">&quot;New Japan Radio (NJR) 24-bit DSP Processor&quot;</span>                              },</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a32b96b8bfb0a082bd7c6a9a31e83a97b">EM_VIDEOCORE3</a>   , <span class="stringliteral">&quot;Broadcom VideoCore III processor&quot;</span>                                        },</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac167366495875d0376780da2557bfe8b">EM_LATTICEMICO32</a>, <span class="stringliteral">&quot;RISC processor for Lattice FPGA architecture&quot;</span>                            },</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2382e39f1f2e827ba3761a2dfbbb1105">EM_SE_C17</a>       , <span class="stringliteral">&quot;Seiko Epson C17 family&quot;</span>                                                  },</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a0cb6243cdc86f72e4654c6fb8e9a2dd5">EM_TI_C6000</a>     , <span class="stringliteral">&quot;Texas Instruments TMS320C6000 DSP family&quot;</span>                                },</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a80820e9c568ba8a469dcee1bcb4b6e04">EM_TI_C2000</a>     , <span class="stringliteral">&quot;Texas Instruments TMS320C2000 DSP family&quot;</span>                                },</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a202479e018db0a8af3041cea479e4608">EM_TI_C5500</a>     , <span class="stringliteral">&quot;Texas Instruments TMS320C55x DSP family&quot;</span>                                 },</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abecb27d4b31d6256a2d6584876d90abd">EM_res143</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a82bbad27c02b15a59f0f8424128e772d">EM_res144</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abb62bd7d9475132b658801450e014de9">EM_res145</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a68c1bd7a66f5455d107bc81c71185b74">EM_res146</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a30775499c2e8a424a5dcb7254d89d47a">EM_res147</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5e748178a957d2aa6b758042011c3c92">EM_res148</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad14c70c3163ed38707e2b32db3de67aa">EM_res149</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afda9d09520f37b6962562b15e9983585">EM_res150</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a0dea76c46d39782e9d5d01b39249318e">EM_res151</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2b414165e01cac552d9b3e010cec770a">EM_res152</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a97ec93ebe8146ff64ddcbf8aea225e95">EM_res153</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a683d362ee631bbea664f0a1b03d1c41f">EM_res154</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4e1bffcc65853e344018965e5087bebf">EM_res155</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a6bdc76418eb6f337fd24a3fdd7318bb2">EM_res156</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8a3212e11b53da14ac6538e3b8d85848">EM_res157</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afcecfbaa24af9a32bd5378f9dabfbd38">EM_res158</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a7ed22146f98776ed29a296e793c637ec">EM_res159</a>       , <span class="stringliteral">&quot;Reserved&quot;</span>                                                                },</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a45cd259f1e70db9cdc75663e0fa2ac3c">EM_MMDSP_PLUS</a>   , <span class="stringliteral">&quot;STMicroelectronics 64bit VLIW Data Signal Processor&quot;</span>                     },</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a7c79de38f686a60e80abf52a7771b429">EM_CYPRESS_M8C</a>  , <span class="stringliteral">&quot;Cypress M8C microprocessor&quot;</span>                                              },</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab490243d70fe5a329588daec007f0d98">EM_R32C</a>         , <span class="stringliteral">&quot;Renesas R32C series microprocessors&quot;</span>                                     },</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af822a626a54b78a40327c38a0524853f">EM_TRIMEDIA</a>     , <span class="stringliteral">&quot;NXP Semiconductors TriMedia architecture family&quot;</span>                         },</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a29b42f20808ccc50bf1a94283ed96e8b">EM_QDSP6</a>        , <span class="stringliteral">&quot;QUALCOMM DSP6 Processor&quot;</span>                                                 },</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae375e48d17369115776615b400061b85">EM_8051</a>         , <span class="stringliteral">&quot;Intel 8051 and variants&quot;</span>                                                 },</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a440a08a6c2d66dc4ce4e31519f7abded">EM_STXP7X</a>       , <span class="stringliteral">&quot;STMicroelectronics STxP7x family&quot;</span>                                        },</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3e99c973b77fe4a05ce8ef81bbf1dbba">EM_NDS32</a>        , <span class="stringliteral">&quot;Andes Technology compact code size embedded RISC processor family&quot;</span>       },</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a7b166d1995d574616c75296e4bbf75f0">EM_ECOG1</a>        , <span class="stringliteral">&quot;Cyan Technology eCOG1X family&quot;</span>                                           },</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab1a78bf3f567d937488fa72d693174f7">EM_ECOG1X</a>       , <span class="stringliteral">&quot;Cyan Technology eCOG1X family&quot;</span>                                           },</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a404fc691f7c05409763d28df3fd8a9fe">EM_MAXQ30</a>       , <span class="stringliteral">&quot;Dallas Semiconductor MAXQ30 Core Micro-controllers&quot;</span>                      },</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a59f767308b3539ba69f3731043d602a5">EM_XIMO16</a>       , <span class="stringliteral">&quot;New Japan Radio (NJR) 16-bit DSP Processor&quot;</span>                              },</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a32cd23a67f8dea9094f40628356b7b78">EM_MANIK</a>        , <span class="stringliteral">&quot;M2000 Reconfigurable RISC Microprocessor&quot;</span>                                },</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad051e74d8ff2599a7167ad6e011d2229">EM_CRAYNV2</a>      , <span class="stringliteral">&quot;Cray Inc. NV2 vector architecture&quot;</span>                                       },</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a6477a386238f6a3e37e611505ae634cb">EM_RX</a>           , <span class="stringliteral">&quot;Renesas RX family&quot;</span>                                                       },</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aff62591952dbf2d52509786042b932c9">EM_METAG</a>        , <span class="stringliteral">&quot;Imagination Technologies META processor architecture&quot;</span>                    },</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a226068afb8e10a526c7bf954284b8041">EM_MCST_ELBRUS</a>  , <span class="stringliteral">&quot;MCST Elbrus general purpose hardware architecture&quot;</span>                       },</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a09458ab9d9d55ade4f5450bc9400d1b0">EM_ECOG16</a>       , <span class="stringliteral">&quot;Cyan Technology eCOG16 family&quot;</span>                                           },</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad1a532fc3e603f7e8d47a8b3ab3a0ff1">EM_CR16</a>         , <span class="stringliteral">&quot;National Semiconductor CompactRISC 16-bit processor&quot;</span>                     },</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3f94292d8efea5dc4be7b38a501506a9">EM_ETPU</a>         , <span class="stringliteral">&quot;Freescale Extended Time Processing Unit&quot;</span>                                 },</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afada0262827c8dc9cca53efd3394d942">EM_SLE9X</a>        , <span class="stringliteral">&quot;Infineon Technologies SLE9X core&quot;</span>                                        },</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac3c53bd156dda03e79d587a324277eba">EM_L1OM</a>         , <span class="stringliteral">&quot;Intel L1OM&quot;</span>                                                              },</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af5f689b76129273aa227cf39d462fa15">EM_INTEL181</a>     , <span class="stringliteral">&quot;Reserved by Intel&quot;</span>                                                       },</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abbdf1297178518cdaade010c7a0dcd73">EM_INTEL182</a>     , <span class="stringliteral">&quot;Reserved by Intel&quot;</span>                                                       },</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a398fac494ea85278e53dfffa426dea2c">EM_res183</a>       , <span class="stringliteral">&quot;Reserved by ARM&quot;</span>                                                         },</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad521e48610738512a18e9bbd5ae1f5ef">EM_res184</a>       , <span class="stringliteral">&quot;Reserved by ARM&quot;</span>                                                         },</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac5f0c17648c8e19cff04e0071087135a">EM_AVR32</a>        , <span class="stringliteral">&quot;Atmel Corporation 32-bit microprocessor family&quot;</span>                          },</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a79659e05ba1972537a902715cc596073">EM_STM8</a>         , <span class="stringliteral">&quot;STMicroeletronics STM8 8-bit microcontroller&quot;</span>                            },</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a17dbd416a2b0c750f5dd5514052a678a">EM_TILE64</a>       , <span class="stringliteral">&quot;Tilera TILE64 multicore architecture family&quot;</span>                             },</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab83eadc2ce9d7f491f5ca4be2f52f65e">EM_TILEPRO</a>      , <span class="stringliteral">&quot;Tilera TILEPro multicore architecture family&quot;</span>                            },</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a1388702a5d037cfb95f85952b8a85182">EM_MICROBLAZE</a>   , <span class="stringliteral">&quot;Xilinx MicroBlaze 32-bit RISC soft processor core&quot;</span>                       },</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a25276c9c11f0342971738bbcf8d97d4c">EM_CUDA</a>         , <span class="stringliteral">&quot;NVIDIA CUDA architecture &quot;</span>                                               },</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;};</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>section_type_table_t {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> <a class="code" href="elf__types_8hpp.xhtml#a0129045e44f674a632feb79c4c24d44d">Elf64_Half</a> key;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*      str;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;} section_type_table [] = </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;{</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a>         , <span class="stringliteral">&quot;NULL&quot;</span>          },</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4bff22edbae51353ba9b3572d424b91a">SHT_PROGBITS</a>     , <span class="stringliteral">&quot;PROGBITS&quot;</span>      },</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4add7784e43ec3d3b9c09d3ffc476a81">SHT_SYMTAB</a>       , <span class="stringliteral">&quot;SYMTAB&quot;</span>        },</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af4b916dc4ca5016fb5c374068002a532">SHT_STRTAB</a>       , <span class="stringliteral">&quot;STRTAB&quot;</span>        },</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abf2fc2781a2869352c2ffa0555f34118">SHT_RELA</a>         , <span class="stringliteral">&quot;RELA&quot;</span>          },</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a446fd322326bea21373453c80c3f7925">SHT_HASH</a>         , <span class="stringliteral">&quot;HASH&quot;</span>          },</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3a9278d12cf2c9e7eaca87688d0a6e37">SHT_DYNAMIC</a>      , <span class="stringliteral">&quot;DYNAMIC&quot;</span>       },</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a65506a79f0e972c851851af7b1008d94">SHT_NOTE</a>         , <span class="stringliteral">&quot;NOTE&quot;</span>          },</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a>       , <span class="stringliteral">&quot;NOBITS&quot;</span>        },</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2aea2ed985f81f13a157fe2da02a621a">SHT_REL</a>          , <span class="stringliteral">&quot;REL&quot;</span>           },</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ace0ce008ff50406077a9450174fe55a5">SHT_SHLIB</a>        , <span class="stringliteral">&quot;SHLIB&quot;</span>         },</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa9949aedf49107f6a07e618d5d791d40">SHT_DYNSYM</a>       , <span class="stringliteral">&quot;DYNSYM&quot;</span>        },</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa0269f148b09419d27be6289b4ce026f">SHT_INIT_ARRAY</a>   , <span class="stringliteral">&quot;INIT_ARRAY&quot;</span>    },</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a09b4d64e68fc2a9ac211589c377ed76a">SHT_FINI_ARRAY</a>   , <span class="stringliteral">&quot;FINI_ARRAY&quot;</span>    },</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa7326ce59e1988302584ba6ac9772c32">SHT_PREINIT_ARRAY</a>, <span class="stringliteral">&quot;PREINIT_ARRAY&quot;</span> },</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#adc7eaa3939293c6e4b422f96107b4824">SHT_GROUP</a>        , <span class="stringliteral">&quot;GROUP&quot;</span>         },</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a1ab74ecc44225e3741a171a962d79318">SHT_SYMTAB_SHNDX</a> , <span class="stringliteral">&quot;SYMTAB_SHNDX &quot;</span> },</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;};</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>segment_type_table_t {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> key;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*    str;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;} segment_type_table [] = </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;{</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a854729c1dc4623abeaeb765a1b745012">PT_NULL</a>   , <span class="stringliteral">&quot;NULL&quot;</span>    },</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a84d7768fd6c6ece599d297090900cf92">PT_LOAD</a>   , <span class="stringliteral">&quot;LOAD&quot;</span>    },</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2121a2f01c51e8462bfd4d47725649d8">PT_DYNAMIC</a>, <span class="stringliteral">&quot;DYNAMIC&quot;</span> },</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abcd3aa15bc567949c1ab6b1abc137710">PT_INTERP</a> , <span class="stringliteral">&quot;INTERP&quot;</span>  },</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a72baf87d62607c7fdccd3b8010d4ce30">PT_NOTE</a>   , <span class="stringliteral">&quot;NOTE&quot;</span>    },</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#abff9f38fd394e09e60f5640550a23e46">PT_SHLIB</a>  , <span class="stringliteral">&quot;SHLIB&quot;</span>   },</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a58ff00be749ca4000074f9b9066a1056">PT_PHDR</a>   , <span class="stringliteral">&quot;PHDR&quot;</span>    },</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9754ced0bafacecea425b892fb796a57">PT_TLS</a>    , <span class="stringliteral">&quot;TLS&quot;</span>     },</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;};</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>segment_flag_table_t {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> key;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*    str;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;} segment_flag_table [] = </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;{</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    { 0, <span class="stringliteral">&quot;&quot;</span>    },</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    { 1, <span class="stringliteral">&quot;X&quot;</span>   },</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    { 2, <span class="stringliteral">&quot;W&quot;</span>   },</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    { 3, <span class="stringliteral">&quot;WX&quot;</span>  },</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    { 4, <span class="stringliteral">&quot;R&quot;</span>   },</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    { 5, <span class="stringliteral">&quot;RX&quot;</span>  },</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    { 6, <span class="stringliteral">&quot;RW&quot;</span>  },</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    { 7, <span class="stringliteral">&quot;RWX&quot;</span> },</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;};</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>symbol_bind_t {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> key;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*    str;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;} symbol_bind_table [] = </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;{</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a72c40de459931e6f1d041201dc7398b1">STB_LOCAL</a>   , <span class="stringliteral">&quot;LOCAL&quot;</span>    },</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8091960a6799bf71a7494551dac1a2e8">STB_GLOBAL</a>  , <span class="stringliteral">&quot;GLOBAL&quot;</span>   },</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad4247ded90f9371e3c4d2f7dda260c93">STB_WEAK</a>    , <span class="stringliteral">&quot;WEAK&quot;</span>     },</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ab764e4fb4280d76967bf382a17d5b1d1">STB_LOOS</a>    , <span class="stringliteral">&quot;LOOS&quot;</span>     },</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a934c6e5a5405f46e343d8493a4f8f6d7">STB_HIOS</a>    , <span class="stringliteral">&quot;HIOS&quot;</span>     },</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae018a10f79ac52cbc14ee46cf841ed62">STB_MULTIDEF</a>, <span class="stringliteral">&quot;MULTIDEF&quot;</span> },</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4f4d0360fcb960e31e119973a472010e">STB_LOPROC</a>  , <span class="stringliteral">&quot;LOPROC&quot;</span>   },</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5fa61266452365ab0e2d2ad32b87043e">STB_HIPROC</a>  , <span class="stringliteral">&quot;HIPROC&quot;</span>   },</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;};</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>symbol_type_t {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> key;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*    str;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;} symbol_type_table [] = </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;{</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aa15a54cc9c881e4d54daedc9d984c2fc">STT_NOTYPE</a> , <span class="stringliteral">&quot;NOTYPE&quot;</span>  },</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac236cc313291ed38ecb346a8b4bde6b2">STT_OBJECT</a> , <span class="stringliteral">&quot;OBJECT&quot;</span>  },</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9cdfedf900935f23f6e409ce378dc1d2">STT_FUNC</a>   , <span class="stringliteral">&quot;FUNC&quot;</span>    },</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9e9a3c0fa59c3fc896f8e4c1872c6af1">STT_SECTION</a>, <span class="stringliteral">&quot;SECTION&quot;</span> },</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a983395f99446fa4d398c4e902bec34c6">STT_FILE</a>   , <span class="stringliteral">&quot;FILE&quot;</span>    },</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a0067af965ad01b11be77380eed14efb8">STT_COMMON</a> , <span class="stringliteral">&quot;COMMON&quot;</span>  },</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae2d45eab9a7d620e24df1b6c9fd43d55">STT_TLS</a>    , <span class="stringliteral">&quot;TLS&quot;</span>     },</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aebb605da5285a99f7475cb17214955a2">STT_LOOS</a>   , <span class="stringliteral">&quot;LOOS&quot;</span>    },</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a6de042ae014d95d7b9e0649e0ecfff8e">STT_HIOS</a>   , <span class="stringliteral">&quot;HIOS&quot;</span>    },</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aeb49b6a738078d32e5979885e26c4ddf">STT_LOPROC</a> , <span class="stringliteral">&quot;LOPROC&quot;</span>  },</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5bf951d9b37f10dfe17a1bd6b4489599">STT_HIPROC</a> , <span class="stringliteral">&quot;HIPROC&quot;</span>  },</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;};</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keyword">static</span> <span class="keyword">struct </span>dynamic_tag_t {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a> key;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>*    str;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;} dynamic_tag_table [] = </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;{</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#adeef14c6d411e415343fd616c16d1568">DT_NULL</a>           , <span class="stringliteral">&quot;NULL&quot;</span>            },</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4451778c7253623b413bb160d47ee1e6">DT_NEEDED</a>         , <span class="stringliteral">&quot;NEEDED&quot;</span>          },</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a9e5d691d362627655a9bbfb9ded5e7ed">DT_PLTRELSZ</a>       , <span class="stringliteral">&quot;PLTRELSZ&quot;</span>        },</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2060cf45d9ee7217dc3880a78c12d316">DT_PLTGOT</a>         , <span class="stringliteral">&quot;PLTGOT&quot;</span>          },</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af38c667f9a1573d87caa9348b18f3411">DT_HASH</a>           , <span class="stringliteral">&quot;HASH&quot;</span>            },</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afba78bdbf28e311e5f3e478f07905aed">DT_STRTAB</a>         , <span class="stringliteral">&quot;STRTAB&quot;</span>          },</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3a4f3eea0cdef015deb56d85476118d1">DT_SYMTAB</a>         , <span class="stringliteral">&quot;SYMTAB&quot;</span>          },</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af3fc0eb843f585ae41c72b57a5e4258e">DT_RELA</a>           , <span class="stringliteral">&quot;RELA&quot;</span>            },</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a6833e2faf117338d34ba80f30d981370">DT_RELASZ</a>         , <span class="stringliteral">&quot;RELASZ&quot;</span>          },</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a8028213ea49da91a81f9f1e893ea56b7">DT_RELAENT</a>        , <span class="stringliteral">&quot;RELAENT&quot;</span>         },</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aebb0156d8b53a9895935c26c2f766ef9">DT_STRSZ</a>          , <span class="stringliteral">&quot;STRSZ&quot;</span>           },</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ac54ac9d514ac475109e978a43c43f5c3">DT_SYMENT</a>         , <span class="stringliteral">&quot;SYMENT&quot;</span>          },</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a2c316800fdd2ad211b26737fa44da6dd">DT_INIT</a>           , <span class="stringliteral">&quot;INIT&quot;</span>            },</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a813d71f2e87f1c5cf856b510bb8e62ff">DT_FINI</a>           , <span class="stringliteral">&quot;FINI&quot;</span>            },</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae8424126f5678f1819f8303090e721e1">DT_SONAME</a>         , <span class="stringliteral">&quot;SONAME&quot;</span>          },</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a3d28f19a143e83bbe49e3853cea4722f">DT_RPATH</a>          , <span class="stringliteral">&quot;RPATH&quot;</span>           },</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a60bd22434b4a90978499a300fb76e1fb">DT_SYMBOLIC</a>       , <span class="stringliteral">&quot;SYMBOLIC&quot;</span>        },</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a91eac2138273488244f4865cd05fd12e">DT_REL</a>            , <span class="stringliteral">&quot;REL&quot;</span>             },</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a5693118a149e462dd602f7310a4430e6">DT_RELSZ</a>          , <span class="stringliteral">&quot;RELSZ&quot;</span>           },</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#adfa81a12735e992ed33d74373ae9ff53">DT_RELENT</a>         , <span class="stringliteral">&quot;RELENT&quot;</span>          },</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a87300a0cb6754476456d9067b77656ba">DT_PLTREL</a>         , <span class="stringliteral">&quot;PLTREL&quot;</span>          },</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#af561e146ca63f6aba12f7d6304859047">DT_DEBUG</a>          , <span class="stringliteral">&quot;DEBUG&quot;</span>           },</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4f48322458d6741e9878dee0ef087a2a">DT_TEXTREL</a>        , <span class="stringliteral">&quot;TEXTREL&quot;</span>         },</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad7cbdc6f9aeb70f37aec7ae6c2311edc">DT_JMPREL</a>         , <span class="stringliteral">&quot;JMPREL&quot;</span>          },</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a4fa692a7df628fcc38639a78b1ec1c1f">DT_BIND_NOW</a>       , <span class="stringliteral">&quot;BIND_NOW&quot;</span>        },</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad671b939b8e96e1982596bfd838c1550">DT_INIT_ARRAY</a>     , <span class="stringliteral">&quot;INIT_ARRAY&quot;</span>      },</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a37762d3fdf61130fba8b66169b4a5397">DT_FINI_ARRAY</a>     , <span class="stringliteral">&quot;FINI_ARRAY&quot;</span>      },</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a0beebfd8ecb48e286c3865cc38e7ec1e">DT_INIT_ARRAYSZ</a>   , <span class="stringliteral">&quot;INIT_ARRAYSZ&quot;</span>    },</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae631a12d4da4a4061878bcaac4a3252d">DT_FINI_ARRAYSZ</a>   , <span class="stringliteral">&quot;FINI_ARRAYSZ&quot;</span>    },</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ad57b0251167dc8a0bf88cf1427a443cc">DT_RUNPATH</a>        , <span class="stringliteral">&quot;RUNPATH&quot;</span>         },</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#aefc5ab22d90f1b6407cc6dc8b3dd7565">DT_FLAGS</a>          , <span class="stringliteral">&quot;FLAGS&quot;</span>           },</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#ae840e9570c7fc7b0519b6e96601443c3">DT_ENCODING</a>       , <span class="stringliteral">&quot;ENCODING&quot;</span>        },</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#afd9fddcefba0ad8aa2382b8866227d77">DT_PREINIT_ARRAY</a>  , <span class="stringliteral">&quot;PREINIT_ARRAY&quot;</span>   },</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a1f4e4e5d0d85d0b1a4246dea9dd75cd3">DT_PREINIT_ARRAYSZ</a>, <span class="stringliteral">&quot;PREINIT_ARRAYSZ&quot;</span> },</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    { <a class="code" href="elf__types_8hpp.xhtml#a877e7920a2ca344afdcd551b73167f80">DT_MAXPOSTAGS</a>     , <span class="stringliteral">&quot;MAXPOSTAGS&quot;</span>      },</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;};</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">ELFIO::Elf_Xword</a> MAX_DATA_ENTRIES = 64;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00419"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml">  419</a></span>&#160;<span class="keyword">class </span><a class="code" href="classELFIO_1_1dump.xhtml">dump</a></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;{</div>
<div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">  421</a></span>&#160;<span class="preprocessor">#define DUMP_DEC_FORMAT( width ) std::setw(width) &lt;&lt; std::setfill( &#39; &#39; ) &lt;&lt; \</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="preprocessor">                                 std::dec &lt;&lt; std::right</span></div>
<div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">  423</a></span>&#160;<span class="preprocessor">#define DUMP_HEX_FORMAT( width ) std::setw(width) &lt;&lt; std::setfill( &#39;0&#39; ) &lt;&lt; \</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="preprocessor">                                 std::hex &lt;&lt; std::right</span></div>
<div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">  425</a></span>&#160;<span class="preprocessor">#define DUMP_STR_FORMAT( width ) std::setw(width) &lt;&lt; std::setfill( &#39; &#39; ) &lt;&lt; \</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="preprocessor">                                 std::hex &lt;&lt; std::left</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a16ee3f884fdff1bfd87d2513543b4d39">  431</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a16ee3f884fdff1bfd87d2513543b4d39">header</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;ELF Header&quot;</span>     &lt;&lt; std::endl                               &lt;&lt; std::endl</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  Class:      &quot;</span> &lt;&lt; str_class( reader.get_class() )         &lt;&lt; std::endl</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  Encoding:   &quot;</span> &lt;&lt; str_endian( reader.get_encoding() )     &lt;&lt; std::endl</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  ELFVersion: &quot;</span> &lt;&lt; str_version( reader.get_elf_version() ) &lt;&lt; std::endl</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  Type:       &quot;</span> &lt;&lt; str_type( reader.get_type() )           &lt;&lt; std::endl</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  Machine:    &quot;</span> &lt;&lt; str_machine( reader.get_machine() )     &lt;&lt; std::endl</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  Version:    &quot;</span> &lt;&lt; str_version( reader.get_version() )     &lt;&lt; std::endl</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  Entry:      &quot;</span> &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; std::hex &lt;&lt; reader.get_entry()  &lt;&lt; std::endl</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;  Flags:      &quot;</span> &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; std::hex &lt;&lt; reader.get_flags()  &lt;&lt; std::endl</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            &lt;&lt; std::endl;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#aee9c2e17dc9c709b78401f7a38a31c8e">  447</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#aee9c2e17dc9c709b78401f7a38a31c8e">section_headers</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    {</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> n = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>();</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        <span class="keywordflow">if</span> ( n == 0 ) {</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        }</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;Section Headers:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keywordflow">if</span> ( reader.get_class() == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) { <span class="comment">// Output for 32-bit</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[  Nr ] Type              Addr     Size     ES Flg Lk Inf Al Name&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        <span class="keywordflow">else</span> {                                    <span class="comment">// Output for 64-bit</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[  Nr ] Type              Addr             Size             ES   Flg&quot;</span> &lt;&lt; std::endl</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;        Lk   Inf  Al      Name&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        }</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; n; ++i ) { <span class="comment">// For all sections</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[i];</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <a class="code" href="classELFIO_1_1dump.xhtml#a5a8ef9b856de2e1b0447ee6a74fd98d9">section_header</a>( out, i, sec, reader.get_class() );</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        }</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        </div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;Key to Flags: W (write), A (alloc), X (execute)\n\n&quot;</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            &lt;&lt; std::endl;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    }</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00475"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a5a8ef9b856de2e1b0447ee6a74fd98d9">  475</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a5a8ef9b856de2e1b0447ee6a74fd98d9">section_header</a>( std::ostream&amp; out, <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> no, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec,</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> elf_class )</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    {</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        std::ios_base::fmtflags original_flags = out.flags();</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        <span class="keywordflow">if</span> ( elf_class == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) { <span class="comment">// Output for 32-bit</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> </div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; no</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 17 ) &lt;&lt; str_section_type( sec-&gt;get_type() ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; sec-&gt;get_address()                  &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; sec-&gt;get_size()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  2 ) &lt;&lt; sec-&gt;get_entry_size()               &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  3 ) &lt;&lt; <a class="code" href="classELFIO_1_1dump.xhtml#a9f52208b5882183d479572c55960525f">section_flags</a>( sec-&gt;get_flags() )   &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  2 ) &lt;&lt; sec-&gt;get_link()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  3 ) &lt;&lt; sec-&gt;get_info()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  2 ) &lt;&lt; sec-&gt;get_addr_align()               &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 17 ) &lt;&lt; sec-&gt;get_name()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        }</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">else</span> {                           <span class="comment">// Output for 64-bit</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> </div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; no</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 17 ) &lt;&lt; str_section_type( sec-&gt;get_type() ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; sec-&gt;get_address()                  &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; sec-&gt;get_size()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  4 ) &lt;&lt; sec-&gt;get_entry_size()               &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  3 ) &lt;&lt; <a class="code" href="classELFIO_1_1dump.xhtml#a9f52208b5882183d479572c55960525f">section_flags</a>( sec-&gt;get_flags() )   &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                &lt;&lt; std::endl</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;        &quot;</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  4 ) &lt;&lt; sec-&gt;get_link()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  4 ) &lt;&lt; sec-&gt;get_info()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  4 ) &lt;&lt; sec-&gt;get_addr_align()               &lt;&lt; <span class="stringliteral">&quot;    &quot;</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 17 ) &lt;&lt; sec-&gt;get_name()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        }</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        out.flags(original_flags);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keywordflow">return</span>; </div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    }</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00520"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#ad1a6efd3db614d85b0c50a54451e696a">  520</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#ad1a6efd3db614d85b0c50a54451e696a">segment_headers</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    {</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> n = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>.<a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">size</a>();</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <span class="keywordflow">if</span> ( n == 0 ) {</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        }</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;Segment headers:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="keywordflow">if</span> ( reader.get_class() == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) { <span class="comment">// Output for 32-bit</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[  Nr ] Type           VirtAddr PhysAddr FileSize Mem.Size Flags    Align&quot;</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        }</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        <span class="keywordflow">else</span> {                                    <span class="comment">// Output for 64-bit</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[  Nr ] Type           VirtAddr         PhysAddr         Flags&quot;</span> &lt;&lt; std::endl</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;                       FileSize         Mem.Size         Align&quot;</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        }</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            </div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; n; ++i ) {</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>[i];</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <a class="code" href="classELFIO_1_1dump.xhtml#a3e837ae64e7c733dfd0d1bc004b53529">segment_header</a>( out, i, seg, reader.get_class() );</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        }</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            </div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    }</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00548"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a3e837ae64e7c733dfd0d1bc004b53529">  548</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a3e837ae64e7c733dfd0d1bc004b53529">segment_header</a>( std::ostream&amp; out, <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> no, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg,</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> elf_class )</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    {</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        std::ios_base::fmtflags original_flags = out.flags();</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keywordflow">if</span> ( elf_class == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) { <span class="comment">// Output for 32-bit</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> </div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; no</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 14 ) &lt;&lt; str_segment_type( seg-&gt;get_type() )  &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; seg-&gt;get_virtual_address()           &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; seg-&gt;get_physical_address()          &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; seg-&gt;get_file_size()                 &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; seg-&gt;get_memory_size()               &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  8 ) &lt;&lt; str_segment_flag( seg-&gt;get_flags() ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; seg-&gt;get_align()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        }</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        <span class="keywordflow">else</span> {                           <span class="comment">// Output for 64-bit</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> </div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; no</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 14 ) &lt;&lt; str_segment_type( seg-&gt;get_type() )  &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; seg-&gt;get_virtual_address()           &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; seg-&gt;get_physical_address()          &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 16 ) &lt;&lt; str_segment_flag( seg-&gt;get_flags() ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                &lt;&lt; std::endl</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;                       &quot;</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; seg-&gt;get_file_size()                 &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; seg-&gt;get_memory_size()               &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; seg-&gt;get_align()                     &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        }</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        out.flags(original_flags);</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    </div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00587"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#ac2fee2fccc29233d6839b39a84805637">  587</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#ac2fee2fccc29233d6839b39a84805637">symbol_tables</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    {</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> n = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>();</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; n; ++i ) {    <span class="comment">// For all sections</span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[i];</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#a4add7784e43ec3d3b9c09d3ffc476a81">SHT_SYMTAB</a> == sec-&gt;get_type() || <a class="code" href="elf__types_8hpp.xhtml#aa9949aedf49107f6a07e618d5d791d40">SHT_DYNSYM</a> == sec-&gt;get_type() ) {</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                <a class="code" href="classELFIO_1_1symbol__section__accessor.xhtml">symbol_section_accessor</a> symbols( reader, sec );</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a>     sym_no = symbols.<a class="code" href="classELFIO_1_1symbol__section__accessor.xhtml#aea9697f3f01b0406a7832f99c31ce8b3">get_symbols_num</a>();</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                <span class="keywordflow">if</span> ( sym_no &gt; 0 ) {</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                    out &lt;&lt; <span class="stringliteral">&quot;Symbol table (&quot;</span> &lt;&lt; sec-&gt;get_name() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                    <span class="keywordflow">if</span> ( reader.get_class() == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) { <span class="comment">// Output for 32-bit</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                        out &lt;&lt; <span class="stringliteral">&quot;[  Nr ] Value    Size     Type    Bind      Sect Name&quot;</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                            &lt;&lt; std::endl;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                    }</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                    <span class="keywordflow">else</span> {                                    <span class="comment">// Output for 64-bit</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                        out &lt;&lt; <span class="stringliteral">&quot;[  Nr ] Value            Size             Type    Bind      Sect&quot;</span> &lt;&lt; std::endl</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                            &lt;&lt; <span class="stringliteral">&quot;        Name&quot;</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                            &lt;&lt; std::endl;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                    }</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                    <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; sym_no; ++i ) {</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                        std::string   name;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                        <a class="code" href="namespaceELFIO.xhtml#a10b98acc49bab16ded42171fb3431f83">Elf64_Addr</a>    value   = 0;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                        <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a>     size    = 0;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> bind    = 0;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> type    = 0;</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>      <a class="code" href="classELFIO_1_1section.xhtml">section</a> = 0;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> other   = 0;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                        symbols.<a class="code" href="classELFIO_1_1symbol__section__accessor.xhtml#a073e7ac88181aefa032c2fb94040e8d4">get_symbol</a>( i, name, value, size, bind, type, section, other );</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                        <a class="code" href="classELFIO_1_1dump.xhtml#a8bc5912b0f4138ccf89b0e46ce8781e8">symbol_table</a>( out, i, name, value, size, bind, type, section, reader.get_class() );</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                    }</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                    out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                }</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;            }</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        }</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    }</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    </div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00627"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a8bc5912b0f4138ccf89b0e46ce8781e8">  627</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a8bc5912b0f4138ccf89b0e46ce8781e8">symbol_table</a>( std::ostream&amp; out,</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                  <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>      no,</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                  std::string&amp;  name,</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                  <a class="code" href="namespaceELFIO.xhtml#a10b98acc49bab16ded42171fb3431f83">Elf64_Addr</a>    value,</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                  <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a>     size,</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> bind,</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> type,</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                  <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a>      <a class="code" href="classELFIO_1_1section.xhtml">section</a>,</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  elf_class )</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    {</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        std::ios_base::fmtflags original_flags = out.flags();</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keywordflow">if</span> ( elf_class == <a class="code" href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a> ) { <span class="comment">// Output for 32-bit</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> </div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; no</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; value                   &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>(  8 ) &lt;&lt; size                    &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  7 ) &lt;&lt; str_symbol_type( type ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  8 ) &lt;&lt; str_symbol_bind( bind ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; section                 &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  1 ) &lt;&lt; name                    &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        }</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">else</span> {                           <span class="comment">// Output for 64-bit</span></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> </div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; no</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; value                   &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; size                    &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  7 ) &lt;&lt; str_symbol_type( type ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  8 ) &lt;&lt; str_symbol_bind( bind ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; section                 &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                &lt;&lt; std::endl</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;        &quot;</span></div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>(  1 ) &lt;&lt; name                    &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                &lt;&lt; std::endl;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        }</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        out.flags(original_flags);</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    }</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    </div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00671"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a9f3f44fe3ed3d5d88efd6f7229baa0e0">  671</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a9f3f44fe3ed3d5d88efd6f7229baa0e0">notes</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    {</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> no = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>();</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; no; ++i ) {                 <span class="comment">// For all sections</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[i];</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#a65506a79f0e972c851851af7b1008d94">SHT_NOTE</a> == sec-&gt;get_type() ) {              <span class="comment">// Look at notes</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                <a class="code" href="classELFIO_1_1note__section__accessor.xhtml">note_section_accessor</a> <a class="code" href="classELFIO_1_1dump.xhtml#a9f3f44fe3ed3d5d88efd6f7229baa0e0">notes</a>( reader, sec );</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                <span class="keywordtype">int</span> no_notes = notes.<a class="code" href="classELFIO_1_1note__section__accessor.xhtml#ac96de265ea12f801797638f17092db76">get_notes_num</a>();</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                <span class="keywordflow">if</span> ( no &gt; 0 ) {</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                    out &lt;&lt; <span class="stringliteral">&quot;Note section (&quot;</span> &lt;&lt; sec-&gt;get_name() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; std::endl</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;    No Type     Name&quot;</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                        &lt;&lt; std::endl;</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                    <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> j = 0; j &lt; no_notes; ++j ) {    <span class="comment">// For all notes</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                        <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a>    type;</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                        std::string name;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                        <span class="keywordtype">void</span>*       desc;</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                        <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a>    descsz;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                    </div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                        notes.<a class="code" href="classELFIO_1_1note__section__accessor.xhtml#afd087fe8678e7b7f05bcc69be2ed88f0">get_note</a>( j, type, name, desc, descsz );</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                        <span class="comment">// &#39;name&#39; usually contains \0 at the end. Try to fix it</span></div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;                        name = name.c_str();</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                        <a class="code" href="classELFIO_1_1dump.xhtml#a056b95608d0bf7b982c5601713e7ad52">note</a>( out, j, type, name );</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                    }</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                    </div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                    out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                }</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;            }</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        }</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    }</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00703"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a056b95608d0bf7b982c5601713e7ad52">  703</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a056b95608d0bf7b982c5601713e7ad52">note</a>( std::ostream&amp;      out,</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;          <span class="keywordtype">int</span>                no,</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;          <a class="code" href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">Elf_Word</a>           type,</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;          <span class="keyword">const</span> std::string&amp; name )</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    {</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;  [&quot;</span> </div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;            &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>( 2 ) &lt;&lt; no</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 8 ) &lt;&lt; type &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;            &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 1 ) &lt;&lt; name</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            &lt;&lt; std::endl;</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    }</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    </div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00718"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a86b6fd3d926ec4ffd27e266836adf600">  718</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a86b6fd3d926ec4ffd27e266836adf600">dynamic_tags</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    {</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> n = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>();</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; n; ++i ) {    <span class="comment">// For all sections</span></div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[i];</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#a3a9278d12cf2c9e7eaca87688d0a6e37">SHT_DYNAMIC</a> == sec-&gt;get_type() ) {</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                <a class="code" href="classELFIO_1_1dynamic__section__accessor.xhtml">dynamic_section_accessor</a> dynamic( reader, sec );</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> dyn_no = dynamic.<a class="code" href="classELFIO_1_1dynamic__section__accessor.xhtml#a4a1f80115e8385d2ebfe0820c4862bd0">get_entries_num</a>();</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                <span class="keywordflow">if</span> ( dyn_no &gt; 0 ) {</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                    out &lt;&lt; <span class="stringliteral">&quot;Dynamic section (&quot;</span> &lt;&lt; sec-&gt;get_name() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                    out &lt;&lt; <span class="stringliteral">&quot;[  Nr ] Tag              Name/Value&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                    <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; dyn_no; ++i ) {</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                        <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a>   tag   = 0;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                        <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a>   value = 0;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                        std::string str;</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                        dynamic.<a class="code" href="classELFIO_1_1dynamic__section__accessor.xhtml#a96572acd12da838914034ab7c6993d65">get_entry</a>( i, tag, value, str );</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                        <a class="code" href="classELFIO_1_1dump.xhtml#a3950958d72a3b5249d8a176e90fbfd10">dynamic_tag</a>( out, i, tag, value, str, reader.get_class() );</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                        <span class="keywordflow">if</span> ( <a class="code" href="elf__types_8hpp.xhtml#adeef14c6d411e415343fd616c16d1568">DT_NULL</a> == tag ) {</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                        }</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                    }</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                    out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                }</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            }</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        }</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    }</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    </div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00749"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a3950958d72a3b5249d8a176e90fbfd10">  749</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a3950958d72a3b5249d8a176e90fbfd10">dynamic_tag</a>( std::ostream&amp; out,</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                 <span class="keywordtype">int</span>           no,</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                 <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a>     tag,</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                 <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a>     value,</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                 std::string   str,</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  <span class="comment">/*elf_class*/</span> )</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    {</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> </div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a>(  5 ) &lt;&lt; no</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;] &quot;</span></div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 16 ) &lt;&lt; str_dynamic_tag( tag ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;            <span class="keywordflow">if</span> ( str.empty() ) {</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                out &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 16 ) &lt;&lt; value                  &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;            }</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                out &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a>( 32 ) &lt;&lt; str                    &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;            }</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;            out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    }</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00771"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a97b27bf46ba4ac7addf47f32cc35af96">  771</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a97b27bf46ba4ac7addf47f32cc35af96">section_data</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec )</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    {</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        std::ios_base::fmtflags original_flags = out.flags();</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        out &lt;&lt; sec-&gt;get_name() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* pdata = sec-&gt;<a class="code" href="classELFIO_1_1section.xhtml#accfaef20485ee803990b260130022bd2">get_data</a>();</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">ELFIO::Elf_Xword</a> i;</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; std::min( sec-&gt;get_size(), MAX_DATA_ENTRIES ); ++i ) {</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            <span class="keywordflow">if</span> ( i % 16 == 0 ) {</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> &lt;&lt;  <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 8 ) &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            }</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 2 ) &lt;&lt; ( pdata[i] &amp; 0x000000FF );</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            <span class="keywordflow">if</span> ( i % 16 == 15 ) {</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            }</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        }</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keywordflow">if</span> ( i % 16 != 0 ) {</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        }</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        out.flags(original_flags);</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        <span class="keywordflow">return</span>; </div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    }</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00800"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a7174e9f611a14c0b561a5c2ca7a9d340">  800</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a7174e9f611a14c0b561a5c2ca7a9d340">section_datas</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    {</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> n = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>.<a class="code" href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">size</a>();</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;        <span class="keywordflow">if</span> ( n == 0 ) {</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        }</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;Section Data:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 1; i &lt; n; ++i ) { <span class="comment">// For all sections</span></div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;            <a class="code" href="classELFIO_1_1section.xhtml">section</a>* sec = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">sections</a>[i];</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;            <span class="keywordflow">if</span> ( sec-&gt;get_type() == <a class="code" href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a> ) {</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;            }</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;            <a class="code" href="classELFIO_1_1dump.xhtml#a97b27bf46ba4ac7addf47f32cc35af96">section_data</a>( out, sec );</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        }</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    }</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00823"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a3185bd59b2f1eadd79528beb99baa4d6">  823</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a3185bd59b2f1eadd79528beb99baa4d6">segment_data</a>( std::ostream&amp; out, <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> no, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg )</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    {</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;        std::ios_base::fmtflags original_flags = out.flags();</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;Segment # &quot;</span> &lt;&lt; no &lt;&lt; std::endl;</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* pdata = seg-&gt;<a class="code" href="classELFIO_1_1segment.xhtml#a0e7c9e9da5d1df20f62117fd93607ddf">get_data</a>();</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">ELFIO::Elf_Xword</a> i;</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; std::min( seg-&gt;get_file_size(), MAX_DATA_ENTRIES ); ++i ) {</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;            <span class="keywordflow">if</span> ( i % 16 == 0 ) {</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                out &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> &lt;&lt;  <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 8 ) &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;            }</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;            out &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; <a class="code" href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a>( 2 ) &lt;&lt; ( pdata[i] &amp; 0x000000FF );</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;            <span class="keywordflow">if</span> ( i % 16 == 15 ) {</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;            }</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;        }</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;        <span class="keywordflow">if</span> ( i % 16 != 0 ) {</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;            out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        }</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        out.flags(original_flags);</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="keywordflow">return</span>; </div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    }</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00852"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a057132b6114ffffe9cf5266307727af1">  852</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a057132b6114ffffe9cf5266307727af1">segment_datas</a>( std::ostream&amp; out, <span class="keyword">const</span> <a class="code" href="classELFIO_1_1elfio.xhtml">elfio</a>&amp; reader )</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    {</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> n = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>.<a class="code" href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">size</a>();</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;        <span class="keywordflow">if</span> ( n == 0 ) {</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        }</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;Segment Data:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;        <span class="keywordflow">for</span> ( <a class="code" href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">Elf_Half</a> i = 0; i &lt; n; ++i ) { <span class="comment">// For all sections</span></div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;            <a class="code" href="classELFIO_1_1segment.xhtml">segment</a>* seg = reader.<a class="code" href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">segments</a>[i];</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;            <a class="code" href="classELFIO_1_1dump.xhtml#a3185bd59b2f1eadd79528beb99baa4d6">segment_data</a>( out, i, seg );</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;        }</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;        out &lt;&lt; std::endl;</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    }</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    </div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <span class="keyword">template</span>&lt; <span class="keyword">typename</span> T, <span class="keyword">typename</span> K &gt;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    std::string</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <span class="keyword">static</span></div>
<div class="line"><a name="l00875"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#afd3f40445fb3ece41e3e8b276c4f4073">  875</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#afd3f40445fb3ece41e3e8b276c4f4073">find_value_in_table</a>( <span class="keyword">const</span> T&amp; table, <span class="keyword">const</span> K&amp; key )</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    {</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;        std::string res = <span class="stringliteral">&quot;?&quot;</span>;</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <span class="keyword">sizeof</span>( table )/<span class="keyword">sizeof</span>( table[0] ); ++i ) {</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;            <span class="keywordflow">if</span> ( table[i].key == key ) {</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                res = table[i].str;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;            }</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        }</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;        <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    }</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    <span class="keyword">template</span>&lt; <span class="keyword">typename</span> T, <span class="keyword">typename</span> K &gt;</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;    <span class="keyword">static</span></div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    std::string</div>
<div class="line"><a name="l00893"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a31fa8d3df5e328ae55a15aebf2dbd4b2">  893</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a31fa8d3df5e328ae55a15aebf2dbd4b2">format_assoc</a>( <span class="keyword">const</span> T&amp; table, <span class="keyword">const</span> K&amp; key )</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    {</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;        std::string str = <a class="code" href="classELFIO_1_1dump.xhtml#afd3f40445fb3ece41e3e8b276c4f4073">find_value_in_table</a>( table, key );</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        <span class="keywordflow">if</span> ( str == <span class="stringliteral">&quot;?&quot;</span> ) {</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;            std::ostringstream oss;</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;            oss &lt;&lt; str &lt;&lt; <span class="stringliteral">&quot; (0x&quot;</span> &lt;&lt; std::hex &lt;&lt; key &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;            str = oss.str();</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;        }</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;        <span class="keywordflow">return</span> str;</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;    }</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    <span class="keyword">template</span>&lt; <span class="keyword">typename</span> T &gt;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    <span class="keyword">static</span></div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    std::string</div>
<div class="line"><a name="l00910"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a71a5e807d51756c402a5ec46743b15d3">  910</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a71a5e807d51756c402a5ec46743b15d3">format_assoc</a>( <span class="keyword">const</span> T&amp; table, <span class="keyword">const</span> <span class="keywordtype">char</span> key )</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    {</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classELFIO_1_1dump.xhtml#a31fa8d3df5e328ae55a15aebf2dbd4b2">format_assoc</a>( table, (<span class="keyword">const</span> <span class="keywordtype">int</span>)key );</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;    }</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    </div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    <span class="keyword">static</span></div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    std::string</div>
<div class="line"><a name="l00919"></a><span class="lineno"><a class="line" href="classELFIO_1_1dump.xhtml#a9f52208b5882183d479572c55960525f">  919</a></span>&#160;    <a class="code" href="classELFIO_1_1dump.xhtml#a9f52208b5882183d479572c55960525f">section_flags</a>( <a class="code" href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">Elf_Xword</a> flags )</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    {</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;        std::string ret = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        <span class="keywordflow">if</span> ( flags &amp; <a class="code" href="elf__types_8hpp.xhtml#a025c79223b0fee4676337d660f76b59b">SHF_WRITE</a> ) {</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;            ret += <span class="stringliteral">&quot;W&quot;</span>;</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;        }</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;        <span class="keywordflow">if</span> ( flags &amp; <a class="code" href="elf__types_8hpp.xhtml#a38476fe4ed88ac83ba86a4e103199a86">SHF_ALLOC</a> ) {</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;            ret += <span class="stringliteral">&quot;A&quot;</span>;</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;        }</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;        <span class="keywordflow">if</span> ( flags &amp; <a class="code" href="elf__types_8hpp.xhtml#ab3780594e35fbbc6e5028bcb921d0a76">SHF_EXECINSTR</a> ) {</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            ret += <span class="stringliteral">&quot;X&quot;</span>;</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;        }</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        <span class="keywordflow">return</span> ret;</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;    }</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00937"></a><span class="lineno"><a class="line" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">  937</a></span>&#160;<span class="preprocessor">#define STR_FUNC_TABLE( name )                    \</span></div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;<span class="preprocessor">    template&lt; typename T &gt;                        \</span></div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;<span class="preprocessor">    static                                        \</span></div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;<span class="preprocessor">    std::string                                   \</span></div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="preprocessor">    str_##name( const T key )                     \</span></div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="preprocessor">    {                                             \</span></div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;<span class="preprocessor">        return format_assoc( name##_table, key ); \</span></div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;<span class="preprocessor">    }</span></div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( <span class="keyword">class</span> )</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( endian )</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( version )</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( type )</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( machine )</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( section_type )</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( segment_type )</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( segment_flag )</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( symbol_bind )</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( symbol_type )</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <a class="code" href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a>( <a class="code" href="classELFIO_1_1dump.xhtml#a3950958d72a3b5249d8a176e90fbfd10">dynamic_tag</a> )</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="preprocessor">#undef STR_FUNC_TABLE</span></div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="preprocessor">#undef DUMP_DEC_FORMAT</span></div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="preprocessor">#undef DUMP_HEX_FORMAT</span></div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="preprocessor">#undef DUMP_STR_FORMAT</span></div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;}; <span class="comment">// class dump</span></div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    </div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;}; <span class="comment">// namespace ELFIO</span></div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="preprocessor">#endif // ELFIO_DUMP_HPP</span></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a37762d3fdf61130fba8b66169b4a5397"><div class="ttname"><a href="elf__types_8hpp.xhtml#a37762d3fdf61130fba8b66169b4a5397">DT_FINI_ARRAY</a></div><div class="ttdeci">#define DT_FINI_ARRAY</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00523">elf_types.hpp:523</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2aea2ed985f81f13a157fe2da02a621a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2aea2ed985f81f13a157fe2da02a621a">SHT_REL</a></div><div class="ttdeci">#define SHT_REL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00358">elf_types.hpp:358</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aeedf57dc509f8d7e0057fa364374166c"><div class="ttname"><a href="elf__types_8hpp.xhtml#aeedf57dc509f8d7e0057fa364374166c">EM_res130</a></div><div class="ttdeci">#define EM_res130</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00215">elf_types.hpp:215</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2eeb4439e78454a78e74181a95d47c97"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2eeb4439e78454a78e74181a95d47c97">EM_res024</a></div><div class="ttdeci">#define EM_res024</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00108">elf_types.hpp:108</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a942478985eb016311380dee473cc8c3e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a942478985eb016311380dee473cc8c3e">ET_EXEC</a></div><div class="ttdeci">#define ET_EXEC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00075">elf_types.hpp:75</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0307c9d093060e148ecca1c7cfb02429"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0307c9d093060e148ecca1c7cfb02429">EV_NONE</a></div><div class="ttdeci">#define EV_NONE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00281">elf_types.hpp:281</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad671b939b8e96e1982596bfd838c1550"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad671b939b8e96e1982596bfd838c1550">DT_INIT_ARRAY</a></div><div class="ttdeci">#define DT_INIT_ARRAY</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00522">elf_types.hpp:522</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a17dbd416a2b0c750f5dd5514052a678a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a17dbd416a2b0c750f5dd5514052a678a">EM_TILE64</a></div><div class="ttdeci">#define EM_TILE64</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00274">elf_types.hpp:274</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af3fc0eb843f585ae41c72b57a5e4258e"><div class="ttname"><a href="elf__types_8hpp.xhtml#af3fc0eb843f585ae41c72b57a5e4258e">DT_RELA</a></div><div class="ttdeci">#define DT_RELA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00504">elf_types.hpp:504</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a6de042ae014d95d7b9e0649e0ecfff8e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a6de042ae014d95d7b9e0649e0ecfff8e">STT_HIOS</a></div><div class="ttdeci">#define STT_HIOS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00411">elf_types.hpp:411</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3a4f3eea0cdef015deb56d85476118d1"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3a4f3eea0cdef015deb56d85476118d1">DT_SYMTAB</a></div><div class="ttdeci">#define DT_SYMTAB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00503">elf_types.hpp:503</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9cdfedf900935f23f6e409ce378dc1d2"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9cdfedf900935f23f6e409ce378dc1d2">STT_FUNC</a></div><div class="ttdeci">#define STT_FUNC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00405">elf_types.hpp:405</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a343a36d721130c5017a5669537e96822"><div class="ttname"><a href="elf__types_8hpp.xhtml#a343a36d721130c5017a5669537e96822">ET_NONE</a></div><div class="ttdeci">#define ET_NONE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00073">elf_types.hpp:73</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a7c59b6d72aa4b7d178416833d439ecc7"><div class="ttname"><a href="elf__types_8hpp.xhtml#a7c59b6d72aa4b7d178416833d439ecc7">EM_UNICORE</a></div><div class="ttdeci">#define EM_UNICORE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00195">elf_types.hpp:195</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab83eadc2ce9d7f491f5ca4be2f52f65e"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab83eadc2ce9d7f491f5ca4be2f52f65e">EM_TILEPRO</a></div><div class="ttdeci">#define EM_TILEPRO</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00275">elf_types.hpp:275</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a45cd259f1e70db9cdc75663e0fa2ac3c"><div class="ttname"><a href="elf__types_8hpp.xhtml#a45cd259f1e70db9cdc75663e0fa2ac3c">EM_MMDSP_PLUS</a></div><div class="ttdeci">#define EM_MMDSP_PLUS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00246">elf_types.hpp:246</a></div></div>
<div class="ttc" id="elfio__dump_8hpp_xhtml_ac81f0355957e4378321330a3d20ec6e5"><div class="ttname"><a href="elfio__dump_8hpp.xhtml#ac81f0355957e4378321330a3d20ec6e5">DUMP_STR_FORMAT</a></div><div class="ttdeci">#define DUMP_STR_FORMAT(width)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00425">elfio_dump.hpp:425</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1f4e4e5d0d85d0b1a4246dea9dd75cd3"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1f4e4e5d0d85d0b1a4246dea9dd75cd3">DT_PREINIT_ARRAYSZ</a></div><div class="ttdeci">#define DT_PREINIT_ARRAYSZ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00530">elf_types.hpp:530</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3463107b15b53e9d56600f9cd466044e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3463107b15b53e9d56600f9cd466044e">EM_res133</a></div><div class="ttdeci">#define EM_res133</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00218">elf_types.hpp:218</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0889fc3c476fe4884bb09c5c6577a098"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0889fc3c476fe4884bb09c5c6577a098">EM_MIPS_X</a></div><div class="ttdeci">#define EM_MIPS_X</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00136">elf_types.hpp:136</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3b0db6c4c1f251f6e979dc66d654d52c"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3b0db6c4c1f251f6e979dc66d654d52c">EM_68HC16</a></div><div class="ttdeci">#define EM_68HC16</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00154">elf_types.hpp:154</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afa2d180f2a8054a8406cc4535a522da4"><div class="ttname"><a href="elf__types_8hpp.xhtml#afa2d180f2a8054a8406cc4535a522da4">EM_AVR</a></div><div class="ttdeci">#define EM_AVR</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00168">elf_types.hpp:168</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab764e4fb4280d76967bf382a17d5b1d1"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab764e4fb4280d76967bf382a17d5b1d1">STB_LOOS</a></div><div class="ttdeci">#define STB_LOOS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00396">elf_types.hpp:396</a></div></div>
<div class="ttc" id="classELFIO_1_1symbol__section__accessor_xhtml"><div class="ttname"><a href="classELFIO_1_1symbol__section__accessor.xhtml">ELFIO::symbol_section_accessor</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__symbols_8hpp_source.xhtml#l00029">elfio_symbols.hpp:29</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abecb27d4b31d6256a2d6584876d90abd"><div class="ttname"><a href="elf__types_8hpp.xhtml#abecb27d4b31d6256a2d6584876d90abd">EM_res143</a></div><div class="ttdeci">#define EM_res143</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00229">elf_types.hpp:229</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0067af965ad01b11be77380eed14efb8"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0067af965ad01b11be77380eed14efb8">STT_COMMON</a></div><div class="ttdeci">#define STT_COMMON</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00408">elf_types.hpp:408</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3d33cb376c76e9fb077ddf5389f8f8b8"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3d33cb376c76e9fb077ddf5389f8f8b8">EM_SPARC</a></div><div class="ttdeci">#define EM_SPARC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00086">elf_types.hpp:86</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a19566d7b4dd9248b0688f1fdab5f943f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a19566d7b4dd9248b0688f1fdab5f943f">EM_MCORE</a></div><div class="ttdeci">#define EM_MCORE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00123">elf_types.hpp:123</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8091960a6799bf71a7494551dac1a2e8"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8091960a6799bf71a7494551dac1a2e8">STB_GLOBAL</a></div><div class="ttdeci">#define STB_GLOBAL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00394">elf_types.hpp:394</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4f4d0360fcb960e31e119973a472010e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4f4d0360fcb960e31e119973a472010e">STB_LOPROC</a></div><div class="ttdeci">#define STB_LOPROC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00399">elf_types.hpp:399</a></div></div>
<div class="ttc" id="elfio__dump_8hpp_xhtml_a9f8a0f482303ac55de390c0e22bb932d"><div class="ttname"><a href="elfio__dump_8hpp.xhtml#a9f8a0f482303ac55de390c0e22bb932d">DUMP_HEX_FORMAT</a></div><div class="ttdeci">#define DUMP_HEX_FORMAT(width)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00423">elfio_dump.hpp:423</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afd9fddcefba0ad8aa2382b8866227d77"><div class="ttname"><a href="elf__types_8hpp.xhtml#afd9fddcefba0ad8aa2382b8866227d77">DT_PREINIT_ARRAY</a></div><div class="ttdeci">#define DT_PREINIT_ARRAY</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00529">elf_types.hpp:529</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8cc685407ec2d1c5b7807789f5d0f2f3"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8cc685407ec2d1c5b7807789f5d0f2f3">EM_VIDEOCORE</a></div><div class="ttdeci">#define EM_VIDEOCORE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00180">elf_types.hpp:180</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2d130ebbbf1d832c2f0bb676df0181d7"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2d130ebbbf1d832c2f0bb676df0181d7">Elf32_Half</a></div><div class="ttdeci">#define Elf32_Half</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00062">elf_types.hpp:62</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a57486af2ae5e180263539a5395f1ed67"><div class="ttname"><a href="elf__types_8hpp.xhtml#a57486af2ae5e180263539a5395f1ed67">EM_EXCESS</a></div><div class="ttdeci">#define EM_EXCESS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00196">elf_types.hpp:196</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_ad0fe06bd63d957a8fa08a227dc0dd9e3"><div class="ttname"><a href="namespaceELFIO.xhtml#ad0fe06bd63d957a8fa08a227dc0dd9e3">ELFIO::Elf_Xword</a></div><div class="ttdeci">uint64_t Elf_Xword</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00054">elf_types.hpp:54</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_adbb5d6231187c73dbeeed0d6dbdd5d38"><div class="ttname"><a href="elf__types_8hpp.xhtml#adbb5d6231187c73dbeeed0d6dbdd5d38">EM_CE</a></div><div class="ttdeci">#define EM_CE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00204">elf_types.hpp:204</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0beebfd8ecb48e286c3865cc38e7ec1e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0beebfd8ecb48e286c3865cc38e7ec1e">DT_INIT_ARRAYSZ</a></div><div class="ttdeci">#define DT_INIT_ARRAYSZ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00524">elf_types.hpp:524</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae840e9570c7fc7b0519b6e96601443c3"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae840e9570c7fc7b0519b6e96601443c3">DT_ENCODING</a></div><div class="ttdeci">#define DT_ENCODING</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00528">elf_types.hpp:528</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aceec29f8bf25eff4c55932933a68dcae"><div class="ttname"><a href="elf__types_8hpp.xhtml#aceec29f8bf25eff4c55932933a68dcae">EM_PPC</a></div><div class="ttdeci">#define EM_PPC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00104">elf_types.hpp:104</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aeecbbe09920b92feb01f6cd1af9bd48d"><div class="ttname"><a href="elf__types_8hpp.xhtml#aeecbbe09920b92feb01f6cd1af9bd48d">EM_TINYJ</a></div><div class="ttdeci">#define EM_TINYJ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00146">elf_types.hpp:146</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad7cbdc6f9aeb70f37aec7ae6c2311edc"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad7cbdc6f9aeb70f37aec7ae6c2311edc">DT_JMPREL</a></div><div class="ttdeci">#define DT_JMPREL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00520">elf_types.hpp:520</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab328a3235e0b9bd804b4f763b2c276d9"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab328a3235e0b9bd804b4f763b2c276d9">EM_M32C</a></div><div class="ttdeci">#define EM_M32C</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00205">elf_types.hpp:205</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a404fc691f7c05409763d28df3fd8a9fe"><div class="ttname"><a href="elf__types_8hpp.xhtml#a404fc691f7c05409763d28df3fd8a9fe">EM_MAXQ30</a></div><div class="ttdeci">#define EM_MAXQ30</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00256">elf_types.hpp:256</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a09458ab9d9d55ade4f5450bc9400d1b0"><div class="ttname"><a href="elf__types_8hpp.xhtml#a09458ab9d9d55ade4f5450bc9400d1b0">EM_ECOG16</a></div><div class="ttdeci">#define EM_ECOG16</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00263">elf_types.hpp:263</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad02dac6c36de37115f7922f4aea16d04"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad02dac6c36de37115f7922f4aea16d04">EM_FX66</a></div><div class="ttdeci">#define EM_FX66</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00151">elf_types.hpp:151</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad34ab1a88a9f6a6530e764bf722a0bb2"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad34ab1a88a9f6a6530e764bf722a0bb2">EM_CR</a></div><div class="ttdeci">#define EM_CR</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00188">elf_types.hpp:188</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab83196a0d8bb8f3c2423ebb912e7e4f4"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab83196a0d8bb8f3c2423ebb912e7e4f4">EM_SVX</a></div><div class="ttdeci">#define EM_SVX</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00158">elf_types.hpp:158</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a71f56884cf3065340bf2a5c86a80361f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a71f56884cf3065340bf2a5c86a80361f">EM_NCPU</a></div><div class="ttdeci">#define EM_NCPU</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00141">elf_types.hpp:141</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a72c40de459931e6f1d041201dc7398b1"><div class="ttname"><a href="elf__types_8hpp.xhtml#a72c40de459931e6f1d041201dc7398b1">STB_LOCAL</a></div><div class="ttdeci">#define STB_LOCAL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00393">elf_types.hpp:393</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad11c10fa2f107629b7c2a307b07babb0"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad11c10fa2f107629b7c2a307b07babb0">EM_TPC</a></div><div class="ttdeci">#define EM_TPC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00183">elf_types.hpp:183</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad521e48610738512a18e9bbd5ae1f5ef"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad521e48610738512a18e9bbd5ae1f5ef">EM_res184</a></div><div class="ttdeci">#define EM_res184</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00271">elf_types.hpp:271</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aefc5ab22d90f1b6407cc6dc8b3dd7565"><div class="ttname"><a href="elf__types_8hpp.xhtml#aefc5ab22d90f1b6407cc6dc8b3dd7565">DT_FLAGS</a></div><div class="ttdeci">#define DT_FLAGS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00527">elf_types.hpp:527</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5693118a149e462dd602f7310a4430e6"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5693118a149e462dd602f7310a4430e6">DT_RELSZ</a></div><div class="ttdeci">#define DT_RELSZ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00515">elf_types.hpp:515</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_adc7eaa3939293c6e4b422f96107b4824"><div class="ttname"><a href="elf__types_8hpp.xhtml#adc7eaa3939293c6e4b422f96107b4824">SHT_GROUP</a></div><div class="ttdeci">#define SHT_GROUP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00364">elf_types.hpp:364</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a41fdb5cc6d934a934fb024e509730bbb"><div class="ttname"><a href="elf__types_8hpp.xhtml#a41fdb5cc6d934a934fb024e509730bbb">EM_ARC</a></div><div class="ttdeci">#define EM_ARC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00130">elf_types.hpp:130</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4e1bffcc65853e344018965e5087bebf"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4e1bffcc65853e344018965e5087bebf">EM_res155</a></div><div class="ttdeci">#define EM_res155</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00241">elf_types.hpp:241</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad1b4db03f276d72711279cab049bd26c"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad1b4db03f276d72711279cab049bd26c">EM_M16C</a></div><div class="ttdeci">#define EM_M16C</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00202">elf_types.hpp:202</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a236f4b895e822e5c4846a87e0366ac05"><div class="ttname"><a href="elf__types_8hpp.xhtml#a236f4b895e822e5c4846a87e0366ac05">EM_res122</a></div><div class="ttdeci">#define EM_res122</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00207">elf_types.hpp:207</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a675401c3e084a4c6a9559068987183cd"><div class="ttname"><a href="elf__types_8hpp.xhtml#a675401c3e084a4c6a9559068987183cd">EM_TSK3000</a></div><div class="ttdeci">#define EM_TSK3000</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00216">elf_types.hpp:216</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8ca359d4c544e0453d7c3eea72cffba3"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8ca359d4c544e0453d7c3eea72cffba3">EM_D30V</a></div><div class="ttdeci">#define EM_D30V</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00171">elf_types.hpp:171</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml_a0e7c9e9da5d1df20f62117fd93607ddf"><div class="ttname"><a href="classELFIO_1_1segment.xhtml#a0e7c9e9da5d1df20f62117fd93607ddf">ELFIO::segment::get_data</a></div><div class="ttdeci">virtual const char * get_data() const =0</div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab15a3357b0f0c27e508cab28504346a6"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab15a3357b0f0c27e508cab28504346a6">EM_OPENRISC</a></div><div class="ttdeci">#define EM_OPENRISC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00177">elf_types.hpp:177</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa7326ce59e1988302584ba6ac9772c32"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa7326ce59e1988302584ba6ac9772c32">SHT_PREINIT_ARRAY</a></div><div class="ttdeci">#define SHT_PREINIT_ARRAY</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00363">elf_types.hpp:363</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab3780594e35fbbc6e5028bcb921d0a76"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab3780594e35fbbc6e5028bcb921d0a76">SHF_EXECINSTR</a></div><div class="ttdeci">#define SHF_EXECINSTR</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00376">elf_types.hpp:376</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a80820e9c568ba8a469dcee1bcb4b6e04"><div class="ttname"><a href="elf__types_8hpp.xhtml#a80820e9c568ba8a469dcee1bcb4b6e04">EM_TI_C2000</a></div><div class="ttdeci">#define EM_TI_C2000</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00227">elf_types.hpp:227</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3d26bf66ca28492e1c2b50d91fe49d1b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3d26bf66ca28492e1c2b50d91fe49d1b">EM_CRX</a></div><div class="ttdeci">#define EM_CRX</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00199">elf_types.hpp:199</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a06385c3e5f0a3b62fae7f5e224e10f89"><div class="ttname"><a href="elf__types_8hpp.xhtml#a06385c3e5f0a3b62fae7f5e224e10f89">ELFDATA2MSB</a></div><div class="ttdeci">#define ELFDATA2MSB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00311">elf_types.hpp:311</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a226068afb8e10a526c7bf954284b8041"><div class="ttname"><a href="elf__types_8hpp.xhtml#a226068afb8e10a526c7bf954284b8041">EM_MCST_ELBRUS</a></div><div class="ttdeci">#define EM_MCST_ELBRUS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00262">elf_types.hpp:262</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9754ced0bafacecea425b892fb796a57"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9754ced0bafacecea425b892fb796a57">PT_TLS</a></div><div class="ttdeci">#define PT_TLS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00483">elf_types.hpp:483</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_afd3f40445fb3ece41e3e8b276c4f4073"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#afd3f40445fb3ece41e3e8b276c4f4073">ELFIO::dump::find_value_in_table</a></div><div class="ttdeci">static std::string find_value_in_table(const T &amp;table, const K &amp;key)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00875">elfio_dump.hpp:875</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a881bf9c16d928bf85dbbf05771975132"><div class="ttname"><a href="elf__types_8hpp.xhtml#a881bf9c16d928bf85dbbf05771975132">EM_COLDFIRE</a></div><div class="ttdeci">#define EM_COLDFIRE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00137">elf_types.hpp:137</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a916359aebd25a6db0b308937c227013f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a916359aebd25a6db0b308937c227013f">EM_FIREPATH</a></div><div class="ttdeci">#define EM_FIREPATH</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00163">elf_types.hpp:163</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5f01fb6ed55d0592dcef0f3d22a3ac43"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5f01fb6ed55d0592dcef0f3d22a3ac43">EM_DSP24</a></div><div class="ttdeci">#define EM_DSP24</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00222">elf_types.hpp:222</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a983395f99446fa4d398c4e902bec34c6"><div class="ttname"><a href="elf__types_8hpp.xhtml#a983395f99446fa4d398c4e902bec34c6">STT_FILE</a></div><div class="ttdeci">#define STT_FILE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00407">elf_types.hpp:407</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2b9430d26ba60f7a9d65c8d43e54f213"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2b9430d26ba60f7a9d65c8d43e54f213">ET_CORE</a></div><div class="ttdeci">#define ET_CORE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00077">elf_types.hpp:77</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a7ed22146f98776ed29a296e793c637ec"><div class="ttname"><a href="elf__types_8hpp.xhtml#a7ed22146f98776ed29a296e793c637ec">EM_res159</a></div><div class="ttdeci">#define EM_res159</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00245">elf_types.hpp:245</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1ab74ecc44225e3741a171a962d79318"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1ab74ecc44225e3741a171a962d79318">SHT_SYMTAB_SHNDX</a></div><div class="ttdeci">#define SHT_SYMTAB_SHNDX</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00365">elf_types.hpp:365</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad347d75dbb7ecff52f6970ac89478f23"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad347d75dbb7ecff52f6970ac89478f23">EM_FR20</a></div><div class="ttdeci">#define EM_FR20</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00121">elf_types.hpp:121</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a80e7667a64867c4252a1c3a6333514d9"><div class="ttname"><a href="elf__types_8hpp.xhtml#a80e7667a64867c4252a1c3a6333514d9">EM_860</a></div><div class="ttdeci">#define EM_860</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00091">elf_types.hpp:91</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af87c414df9261ef62e768be30d81d911"><div class="ttname"><a href="elf__types_8hpp.xhtml#af87c414df9261ef62e768be30d81d911">EM_ALTERA_NIOS2</a></div><div class="ttdeci">#define EM_ALTERA_NIOS2</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00198">elf_types.hpp:198</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9c442688ca4a05cac98e33f97f1dde77"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9c442688ca4a05cac98e33f97f1dde77">EM_res125</a></div><div class="ttdeci">#define EM_res125</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00210">elf_types.hpp:210</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa8f4e2f82318dc17cea7704894457eee"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa8f4e2f82318dc17cea7704894457eee">EM_ECOG2</a></div><div class="ttdeci">#define EM_ECOG2</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00219">elf_types.hpp:219</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae018a10f79ac52cbc14ee46cf841ed62"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae018a10f79ac52cbc14ee46cf841ed62">STB_MULTIDEF</a></div><div class="ttdeci">#define STB_MULTIDEF</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00398">elf_types.hpp:398</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a140ae30855f5b61fcc8146a4a8993c5b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a140ae30855f5b61fcc8146a4a8993c5b">EM_PDP11</a></div><div class="ttdeci">#define EM_PDP11</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00150">elf_types.hpp:150</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_adeef14c6d411e415343fd616c16d1568"><div class="ttname"><a href="elf__types_8hpp.xhtml#adeef14c6d411e415343fd616c16d1568">DT_NULL</a></div><div class="ttdeci">#define DT_NULL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00497">elf_types.hpp:497</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a65506a79f0e972c851851af7b1008d94"><div class="ttname"><a href="elf__types_8hpp.xhtml#a65506a79f0e972c851851af7b1008d94">SHT_NOTE</a></div><div class="ttdeci">#define SHT_NOTE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00356">elf_types.hpp:356</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae51ab135aae79c2c807763687d11fcb1"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae51ab135aae79c2c807763687d11fcb1">EM_SNP1K</a></div><div class="ttdeci">#define EM_SNP1K</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00184">elf_types.hpp:184</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a30775499c2e8a424a5dcb7254d89d47a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a30775499c2e8a424a5dcb7254d89d47a">EM_res147</a></div><div class="ttdeci">#define EM_res147</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00233">elf_types.hpp:233</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4f48322458d6741e9878dee0ef087a2a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4f48322458d6741e9878dee0ef087a2a">DT_TEXTREL</a></div><div class="ttdeci">#define DT_TEXTREL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00519">elf_types.hpp:519</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af5f689b76129273aa227cf39d462fa15"><div class="ttname"><a href="elf__types_8hpp.xhtml#af5f689b76129273aa227cf39d462fa15">EM_INTEL181</a></div><div class="ttdeci">#define EM_INTEL181</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00268">elf_types.hpp:268</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a11e50ca1a55ea4e6eb7331889681a3a9"><div class="ttname"><a href="elf__types_8hpp.xhtml#a11e50ca1a55ea4e6eb7331889681a3a9">EM_ST7</a></div><div class="ttdeci">#define EM_ST7</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00153">elf_types.hpp:153</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac6ee64a77587650e71e097422bb924a2"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac6ee64a77587650e71e097422bb924a2">EM_PRISM</a></div><div class="ttdeci">#define EM_PRISM</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00167">elf_types.hpp:167</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad25f21c9d99ad7f440811610bfc57ff6"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad25f21c9d99ad7f440811610bfc57ff6">ELFDATANONE</a></div><div class="ttdeci">#define ELFDATANONE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00309">elf_types.hpp:309</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8a4c916f39f1eac8aad45b863aa94d12"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8a4c916f39f1eac8aad45b863aa94d12">EM_PDSP</a></div><div class="ttdeci">#define EM_PDSP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00148">elf_types.hpp:148</a></div></div>
<div class="ttc" id="classELFIO_1_1section_xhtml"><div class="ttname"><a href="classELFIO_1_1section.xhtml">ELFIO::section</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__section_8hpp_source.xhtml#l00031">elfio_section.hpp:31</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af7bb2357371dcd092867d6b817aa8fbf"><div class="ttname"><a href="elf__types_8hpp.xhtml#af7bb2357371dcd092867d6b817aa8fbf">EM_res026</a></div><div class="ttdeci">#define EM_res026</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00110">elf_types.hpp:110</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2a0823ace4224d7c31755abff99e5c11"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2a0823ace4224d7c31755abff99e5c11">EM_68HC05</a></div><div class="ttdeci">#define EM_68HC05</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00157">elf_types.hpp:157</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4049b60ff89d8fc5987779a77b04aaf1"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4049b60ff89d8fc5987779a77b04aaf1">EM_CRIS</a></div><div class="ttdeci">#define EM_CRIS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00161">elf_types.hpp:161</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a38476fe4ed88ac83ba86a4e103199a86"><div class="ttname"><a href="elf__types_8hpp.xhtml#a38476fe4ed88ac83ba86a4e103199a86">SHF_ALLOC</a></div><div class="ttdeci">#define SHF_ALLOC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00375">elf_types.hpp:375</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a80e9ddcb3c37cfc4aeac19bc0382f296"><div class="ttname"><a href="elf__types_8hpp.xhtml#a80e9ddcb3c37cfc4aeac19bc0382f296">EM_H8_300</a></div><div class="ttdeci">#define EM_H8_300</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00131">elf_types.hpp:131</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a398fac494ea85278e53dfffa426dea2c"><div class="ttname"><a href="elf__types_8hpp.xhtml#a398fac494ea85278e53dfffa426dea2c">EM_res183</a></div><div class="ttdeci">#define EM_res183</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00270">elf_types.hpp:270</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa0269f148b09419d27be6289b4ce026f"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa0269f148b09419d27be6289b4ce026f">SHT_INIT_ARRAY</a></div><div class="ttdeci">#define SHT_INIT_ARRAY</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00361">elf_types.hpp:361</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad4247ded90f9371e3c4d2f7dda260c93"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad4247ded90f9371e3c4d2f7dda260c93">STB_WEAK</a></div><div class="ttdeci">#define STB_WEAK</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00395">elf_types.hpp:395</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac167366495875d0376780da2557bfe8b"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac167366495875d0376780da2557bfe8b">EM_LATTICEMICO32</a></div><div class="ttdeci">#define EM_LATTICEMICO32</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00224">elf_types.hpp:224</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae46431993c695f6b3b319a30e06170e5"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae46431993c695f6b3b319a30e06170e5">EM_FR30</a></div><div class="ttdeci">#define EM_FR30</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00169">elf_types.hpp:169</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a59aef04f5e353594a554570e49555739"><div class="ttname"><a href="elf__types_8hpp.xhtml#a59aef04f5e353594a554570e49555739">EM_OLD_ALPHA</a></div><div class="ttdeci">#define EM_OLD_ALPHA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00126">elf_types.hpp:126</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_ad1a6efd3db614d85b0c50a54451e696a"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#ad1a6efd3db614d85b0c50a54451e696a">ELFIO::dump::segment_headers</a></div><div class="ttdeci">static void segment_headers(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00520">elfio_dump.hpp:520</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2060cf45d9ee7217dc3880a78c12d316"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2060cf45d9ee7217dc3880a78c12d316">DT_PLTGOT</a></div><div class="ttdeci">#define DT_PLTGOT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00500">elf_types.hpp:500</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abd8569f12e829eeebd7d4ba6d6fb4b38"><div class="ttname"><a href="elf__types_8hpp.xhtml#abd8569f12e829eeebd7d4ba6d6fb4b38">EM_MAX</a></div><div class="ttdeci">#define EM_MAX</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00187">elf_types.hpp:187</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abbdf1297178518cdaade010c7a0dcd73"><div class="ttname"><a href="elf__types_8hpp.xhtml#abbdf1297178518cdaade010c7a0dcd73">EM_INTEL182</a></div><div class="ttdeci">#define EM_INTEL182</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00269">elf_types.hpp:269</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9ce86b76b229e96d028b67b4216e1a8c"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9ce86b76b229e96d028b67b4216e1a8c">EM_TMM_GPP</a></div><div class="ttdeci">#define EM_TMM_GPP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00181">elf_types.hpp:181</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a87300a0cb6754476456d9067b77656ba"><div class="ttname"><a href="elf__types_8hpp.xhtml#a87300a0cb6754476456d9067b77656ba">DT_PLTREL</a></div><div class="ttdeci">#define DT_PLTREL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00517">elf_types.hpp:517</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1c3b36c2bd8640546e10d37cb6214242"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1c3b36c2bd8640546e10d37cb6214242">EM_RS08</a></div><div class="ttdeci">#define EM_RS08</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00217">elf_types.hpp:217</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a62973bdd257e5f59e3219781395a7fa4"><div class="ttname"><a href="elf__types_8hpp.xhtml#a62973bdd257e5f59e3219781395a7fa4">EM_res027</a></div><div class="ttdeci">#define EM_res027</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00111">elf_types.hpp:111</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2a91046a80fd753ce3dbfb109212761d"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2a91046a80fd753ce3dbfb109212761d">ET_REL</a></div><div class="ttdeci">#define ET_REL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00074">elf_types.hpp:74</a></div></div>
<div class="ttc" id="classELFIO_1_1note__section__accessor_xhtml"><div class="ttname"><a href="classELFIO_1_1note__section__accessor.xhtml">ELFIO::note_section_accessor</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__note_8hpp_source.xhtml#l00029">elfio_note.hpp:29</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ace0ce008ff50406077a9450174fe55a5"><div class="ttname"><a href="elf__types_8hpp.xhtml#ace0ce008ff50406077a9450174fe55a5">SHT_SHLIB</a></div><div class="ttdeci">#define SHT_SHLIB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00359">elf_types.hpp:359</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3d28f19a143e83bbe49e3853cea4722f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3d28f19a143e83bbe49e3853cea4722f">DT_RPATH</a></div><div class="ttdeci">#define DT_RPATH</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00512">elf_types.hpp:512</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1789be55e29ba81041935f9b60ad2cfd"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1789be55e29ba81041935f9b60ad2cfd">EM_res031</a></div><div class="ttdeci">#define EM_res031</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00115">elf_types.hpp:115</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_ac3304298a71603a89af5676c6bbce9de"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#ac3304298a71603a89af5676c6bbce9de">ELFIO::elfio::sections</a></div><div class="ttdeci">class ELFIO::elfio::Sections sections</div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae8258f376b7b6cc61bd6d1651492bf1e"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae8258f376b7b6cc61bd6d1651492bf1e">EM_V800</a></div><div class="ttdeci">#define EM_V800</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00120">elf_types.hpp:120</a></div></div>
<div class="ttc" id="elfio__dump_8hpp_xhtml_ae71accaf0ac568c1f33fbbd059d51fbb"><div class="ttname"><a href="elfio__dump_8hpp.xhtml#ae71accaf0ac568c1f33fbbd059d51fbb">STR_FUNC_TABLE</a></div><div class="ttdeci">#define STR_FUNC_TABLE(name)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00937">elfio_dump.hpp:937</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml">ELFIO::elfio</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00070">elfio.hpp:70</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a858de0ea72e19697b3995fb6bcc11f3a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a858de0ea72e19697b3995fb6bcc11f3a">EM_SCORE</a></div><div class="ttdeci">#define EM_SCORE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00220">elf_types.hpp:220</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a24d310c737df1fc6e80f151ac53f682f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a24d310c737df1fc6e80f151ac53f682f">EM_res030</a></div><div class="ttdeci">#define EM_res030</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00114">elf_types.hpp:114</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abecf6afbdd6836bbbe6ee8ed9d4112c2"><div class="ttname"><a href="elf__types_8hpp.xhtml#abecf6afbdd6836bbbe6ee8ed9d4112c2">EM_MN10300</a></div><div class="ttdeci">#define EM_MN10300</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00174">elf_types.hpp:174</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a9f3f44fe3ed3d5d88efd6f7229baa0e0"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a9f3f44fe3ed3d5d88efd6f7229baa0e0">ELFIO::dump::notes</a></div><div class="ttdeci">static void notes(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00671">elfio_dump.hpp:671</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abb62bd7d9475132b658801450e014de9"><div class="ttname"><a href="elf__types_8hpp.xhtml#abb62bd7d9475132b658801450e014de9">EM_res145</a></div><div class="ttdeci">#define EM_res145</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00231">elf_types.hpp:231</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a9f52208b5882183d479572c55960525f"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a9f52208b5882183d479572c55960525f">ELFIO::dump::section_flags</a></div><div class="ttdeci">static std::string section_flags(Elf_Xword flags)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00919">elfio_dump.hpp:919</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Sections_xhtml_a5c66bdb3ab662752c4968d8cd1a1a490"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Sections.xhtml#a5c66bdb3ab662752c4968d8cd1a1a490">ELFIO::elfio::Sections::size</a></div><div class="ttdeci">Elf_Half size() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00711">elfio.hpp:711</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab6dbc86644e55db3c0eeef9ef43a7f70"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab6dbc86644e55db3c0eeef9ef43a7f70">EM_res121</a></div><div class="ttdeci">#define EM_res121</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00206">elf_types.hpp:206</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a59f767308b3539ba69f3731043d602a5"><div class="ttname"><a href="elf__types_8hpp.xhtml#a59f767308b3539ba69f3731043d602a5">EM_XIMO16</a></div><div class="ttdeci">#define EM_XIMO16</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00257">elf_types.hpp:257</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af4b916dc4ca5016fb5c374068002a532"><div class="ttname"><a href="elf__types_8hpp.xhtml#af4b916dc4ca5016fb5c374068002a532">SHT_STRTAB</a></div><div class="ttdeci">#define SHT_STRTAB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00352">elf_types.hpp:352</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a416acf1af7155b8a8856f87601985794"><div class="ttname"><a href="elf__types_8hpp.xhtml#a416acf1af7155b8a8856f87601985794">EM_PPC64</a></div><div class="ttdeci">#define EM_PPC64</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00105">elf_types.hpp:105</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afba78bdbf28e311e5f3e478f07905aed"><div class="ttname"><a href="elf__types_8hpp.xhtml#afba78bdbf28e311e5f3e478f07905aed">DT_STRTAB</a></div><div class="ttdeci">#define DT_STRTAB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00502">elf_types.hpp:502</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa5a0be583e90df860b81b30ac7e4af3a"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa5a0be583e90df860b81b30ac7e4af3a">EM_res016</a></div><div class="ttdeci">#define EM_res016</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00100">elf_types.hpp:100</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abf2fc2781a2869352c2ffa0555f34118"><div class="ttname"><a href="elf__types_8hpp.xhtml#abf2fc2781a2869352c2ffa0555f34118">SHT_RELA</a></div><div class="ttdeci">#define SHT_RELA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00353">elf_types.hpp:353</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a29b42f20808ccc50bf1a94283ed96e8b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a29b42f20808ccc50bf1a94283ed96e8b">EM_QDSP6</a></div><div class="ttdeci">#define EM_QDSP6</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00250">elf_types.hpp:250</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a3185bd59b2f1eadd79528beb99baa4d6"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a3185bd59b2f1eadd79528beb99baa4d6">ELFIO::dump::segment_data</a></div><div class="ttdeci">static void segment_data(std::ostream &amp;out, Elf_Half no, const segment *seg)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00823">elfio_dump.hpp:823</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a854729c1dc4623abeaeb765a1b745012"><div class="ttname"><a href="elf__types_8hpp.xhtml#a854729c1dc4623abeaeb765a1b745012">PT_NULL</a></div><div class="ttdeci">#define PT_NULL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00476">elf_types.hpp:476</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad8fac71aae0d2fbfab30f278a79c941a"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad8fac71aae0d2fbfab30f278a79c941a">EM_ARM</a></div><div class="ttdeci">#define EM_ARM</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00125">elf_types.hpp:125</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5fa61266452365ab0e2d2ad32b87043e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5fa61266452365ab0e2d2ad32b87043e">STB_HIPROC</a></div><div class="ttdeci">#define STB_HIPROC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00400">elf_types.hpp:400</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a66801fe3ae7746ab9386537d236cd4e4"><div class="ttname"><a href="elf__types_8hpp.xhtml#a66801fe3ae7746ab9386537d236cd4e4">EM_88K</a></div><div class="ttdeci">#define EM_88K</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00089">elf_types.hpp:89</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_aee9c2e17dc9c709b78401f7a38a31c8e"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#aee9c2e17dc9c709b78401f7a38a31c8e">ELFIO::dump::section_headers</a></div><div class="ttdeci">static void section_headers(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00447">elfio_dump.hpp:447</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a30d75bc66f7816194718e1711f6df9a8"><div class="ttname"><a href="elf__types_8hpp.xhtml#a30d75bc66f7816194718e1711f6df9a8">EM_486</a></div><div class="ttdeci">#define EM_486</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00090">elf_types.hpp:90</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af38c667f9a1573d87caa9348b18f3411"><div class="ttname"><a href="elf__types_8hpp.xhtml#af38c667f9a1573d87caa9348b18f3411">DT_HASH</a></div><div class="ttdeci">#define DT_HASH</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00501">elf_types.hpp:501</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a953d4b756dfd775eea37ffaf577350f8"><div class="ttname"><a href="elf__types_8hpp.xhtml#a953d4b756dfd775eea37ffaf577350f8">EM_res013</a></div><div class="ttdeci">#define EM_res013</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00097">elf_types.hpp:97</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa15a54cc9c881e4d54daedc9d984c2fc"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa15a54cc9c881e4d54daedc9d984c2fc">STT_NOTYPE</a></div><div class="ttdeci">#define STT_NOTYPE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00403">elf_types.hpp:403</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4963a97a7c325cd4ce581e4c7ff3dc69"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4963a97a7c325cd4ce581e4c7ff3dc69">EM_S390</a></div><div class="ttdeci">#define EM_S390</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00106">elf_types.hpp:106</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml"><div class="ttname"><a href="classELFIO_1_1dump.xhtml">ELFIO::dump</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00419">elfio_dump.hpp:419</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a57dff8f7eb814730c2dadcb32bd901e5"><div class="ttname"><a href="elf__types_8hpp.xhtml#a57dff8f7eb814730c2dadcb32bd901e5">EM_MMA</a></div><div class="ttdeci">#define EM_MMA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00139">elf_types.hpp:139</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a58ff00be749ca4000074f9b9066a1056"><div class="ttname"><a href="elf__types_8hpp.xhtml#a58ff00be749ca4000074f9b9066a1056">PT_PHDR</a></div><div class="ttdeci">#define PT_PHDR</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00482">elf_types.hpp:482</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a440a08a6c2d66dc4ce4e31519f7abded"><div class="ttname"><a href="elf__types_8hpp.xhtml#a440a08a6c2d66dc4ce4e31519f7abded">EM_STXP7X</a></div><div class="ttdeci">#define EM_STXP7X</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00252">elf_types.hpp:252</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa771941533b07c25189025b5a8d8131b"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa771941533b07c25189025b5a8d8131b">EM_68HC11</a></div><div class="ttdeci">#define EM_68HC11</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00155">elf_types.hpp:155</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac163a66b47e95aeebf167fe7b3a4502a"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac163a66b47e95aeebf167fe7b3a4502a">EM_M32R</a></div><div class="ttdeci">#define EM_M32R</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00173">elf_types.hpp:173</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a200cda5ea3fbbf8cdbea070888220dd4"><div class="ttname"><a href="elf__types_8hpp.xhtml#a200cda5ea3fbbf8cdbea070888220dd4">EM_DSPIC30F</a></div><div class="ttdeci">#define EM_DSPIC30F</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00203">elf_types.hpp:203</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a990781d4d4db63e414467be49fa8dc64"><div class="ttname"><a href="elf__types_8hpp.xhtml#a990781d4d4db63e414467be49fa8dc64">EM_ST9PLUS</a></div><div class="ttdeci">#define EM_ST9PLUS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00152">elf_types.hpp:152</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab1923cd7a6745120010182330cfd59c2"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab1923cd7a6745120010182330cfd59c2">EM_IP2K</a></div><div class="ttdeci">#define EM_IP2K</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00186">elf_types.hpp:186</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3a9278d12cf2c9e7eaca87688d0a6e37"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3a9278d12cf2c9e7eaca87688d0a6e37">SHT_DYNAMIC</a></div><div class="ttdeci">#define SHT_DYNAMIC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00355">elf_types.hpp:355</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a7b166d1995d574616c75296e4bbf75f0"><div class="ttname"><a href="elf__types_8hpp.xhtml#a7b166d1995d574616c75296e4bbf75f0">EM_ECOG1</a></div><div class="ttdeci">#define EM_ECOG1</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00254">elf_types.hpp:254</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae5960bd15ee686265c2e6dca4db59c51"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae5960bd15ee686265c2e6dca4db59c51">EM_res126</a></div><div class="ttdeci">#define EM_res126</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00211">elf_types.hpp:211</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a056b95608d0bf7b982c5601713e7ad52"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a056b95608d0bf7b982c5601713e7ad52">ELFIO::dump::note</a></div><div class="ttdeci">static void note(std::ostream &amp;out, int no, Elf_Word type, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00703">elfio_dump.hpp:703</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a025c79223b0fee4676337d660f76b59b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a025c79223b0fee4676337d660f76b59b">SHF_WRITE</a></div><div class="ttdeci">#define SHF_WRITE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00374">elf_types.hpp:374</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_adfa81a12735e992ed33d74373ae9ff53"><div class="ttname"><a href="elf__types_8hpp.xhtml#adfa81a12735e992ed33d74373ae9ff53">DT_RELENT</a></div><div class="ttdeci">#define DT_RELENT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00516">elf_types.hpp:516</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a851ceddbf5546d941c2fd647c2200ba5"><div class="ttname"><a href="elf__types_8hpp.xhtml#a851ceddbf5546d941c2fd647c2200ba5">EM_MIPS_RS3_LE</a></div><div class="ttdeci">#define EM_MIPS_RS3_LE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00094">elf_types.hpp:94</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aea82878407e83e89f3330c1ed2a86e15"><div class="ttname"><a href="elf__types_8hpp.xhtml#aea82878407e83e89f3330c1ed2a86e15">EM_VAX</a></div><div class="ttdeci">#define EM_VAX</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00160">elf_types.hpp:160</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a7ccfa2c5743b37663e459897701ec5d6"><div class="ttname"><a href="elf__types_8hpp.xhtml#a7ccfa2c5743b37663e459897701ec5d6">EM_ST100</a></div><div class="ttdeci">#define EM_ST100</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00145">elf_types.hpp:145</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a31fa8d3df5e328ae55a15aebf2dbd4b2"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a31fa8d3df5e328ae55a15aebf2dbd4b2">ELFIO::dump::format_assoc</a></div><div class="ttdeci">static std::string format_assoc(const T &amp;table, const K &amp;key)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00893">elfio_dump.hpp:893</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a268ce7117706283b6bf9b6a2157bb901"><div class="ttname"><a href="elf__types_8hpp.xhtml#a268ce7117706283b6bf9b6a2157bb901">EM_NS32K</a></div><div class="ttdeci">#define EM_NS32K</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00182">elf_types.hpp:182</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa5e1c59dfa7c8265d3321f997a922fd6"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa5e1c59dfa7c8265d3321f997a922fd6">EM_SH</a></div><div class="ttdeci">#define EM_SH</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00127">elf_types.hpp:127</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_acc74dd2d7cd1e872c2d2f52d64a7982a"><div class="ttname"><a href="elf__types_8hpp.xhtml#acc74dd2d7cd1e872c2d2f52d64a7982a">EM_68K</a></div><div class="ttdeci">#define EM_68K</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00088">elf_types.hpp:88</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a7174e9f611a14c0b561a5c2ca7a9d340"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a7174e9f611a14c0b561a5c2ca7a9d340">ELFIO::dump::section_datas</a></div><div class="ttdeci">static void section_datas(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00800">elfio_dump.hpp:800</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a25276c9c11f0342971738bbcf8d97d4c"><div class="ttname"><a href="elf__types_8hpp.xhtml#a25276c9c11f0342971738bbcf8d97d4c">EM_CUDA</a></div><div class="ttdeci">#define EM_CUDA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00277">elf_types.hpp:277</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac8d80ccd43333c561f4959e19f2d4516"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac8d80ccd43333c561f4959e19f2d4516">EM_68HC08</a></div><div class="ttdeci">#define EM_68HC08</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00156">elf_types.hpp:156</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afada0262827c8dc9cca53efd3394d942"><div class="ttname"><a href="elf__types_8hpp.xhtml#afada0262827c8dc9cca53efd3394d942">EM_SLE9X</a></div><div class="ttdeci">#define EM_SLE9X</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00266">elf_types.hpp:266</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a87950dfcb354dc6a671cafc6c080f3f0"><div class="ttname"><a href="elf__types_8hpp.xhtml#a87950dfcb354dc6a671cafc6c080f3f0">EM_ME16</a></div><div class="ttdeci">#define EM_ME16</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00144">elf_types.hpp:144</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a934c6e5a5405f46e343d8493a4f8f6d7"><div class="ttname"><a href="elf__types_8hpp.xhtml#a934c6e5a5405f46e343d8493a4f8f6d7">STB_HIOS</a></div><div class="ttdeci">#define STB_HIOS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00397">elf_types.hpp:397</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a577dbab317df660fb4a7f416680a250e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a577dbab317df660fb4a7f416680a250e">EM_C166</a></div><div class="ttdeci">#define EM_C166</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00201">elf_types.hpp:201</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9cd9ec2a5c2d1d93aba76e4d2701945e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9cd9ec2a5c2d1d93aba76e4d2701945e">EM_V850</a></div><div class="ttdeci">#define EM_V850</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00172">elf_types.hpp:172</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afcecfbaa24af9a32bd5378f9dabfbd38"><div class="ttname"><a href="elf__types_8hpp.xhtml#afcecfbaa24af9a32bd5378f9dabfbd38">EM_res158</a></div><div class="ttdeci">#define EM_res158</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00244">elf_types.hpp:244</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af561e146ca63f6aba12f7d6304859047"><div class="ttname"><a href="elf__types_8hpp.xhtml#af561e146ca63f6aba12f7d6304859047">DT_DEBUG</a></div><div class="ttdeci">#define DT_DEBUG</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00518">elf_types.hpp:518</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5bf951d9b37f10dfe17a1bd6b4489599"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5bf951d9b37f10dfe17a1bd6b4489599">STT_HIPROC</a></div><div class="ttdeci">#define STT_HIPROC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00413">elf_types.hpp:413</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_a7dfc604e0cf71b4a1f80a46af67d57fc"><div class="ttname"><a href="namespaceELFIO.xhtml#a7dfc604e0cf71b4a1f80a46af67d57fc">ELFIO::Elf_Word</a></div><div class="ttdeci">uint32_t Elf_Word</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00052">elf_types.hpp:52</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0dea76c46d39782e9d5d01b39249318e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0dea76c46d39782e9d5d01b39249318e">EM_res151</a></div><div class="ttdeci">#define EM_res151</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00237">elf_types.hpp:237</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aefa265beb734492f7ba2a1e48e9368dd"><div class="ttname"><a href="elf__types_8hpp.xhtml#aefa265beb734492f7ba2a1e48e9368dd">EM_960</a></div><div class="ttdeci">#define EM_960</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00103">elf_types.hpp:103</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a61849b49d63245eb406d8ee2a81da6f9"><div class="ttname"><a href="elf__types_8hpp.xhtml#a61849b49d63245eb406d8ee2a81da6f9">EM_SE_C33</a></div><div class="ttdeci">#define EM_SE_C33</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00192">elf_types.hpp:192</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac236cc313291ed38ecb346a8b4bde6b2"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac236cc313291ed38ecb346a8b4bde6b2">STT_OBJECT</a></div><div class="ttdeci">#define STT_OBJECT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00404">elf_types.hpp:404</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae8424126f5678f1819f8303090e721e1"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae8424126f5678f1819f8303090e721e1">DT_SONAME</a></div><div class="ttdeci">#define DT_SONAME</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00511">elf_types.hpp:511</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a68c1bd7a66f5455d107bc81c71185b74"><div class="ttname"><a href="elf__types_8hpp.xhtml#a68c1bd7a66f5455d107bc81c71185b74">EM_res146</a></div><div class="ttdeci">#define EM_res146</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00232">elf_types.hpp:232</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a3e837ae64e7c733dfd0d1bc004b53529"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a3e837ae64e7c733dfd0d1bc004b53529">ELFIO::dump::segment_header</a></div><div class="ttdeci">static void segment_header(std::ostream &amp;out, Elf_Half no, const segment *seg, unsigned int elf_class)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00548">elfio_dump.hpp:548</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a72baf87d62607c7fdccd3b8010d4ce30"><div class="ttname"><a href="elf__types_8hpp.xhtml#a72baf87d62607c7fdccd3b8010d4ce30">PT_NOTE</a></div><div class="ttdeci">#define PT_NOTE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00480">elf_types.hpp:480</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5f22637616c42b3841668d5083177a1a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5f22637616c42b3841668d5083177a1a">EM_68HC12</a></div><div class="ttdeci">#define EM_68HC12</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00138">elf_types.hpp:138</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a81190acbe6100558ef494d752aa42e7d"><div class="ttname"><a href="elf__types_8hpp.xhtml#a81190acbe6100558ef494d752aa42e7d">EM_PARISC</a></div><div class="ttdeci">#define EM_PARISC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00099">elf_types.hpp:99</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a057132b6114ffffe9cf5266307727af1"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a057132b6114ffffe9cf5266307727af1">ELFIO::dump::segment_datas</a></div><div class="ttdeci">static void segment_datas(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00852">elfio_dump.hpp:852</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a550bf66673973381072c9b6b1c36fafa"><div class="ttname"><a href="elf__types_8hpp.xhtml#a550bf66673973381072c9b6b1c36fafa">EM_JAVELIN</a></div><div class="ttdeci">#define EM_JAVELIN</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00162">elf_types.hpp:162</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad051e74d8ff2599a7167ad6e011d2229"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad051e74d8ff2599a7167ad6e011d2229">EM_CRAYNV2</a></div><div class="ttdeci">#define EM_CRAYNV2</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00259">elf_types.hpp:259</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5e748178a957d2aa6b758042011c3c92"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5e748178a957d2aa6b758042011c3c92">EM_res148</a></div><div class="ttdeci">#define EM_res148</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00234">elf_types.hpp:234</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9e5d691d362627655a9bbfb9ded5e7ed"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9e5d691d362627655a9bbfb9ded5e7ed">DT_PLTRELSZ</a></div><div class="ttdeci">#define DT_PLTRELSZ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00499">elf_types.hpp:499</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a7df5eeaf8383b8c32996cc7ac1b3bc6a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a7df5eeaf8383b8c32996cc7ac1b3bc6a">EM_res123</a></div><div class="ttdeci">#define EM_res123</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00208">elf_types.hpp:208</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2382e39f1f2e827ba3761a2dfbbb1105"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2382e39f1f2e827ba3761a2dfbbb1105">EM_SE_C17</a></div><div class="ttdeci">#define EM_SE_C17</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00225">elf_types.hpp:225</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae375e48d17369115776615b400061b85"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae375e48d17369115776615b400061b85">EM_8051</a></div><div class="ttdeci">#define EM_8051</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00251">elf_types.hpp:251</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2121a2f01c51e8462bfd4d47725649d8"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2121a2f01c51e8462bfd4d47725649d8">PT_DYNAMIC</a></div><div class="ttdeci">#define PT_DYNAMIC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00478">elf_types.hpp:478</a></div></div>
<div class="ttc" id="classELFIO_1_1dynamic__section__accessor_xhtml"><div class="ttname"><a href="classELFIO_1_1dynamic__section__accessor.xhtml">ELFIO::dynamic_section_accessor</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__dynamic_8hpp_source.xhtml#l00029">elfio_dynamic.hpp:29</a></div></div>
<div class="ttc" id="classELFIO_1_1segment_xhtml"><div class="ttname"><a href="classELFIO_1_1segment.xhtml">ELFIO::segment</a></div><div class="ttdef"><b>Definition:</b> <a href="elfio__segment_8hpp_source.xhtml#l00031">elfio_segment.hpp:31</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a16ee3f884fdff1bfd87d2513543b4d39"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a16ee3f884fdff1bfd87d2513543b4d39">ELFIO::dump::header</a></div><div class="ttdeci">static void header(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00431">elfio_dump.hpp:431</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_acc9b8e7e11e21f904e75ff4d4bab3cc0"><div class="ttname"><a href="elf__types_8hpp.xhtml#acc9b8e7e11e21f904e75ff4d4bab3cc0">EM_H8_300H</a></div><div class="ttdeci">#define EM_H8_300H</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00132">elf_types.hpp:132</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abcd3aa15bc567949c1ab6b1abc137710"><div class="ttname"><a href="elf__types_8hpp.xhtml#abcd3aa15bc567949c1ab6b1abc137710">PT_INTERP</a></div><div class="ttdeci">#define PT_INTERP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00479">elf_types.hpp:479</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac3c53bd156dda03e79d587a324277eba"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac3c53bd156dda03e79d587a324277eba">EM_L1OM</a></div><div class="ttdeci">#define EM_L1OM</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00267">elf_types.hpp:267</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a82bbad27c02b15a59f0f8424128e772d"><div class="ttname"><a href="elf__types_8hpp.xhtml#a82bbad27c02b15a59f0f8424128e772d">EM_res144</a></div><div class="ttdeci">#define EM_res144</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00230">elf_types.hpp:230</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_ac2fee2fccc29233d6839b39a84805637"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#ac2fee2fccc29233d6839b39a84805637">ELFIO::dump::symbol_tables</a></div><div class="ttdeci">static void symbol_tables(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00587">elfio_dump.hpp:587</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac5f0c17648c8e19cff04e0071087135a"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac5f0c17648c8e19cff04e0071087135a">EM_AVR32</a></div><div class="ttdeci">#define EM_AVR32</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00272">elf_types.hpp:272</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a97ec93ebe8146ff64ddcbf8aea225e95"><div class="ttname"><a href="elf__types_8hpp.xhtml#a97ec93ebe8146ff64ddcbf8aea225e95">EM_res153</a></div><div class="ttdeci">#define EM_res153</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00239">elf_types.hpp:239</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1566f4c14cff9f4b539b00af54d62dbb"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1566f4c14cff9f4b539b00af54d62dbb">SHT_NULL</a></div><div class="ttdeci">#define SHT_NULL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00349">elf_types.hpp:349</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a6833e2faf117338d34ba80f30d981370"><div class="ttname"><a href="elf__types_8hpp.xhtml#a6833e2faf117338d34ba80f30d981370">DT_RELASZ</a></div><div class="ttdeci">#define DT_RELASZ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00505">elf_types.hpp:505</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad6d687d90ceed6953a098950a7f0ccb6"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad6d687d90ceed6953a098950a7f0ccb6">EM_MN10200</a></div><div class="ttdeci">#define EM_MN10200</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00175">elf_types.hpp:175</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad1a532fc3e603f7e8d47a8b3ab3a0ff1"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad1a532fc3e603f7e8d47a8b3ab3a0ff1">EM_CR16</a></div><div class="ttdeci">#define EM_CR16</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00264">elf_types.hpp:264</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a31f55fa5be0ca6b100d9fe999ba4f45d"><div class="ttname"><a href="elf__types_8hpp.xhtml#a31f55fa5be0ca6b100d9fe999ba4f45d">EM_H8_500</a></div><div class="ttdeci">#define EM_H8_500</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00134">elf_types.hpp:134</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a421cf1f02e413be5ee4779c7ce809275"><div class="ttname"><a href="elf__types_8hpp.xhtml#a421cf1f02e413be5ee4779c7ce809275">EM_PCP</a></div><div class="ttdeci">#define EM_PCP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00140">elf_types.hpp:140</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9946f05d0ff6fa8ca96c5c6ec10b25b0"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9946f05d0ff6fa8ca96c5c6ec10b25b0">EM_BLACKFIN</a></div><div class="ttdeci">#define EM_BLACKFIN</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00191">elf_types.hpp:191</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac54ac9d514ac475109e978a43c43f5c3"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac54ac9d514ac475109e978a43c43f5c3">DT_SYMENT</a></div><div class="ttdeci">#define DT_SYMENT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00508">elf_types.hpp:508</a></div></div>
<div class="ttc" id="classELFIO_1_1dynamic__section__accessor_xhtml_a4a1f80115e8385d2ebfe0820c4862bd0"><div class="ttname"><a href="classELFIO_1_1dynamic__section__accessor.xhtml#a4a1f80115e8385d2ebfe0820c4862bd0">ELFIO::dynamic_section_accessor::get_entries_num</a></div><div class="ttdeci">Elf_Xword get_entries_num() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__dynamic_8hpp_source.xhtml#l00041">elfio_dynamic.hpp:41</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aeb49b6a738078d32e5979885e26c4ddf"><div class="ttname"><a href="elf__types_8hpp.xhtml#aeb49b6a738078d32e5979885e26c4ddf">STT_LOPROC</a></div><div class="ttdeci">#define STT_LOPROC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00412">elf_types.hpp:412</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4451778c7253623b413bb160d47ee1e6"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4451778c7253623b413bb160d47ee1e6">DT_NEEDED</a></div><div class="ttdeci">#define DT_NEEDED</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00498">elf_types.hpp:498</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aebb605da5285a99f7475cb17214955a2"><div class="ttname"><a href="elf__types_8hpp.xhtml#aebb605da5285a99f7475cb17214955a2">STT_LOOS</a></div><div class="ttdeci">#define STT_LOOS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00410">elf_types.hpp:410</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a81f818fb4fe5892a2c9082ca6f0c8026"><div class="ttname"><a href="elf__types_8hpp.xhtml#a81f818fb4fe5892a2c9082ca6f0c8026">EM_HUANY</a></div><div class="ttdeci">#define EM_HUANY</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00166">elf_types.hpp:166</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa3be0686b6baf6a4a2e3fce78b4d2e3c"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa3be0686b6baf6a4a2e3fce78b4d2e3c">EM_res124</a></div><div class="ttdeci">#define EM_res124</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00209">elf_types.hpp:209</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a8bc5912b0f4138ccf89b0e46ce8781e8"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a8bc5912b0f4138ccf89b0e46ce8781e8">ELFIO::dump::symbol_table</a></div><div class="ttdeci">static void symbol_table(std::ostream &amp;out, Elf_Half no, std::string &amp;name, Elf64_Addr value, Elf_Xword size, unsigned char bind, unsigned char type, Elf_Half section, unsigned int elf_class)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00627">elfio_dump.hpp:627</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac0667a92568e103c2e2047b5735d7fff"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac0667a92568e103c2e2047b5735d7fff">EM_res014</a></div><div class="ttdeci">#define EM_res014</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00098">elf_types.hpp:98</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a835121fb9bd3f27ecf69c5c63f23ede8"><div class="ttname"><a href="elf__types_8hpp.xhtml#a835121fb9bd3f27ecf69c5c63f23ede8">EM_res128</a></div><div class="ttdeci">#define EM_res128</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00213">elf_types.hpp:213</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad14c70c3163ed38707e2b32db3de67aa"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad14c70c3163ed38707e2b32db3de67aa">EM_res149</a></div><div class="ttdeci">#define EM_res149</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00235">elf_types.hpp:235</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2b07eefc8800d75434a3b165d392c14d"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2b07eefc8800d75434a3b165d392c14d">EM_NDR1</a></div><div class="ttdeci">#define EM_NDR1</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00142">elf_types.hpp:142</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af8f9dd71fa71d8928818413e0d8f15c0"><div class="ttname"><a href="elf__types_8hpp.xhtml#af8f9dd71fa71d8928818413e0d8f15c0">EM_res029</a></div><div class="ttdeci">#define EM_res029</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00113">elf_types.hpp:113</a></div></div>
<div class="ttc" id="classELFIO_1_1symbol__section__accessor_xhtml_aea9697f3f01b0406a7832f99c31ce8b3"><div class="ttname"><a href="classELFIO_1_1symbol__section__accessor.xhtml#aea9697f3f01b0406a7832f99c31ce8b3">ELFIO::symbol_section_accessor::get_symbols_num</a></div><div class="ttdeci">Elf_Xword get_symbols_num() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__symbols_8hpp_source.xhtml#l00042">elfio_symbols.hpp:42</a></div></div>
<div class="ttc" id="elfio_8hpp_xhtml"><div class="ttname"><a href="elfio_8hpp.xhtml">elfio.hpp</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a84d7768fd6c6ece599d297090900cf92"><div class="ttname"><a href="elf__types_8hpp.xhtml#a84d7768fd6c6ece599d297090900cf92">PT_LOAD</a></div><div class="ttdeci">#define PT_LOAD</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00477">elf_types.hpp:477</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5f84b1bf6e07374d6289eab3d8c57f1c"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5f84b1bf6e07374d6289eab3d8c57f1c">ELFCLASS32</a></div><div class="ttdeci">#define ELFCLASS32</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00305">elf_types.hpp:305</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4fa692a7df628fcc38639a78b1ec1c1f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4fa692a7df628fcc38639a78b1ec1c1f">DT_BIND_NOW</a></div><div class="ttdeci">#define DT_BIND_NOW</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00521">elf_types.hpp:521</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8cb993f89091902b3ed36719d815eb42"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8cb993f89091902b3ed36719d815eb42">EM_res011</a></div><div class="ttdeci">#define EM_res011</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00095">elf_types.hpp:95</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a44b6059deb2b3e5858e058a466149d96"><div class="ttname"><a href="elf__types_8hpp.xhtml#a44b6059deb2b3e5858e058a466149d96">EM_MSP430</a></div><div class="ttdeci">#define EM_MSP430</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00190">elf_types.hpp:190</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af66303c799da18c8aec282ea8592e7e7"><div class="ttname"><a href="elf__types_8hpp.xhtml#af66303c799da18c8aec282ea8592e7e7">ELFDATA2LSB</a></div><div class="ttdeci">#define ELFDATA2LSB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00310">elf_types.hpp:310</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a820ff00317949be2ea1fd634a17dc13e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a820ff00317949be2ea1fd634a17dc13e">SHT_NOBITS</a></div><div class="ttdeci">#define SHT_NOBITS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00357">elf_types.hpp:357</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9e9a3c0fa59c3fc896f8e4c1872c6af1"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9e9a3c0fa59c3fc896f8e4c1872c6af1">STT_SECTION</a></div><div class="ttdeci">#define STT_SECTION</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00406">elf_types.hpp:406</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a3950958d72a3b5249d8a176e90fbfd10"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a3950958d72a3b5249d8a176e90fbfd10">ELFIO::dump::dynamic_tag</a></div><div class="ttdeci">static void dynamic_tag(std::ostream &amp;out, int no, Elf_Xword tag, Elf_Xword value, std::string str, unsigned int)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00749">elfio_dump.hpp:749</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a32cd23a67f8dea9094f40628356b7b78"><div class="ttname"><a href="elf__types_8hpp.xhtml#a32cd23a67f8dea9094f40628356b7b78">EM_MANIK</a></div><div class="ttdeci">#define EM_MANIK</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00258">elf_types.hpp:258</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4373ea3b3d512434ebe2213829b6751b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4373ea3b3d512434ebe2213829b6751b">ET_DYN</a></div><div class="ttdeci">#define ET_DYN</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00076">elf_types.hpp:76</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2eb80074aabd6bc7962267d093faad42"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2eb80074aabd6bc7962267d093faad42">EM_res025</a></div><div class="ttdeci">#define EM_res025</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00109">elf_types.hpp:109</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1e9f9d7662daae640a617097ad51710e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1e9f9d7662daae640a617097ad51710e">EM_RCE</a></div><div class="ttdeci">#define EM_RCE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00124">elf_types.hpp:124</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aff62591952dbf2d52509786042b932c9"><div class="ttname"><a href="elf__types_8hpp.xhtml#aff62591952dbf2d52509786042b932c9">EM_METAG</a></div><div class="ttdeci">#define EM_METAG</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00261">elf_types.hpp:261</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad3be48b70ed10f4f1a70e1fca938d970"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad3be48b70ed10f4f1a70e1fca938d970">EM_SPARCV9</a></div><div class="ttdeci">#define EM_SPARCV9</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00128">elf_types.hpp:128</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab28842a49aef0cf22fa7e335d5427713"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab28842a49aef0cf22fa7e335d5427713">EM_H8S</a></div><div class="ttdeci">#define EM_H8S</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00133">elf_types.hpp:133</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_adedce18a93b7b7b8d34073eb76981327"><div class="ttname"><a href="elf__types_8hpp.xhtml#adedce18a93b7b7b8d34073eb76981327">EM_res033</a></div><div class="ttdeci">#define EM_res033</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00117">elf_types.hpp:117</a></div></div>
<div class="ttc" id="classELFIO_1_1dynamic__section__accessor_xhtml_a96572acd12da838914034ab7c6993d65"><div class="ttname"><a href="classELFIO_1_1dynamic__section__accessor.xhtml#a96572acd12da838914034ab7c6993d65">ELFIO::dynamic_section_accessor::get_entry</a></div><div class="ttdeci">bool get_entry(Elf_Xword index, Elf_Xword &amp;tag, Elf_Xword &amp;value, std::string &amp;str) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__dynamic_8hpp_source.xhtml#l00054">elfio_dynamic.hpp:54</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae631a12d4da4a4061878bcaac4a3252d"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae631a12d4da4a4061878bcaac4a3252d">DT_FINI_ARRAYSZ</a></div><div class="ttdeci">#define DT_FINI_ARRAYSZ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00525">elf_types.hpp:525</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_abff9f38fd394e09e60f5640550a23e46"><div class="ttname"><a href="elf__types_8hpp.xhtml#abff9f38fd394e09e60f5640550a23e46">PT_SHLIB</a></div><div class="ttdeci">#define PT_SHLIB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00481">elf_types.hpp:481</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa987c856d5cea48b7593cd6f1f4c5fa6"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa987c856d5cea48b7593cd6f1f4c5fa6">EM_SEP</a></div><div class="ttdeci">#define EM_SEP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00193">elf_types.hpp:193</a></div></div>
<div class="ttc" id="classELFIO_1_1note__section__accessor_xhtml_afd087fe8678e7b7f05bcc69be2ed88f0"><div class="ttname"><a href="classELFIO_1_1note__section__accessor.xhtml#afd087fe8678e7b7f05bcc69be2ed88f0">ELFIO::note_section_accessor::get_note</a></div><div class="ttdeci">bool get_note(Elf_Word index, Elf_Word &amp;type, std::string &amp;name, void *&amp;desc, Elf_Word &amp;descSize) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__note_8hpp_source.xhtml#l00048">elfio_note.hpp:48</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a23fd3947ed1cfe58469b045efb4bb418"><div class="ttname"><a href="elf__types_8hpp.xhtml#a23fd3947ed1cfe58469b045efb4bb418">EM_X86_64</a></div><div class="ttdeci">#define EM_X86_64</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00147">elf_types.hpp:147</a></div></div>
<div class="ttc" id="classELFIO_1_1section_xhtml_accfaef20485ee803990b260130022bd2"><div class="ttname"><a href="classELFIO_1_1section.xhtml#accfaef20485ee803990b260130022bd2">ELFIO::section::get_data</a></div><div class="ttdeci">virtual const char * get_data() const =0</div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_add16337d49ed449da71d3811f3ec1fb7"><div class="ttname"><a href="elf__types_8hpp.xhtml#add16337d49ed449da71d3811f3ec1fb7">EM_res028</a></div><div class="ttdeci">#define EM_res028</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00112">elf_types.hpp:112</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4f9866770e1922ff0fd217efba129165"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4f9866770e1922ff0fd217efba129165">EM_XGATE</a></div><div class="ttdeci">#define EM_XGATE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00200">elf_types.hpp:200</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0cb6243cdc86f72e4654c6fb8e9a2dd5"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0cb6243cdc86f72e4654c6fb8e9a2dd5">EM_TI_C6000</a></div><div class="ttdeci">#define EM_TI_C6000</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00226">elf_types.hpp:226</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0129045e44f674a632feb79c4c24d44d"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0129045e44f674a632feb79c4c24d44d">Elf64_Half</a></div><div class="ttdeci">#define Elf64_Half</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00063">elf_types.hpp:63</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af822a626a54b78a40327c38a0524853f"><div class="ttname"><a href="elf__types_8hpp.xhtml#af822a626a54b78a40327c38a0524853f">EM_TRIMEDIA</a></div><div class="ttdeci">#define EM_TRIMEDIA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00249">elf_types.hpp:249</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a19b0cea9b063bb97e84b0931ebc7d699"><div class="ttname"><a href="elf__types_8hpp.xhtml#a19b0cea9b063bb97e84b0931ebc7d699">EM_M32</a></div><div class="ttdeci">#define EM_M32</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00085">elf_types.hpp:85</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa9949aedf49107f6a07e618d5d791d40"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa9949aedf49107f6a07e618d5d791d40">SHT_DYNSYM</a></div><div class="ttdeci">#define SHT_DYNSYM</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00360">elf_types.hpp:360</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad57b0251167dc8a0bf88cf1427a443cc"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad57b0251167dc8a0bf88cf1427a443cc">DT_RUNPATH</a></div><div class="ttdeci">#define DT_RUNPATH</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00526">elf_types.hpp:526</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aa329bee12b7c6b47998b65457914100b"><div class="ttname"><a href="elf__types_8hpp.xhtml#aa329bee12b7c6b47998b65457914100b">EM_STARCORE</a></div><div class="ttdeci">#define EM_STARCORE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00143">elf_types.hpp:143</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a6bdc76418eb6f337fd24a3fdd7318bb2"><div class="ttname"><a href="elf__types_8hpp.xhtml#a6bdc76418eb6f337fd24a3fdd7318bb2">EM_res156</a></div><div class="ttdeci">#define EM_res156</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00242">elf_types.hpp:242</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afece3cfa0ef413b01766125cf7a308e8"><div class="ttname"><a href="elf__types_8hpp.xhtml#afece3cfa0ef413b01766125cf7a308e8">EM_res032</a></div><div class="ttdeci">#define EM_res032</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00116">elf_types.hpp:116</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a6ca204ae2d5c6ff607c5cc5d420b4d07"><div class="ttname"><a href="elf__types_8hpp.xhtml#a6ca204ae2d5c6ff607c5cc5d420b4d07">EM_RH32</a></div><div class="ttdeci">#define EM_RH32</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00122">elf_types.hpp:122</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afebfe5fc7b7b2c8a4c45c7797688677e"><div class="ttname"><a href="elf__types_8hpp.xhtml#afebfe5fc7b7b2c8a4c45c7797688677e">EM_ST200</a></div><div class="ttdeci">#define EM_ST200</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00185">elf_types.hpp:185</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a683d362ee631bbea664f0a1b03d1c41f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a683d362ee631bbea664f0a1b03d1c41f">EM_res154</a></div><div class="ttdeci">#define EM_res154</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00240">elf_types.hpp:240</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8085a255e82173046afefd2a1c6de930"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8085a255e82173046afefd2a1c6de930">EV_CURRENT</a></div><div class="ttdeci">#define EV_CURRENT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00282">elf_types.hpp:282</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a0e910cd10d2d9418e7bc963d3096b4a1"><div class="ttname"><a href="elf__types_8hpp.xhtml#a0e910cd10d2d9418e7bc963d3096b4a1">EM_PDP10</a></div><div class="ttdeci">#define EM_PDP10</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00149">elf_types.hpp:149</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a08af3f04e4a09ff9121ad983fb019531"><div class="ttname"><a href="elf__types_8hpp.xhtml#a08af3f04e4a09ff9121ad983fb019531">EM_res129</a></div><div class="ttdeci">#define EM_res129</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00214">elf_types.hpp:214</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a86b6fd3d926ec4ffd27e266836adf600"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a86b6fd3d926ec4ffd27e266836adf600">ELFIO::dump::dynamic_tags</a></div><div class="ttdeci">static void dynamic_tags(std::ostream &amp;out, const elfio &amp;reader)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00718">elfio_dump.hpp:718</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3168ea327621f9848abb996540342fb6"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3168ea327621f9848abb996540342fb6">EM_MIPS</a></div><div class="ttdeci">#define EM_MIPS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00092">elf_types.hpp:92</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a27ae160258d9b3c35b16b940c4317f08"><div class="ttname"><a href="elf__types_8hpp.xhtml#a27ae160258d9b3c35b16b940c4317f08">EM_XTENSA</a></div><div class="ttdeci">#define EM_XTENSA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00179">elf_types.hpp:179</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aca06f67850449fa24ddca95a6dcd2754"><div class="ttname"><a href="elf__types_8hpp.xhtml#aca06f67850449fa24ddca95a6dcd2754">EM_ST19</a></div><div class="ttdeci">#define EM_ST19</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00159">elf_types.hpp:159</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_1_1Segments_xhtml_a18257fed02ff029ccca28e70b7eabfa6"><div class="ttname"><a href="classELFIO_1_1elfio_1_1Segments.xhtml#a18257fed02ff029ccca28e70b7eabfa6">ELFIO::elfio::Segments::size</a></div><div class="ttdeci">Elf_Half size() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio_8hpp_source.xhtml#l00788">elfio.hpp:788</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9c25828b68b184aecc0bde2a1f6850e1"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9c25828b68b184aecc0bde2a1f6850e1">EM_res127</a></div><div class="ttdeci">#define EM_res127</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00212">elf_types.hpp:212</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a09b4d64e68fc2a9ac211589c377ed76a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a09b4d64e68fc2a9ac211589c377ed76a">SHT_FINI_ARRAY</a></div><div class="ttdeci">#define SHT_FINI_ARRAY</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00362">elf_types.hpp:362</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2c316800fdd2ad211b26737fa44da6dd"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2c316800fdd2ad211b26737fa44da6dd">DT_INIT</a></div><div class="ttdeci">#define DT_INIT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00509">elf_types.hpp:509</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a7c79de38f686a60e80abf52a7771b429"><div class="ttname"><a href="elf__types_8hpp.xhtml#a7c79de38f686a60e80abf52a7771b429">EM_CYPRESS_M8C</a></div><div class="ttdeci">#define EM_CYPRESS_M8C</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00247">elf_types.hpp:247</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ade3c7c7e0d7d96b0afe95dfd0f39e952"><div class="ttname"><a href="elf__types_8hpp.xhtml#ade3c7c7e0d7d96b0afe95dfd0f39e952">EM_VPP550</a></div><div class="ttdeci">#define EM_VPP550</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00101">elf_types.hpp:101</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a79659e05ba1972537a902715cc596073"><div class="ttname"><a href="elf__types_8hpp.xhtml#a79659e05ba1972537a902715cc596073">EM_STM8</a></div><div class="ttdeci">#define EM_STM8</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00273">elf_types.hpp:273</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a202479e018db0a8af3041cea479e4608"><div class="ttname"><a href="elf__types_8hpp.xhtml#a202479e018db0a8af3041cea479e4608">EM_TI_C5500</a></div><div class="ttdeci">#define EM_TI_C5500</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00228">elf_types.hpp:228</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_a1cbef4f0d8fabbb57ce3507f3ee06e1a"><div class="ttname"><a href="namespaceELFIO.xhtml#a1cbef4f0d8fabbb57ce3507f3ee06e1a">ELFIO::Elf_Half</a></div><div class="ttdeci">uint16_t Elf_Half</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00051">elf_types.hpp:51</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a9ee66b59be5c78ea1f1eea8a36f2c291"><div class="ttname"><a href="elf__types_8hpp.xhtml#a9ee66b59be5c78ea1f1eea8a36f2c291">ELFCLASS64</a></div><div class="ttdeci">#define ELFCLASS64</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00306">elf_types.hpp:306</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab1a78bf3f567d937488fa72d693174f7"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab1a78bf3f567d937488fa72d693174f7">EM_ECOG1X</a></div><div class="ttdeci">#define EM_ECOG1X</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00255">elf_types.hpp:255</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a214273fb98cb28c776d2146c9ad6acda"><div class="ttname"><a href="elf__types_8hpp.xhtml#a214273fb98cb28c776d2146c9ad6acda">EM_DXP</a></div><div class="ttdeci">#define EM_DXP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00197">elf_types.hpp:197</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a1388702a5d037cfb95f85952b8a85182"><div class="ttname"><a href="elf__types_8hpp.xhtml#a1388702a5d037cfb95f85952b8a85182">EM_MICROBLAZE</a></div><div class="ttdeci">#define EM_MICROBLAZE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00276">elf_types.hpp:276</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ad64bfea4eea6f9f832d4ade8efa73a67"><div class="ttname"><a href="elf__types_8hpp.xhtml#ad64bfea4eea6f9f832d4ade8efa73a67">EM_IA_64</a></div><div class="ttdeci">#define EM_IA_64</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00135">elf_types.hpp:135</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a5a8ef9b856de2e1b0447ee6a74fd98d9"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a5a8ef9b856de2e1b0447ee6a74fd98d9">ELFIO::dump::section_header</a></div><div class="ttdeci">static void section_header(std::ostream &amp;out, Elf_Half no, const section *sec, unsigned char elf_class)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00475">elfio_dump.hpp:475</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_afda9d09520f37b6962562b15e9983585"><div class="ttname"><a href="elf__types_8hpp.xhtml#afda9d09520f37b6962562b15e9983585">EM_res150</a></div><div class="ttdeci">#define EM_res150</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00236">elf_types.hpp:236</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a28502b14e09090636df11ba31001e143"><div class="ttname"><a href="elf__types_8hpp.xhtml#a28502b14e09090636df11ba31001e143">EM_D10V</a></div><div class="ttdeci">#define EM_D10V</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00170">elf_types.hpp:170</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_af88922163c3eef6634243299aba4b82d"><div class="ttname"><a href="elf__types_8hpp.xhtml#af88922163c3eef6634243299aba4b82d">EM_ZSP</a></div><div class="ttdeci">#define EM_ZSP</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00164">elf_types.hpp:164</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a6477a386238f6a3e37e611505ae634cb"><div class="ttname"><a href="elf__types_8hpp.xhtml#a6477a386238f6a3e37e611505ae634cb">EM_RX</a></div><div class="ttdeci">#define EM_RX</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00260">elf_types.hpp:260</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8028213ea49da91a81f9f1e893ea56b7"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8028213ea49da91a81f9f1e893ea56b7">DT_RELAENT</a></div><div class="ttdeci">#define DT_RELAENT</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00506">elf_types.hpp:506</a></div></div>
<div class="ttc" id="namespaceELFIO_xhtml_a10b98acc49bab16ded42171fb3431f83"><div class="ttname"><a href="namespaceELFIO.xhtml#a10b98acc49bab16ded42171fb3431f83">ELFIO::Elf64_Addr</a></div><div class="ttdeci">uint64_t Elf64_Addr</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00059">elf_types.hpp:59</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2c4d9a8b639b8162af79933049fbfbaa"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2c4d9a8b639b8162af79933049fbfbaa">EM_ARCA</a></div><div class="ttdeci">#define EM_ARCA</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00194">elf_types.hpp:194</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a446fd322326bea21373453c80c3f7925"><div class="ttname"><a href="elf__types_8hpp.xhtml#a446fd322326bea21373453c80c3f7925">SHT_HASH</a></div><div class="ttdeci">#define SHT_HASH</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00354">elf_types.hpp:354</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a91eac2138273488244f4865cd05fd12e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a91eac2138273488244f4865cd05fd12e">DT_REL</a></div><div class="ttdeci">#define DT_REL</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00514">elf_types.hpp:514</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aee8507d9ba53457bd41b0cad982f65e4"><div class="ttname"><a href="elf__types_8hpp.xhtml#aee8507d9ba53457bd41b0cad982f65e4">EM_PJ</a></div><div class="ttdeci">#define EM_PJ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00176">elf_types.hpp:176</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5aedf14e65166445b25e845978d0e16f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5aedf14e65166445b25e845978d0e16f">EM_res012</a></div><div class="ttdeci">#define EM_res012</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00096">elf_types.hpp:96</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab7a3c693de1d7231d092733cb540a26e"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab7a3c693de1d7231d092733cb540a26e">EM_ARC_A5</a></div><div class="ttdeci">#define EM_ARC_A5</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00178">elf_types.hpp:178</a></div></div>
<div class="ttc" id="classELFIO_1_1elfio_xhtml_acf8b907708e708153b95008eaa89c7be"><div class="ttname"><a href="classELFIO_1_1elfio.xhtml#acf8b907708e708153b95008eaa89c7be">ELFIO::elfio::segments</a></div><div class="ttdeci">class ELFIO::elfio::Segments segments</div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3f94292d8efea5dc4be7b38a501506a9"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3f94292d8efea5dc4be7b38a501506a9">EM_ETPU</a></div><div class="ttdeci">#define EM_ETPU</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00265">elf_types.hpp:265</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_acb4e795071e36755d6e84361bc83f94d"><div class="ttname"><a href="elf__types_8hpp.xhtml#acb4e795071e36755d6e84361bc83f94d">EM_SPARC32PLUS</a></div><div class="ttdeci">#define EM_SPARC32PLUS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00102">elf_types.hpp:102</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a6b69970e935517b39cabd47567647e50"><div class="ttname"><a href="elf__types_8hpp.xhtml#a6b69970e935517b39cabd47567647e50">EM_res034</a></div><div class="ttdeci">#define EM_res034</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00118">elf_types.hpp:118</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8a3212e11b53da14ac6538e3b8d85848"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8a3212e11b53da14ac6538e3b8d85848">EM_res157</a></div><div class="ttdeci">#define EM_res157</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00243">elf_types.hpp:243</a></div></div>
<div class="ttc" id="classELFIO_1_1note__section__accessor_xhtml_ac96de265ea12f801797638f17092db76"><div class="ttname"><a href="classELFIO_1_1note__section__accessor.xhtml#ac96de265ea12f801797638f17092db76">ELFIO::note_section_accessor::get_notes_num</a></div><div class="ttdeci">Elf_Word get_notes_num() const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__note_8hpp_source.xhtml#l00041">elfio_note.hpp:41</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a8e89591c0e7cea25d155b826605823c2"><div class="ttname"><a href="elf__types_8hpp.xhtml#a8e89591c0e7cea25d155b826605823c2">EM_SPU</a></div><div class="ttdeci">#define EM_SPU</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00107">elf_types.hpp:107</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a5a14b1234094272355977c59e351a14f"><div class="ttname"><a href="elf__types_8hpp.xhtml#a5a14b1234094272355977c59e351a14f">EM_NONE</a></div><div class="ttdeci">#define EM_NONE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00084">elf_types.hpp:84</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ae2d45eab9a7d620e24df1b6c9fd43d55"><div class="ttname"><a href="elf__types_8hpp.xhtml#ae2d45eab9a7d620e24df1b6c9fd43d55">STT_TLS</a></div><div class="ttdeci">#define STT_TLS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00409">elf_types.hpp:409</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab86c8c85735ba7bdd95962cc6691c348"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab86c8c85735ba7bdd95962cc6691c348">Elf64_Word</a></div><div class="ttdeci">#define Elf64_Word</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00065">elf_types.hpp:65</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4bff22edbae51353ba9b3572d424b91a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4bff22edbae51353ba9b3572d424b91a">SHT_PROGBITS</a></div><div class="ttdeci">#define SHT_PROGBITS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00350">elf_types.hpp:350</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a2b414165e01cac552d9b3e010cec770a"><div class="ttname"><a href="elf__types_8hpp.xhtml#a2b414165e01cac552d9b3e010cec770a">EM_res152</a></div><div class="ttdeci">#define EM_res152</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00238">elf_types.hpp:238</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a813d71f2e87f1c5cf856b510bb8e62ff"><div class="ttname"><a href="elf__types_8hpp.xhtml#a813d71f2e87f1c5cf856b510bb8e62ff">DT_FINI</a></div><div class="ttdeci">#define DT_FINI</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00510">elf_types.hpp:510</a></div></div>
<div class="ttc" id="elfio__dump_8hpp_xhtml_a49feaad2b9222b8f6af410cb90f1c5eb"><div class="ttname"><a href="elfio__dump_8hpp.xhtml#a49feaad2b9222b8f6af410cb90f1c5eb">DUMP_DEC_FORMAT</a></div><div class="ttdeci">#define DUMP_DEC_FORMAT(width)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00421">elfio_dump.hpp:421</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_aebb0156d8b53a9895935c26c2f766ef9"><div class="ttname"><a href="elf__types_8hpp.xhtml#aebb0156d8b53a9895935c26c2f766ef9">DT_STRSZ</a></div><div class="ttdeci">#define DT_STRSZ</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00507">elf_types.hpp:507</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3e99c973b77fe4a05ce8ef81bbf1dbba"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3e99c973b77fe4a05ce8ef81bbf1dbba">EM_NDS32</a></div><div class="ttdeci">#define EM_NDS32</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00253">elf_types.hpp:253</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a7d5aebf469008b18be87985186eed899"><div class="ttname"><a href="elf__types_8hpp.xhtml#a7d5aebf469008b18be87985186eed899">EM_S370</a></div><div class="ttdeci">#define EM_S370</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00093">elf_types.hpp:93</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a32b96b8bfb0a082bd7c6a9a31e83a97b"><div class="ttname"><a href="elf__types_8hpp.xhtml#a32b96b8bfb0a082bd7c6a9a31e83a97b">EM_VIDEOCORE3</a></div><div class="ttdeci">#define EM_VIDEOCORE3</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00223">elf_types.hpp:223</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a317bab1f54143bfeffd4c2519603c8ae"><div class="ttname"><a href="elf__types_8hpp.xhtml#a317bab1f54143bfeffd4c2519603c8ae">EM_MMIX</a></div><div class="ttdeci">#define EM_MMIX</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00165">elf_types.hpp:165</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a07eef78dc4e8e1fea9941c1575ce5d57"><div class="ttname"><a href="elf__types_8hpp.xhtml#a07eef78dc4e8e1fea9941c1575ce5d57">EM_F2MC16</a></div><div class="ttdeci">#define EM_F2MC16</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00189">elf_types.hpp:189</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a97b27bf46ba4ac7addf47f32cc35af96"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a97b27bf46ba4ac7addf47f32cc35af96">ELFIO::dump::section_data</a></div><div class="ttdeci">static void section_data(std::ostream &amp;out, const section *sec)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00771">elfio_dump.hpp:771</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a877e7920a2ca344afdcd551b73167f80"><div class="ttname"><a href="elf__types_8hpp.xhtml#a877e7920a2ca344afdcd551b73167f80">DT_MAXPOSTAGS</a></div><div class="ttdeci">#define DT_MAXPOSTAGS</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00531">elf_types.hpp:531</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a60bd22434b4a90978499a300fb76e1fb"><div class="ttname"><a href="elf__types_8hpp.xhtml#a60bd22434b4a90978499a300fb76e1fb">DT_SYMBOLIC</a></div><div class="ttdeci">#define DT_SYMBOLIC</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00513">elf_types.hpp:513</a></div></div>
<div class="ttc" id="classELFIO_1_1dump_xhtml_a71a5e807d51756c402a5ec46743b15d3"><div class="ttname"><a href="classELFIO_1_1dump.xhtml#a71a5e807d51756c402a5ec46743b15d3">ELFIO::dump::format_assoc</a></div><div class="ttdeci">static std::string format_assoc(const T &amp;table, const char key)</div><div class="ttdef"><b>Definition:</b> <a href="elfio__dump_8hpp_source.xhtml#l00910">elfio_dump.hpp:910</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a4add7784e43ec3d3b9c09d3ffc476a81"><div class="ttname"><a href="elf__types_8hpp.xhtml#a4add7784e43ec3d3b9c09d3ffc476a81">SHT_SYMTAB</a></div><div class="ttdeci">#define SHT_SYMTAB</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00351">elf_types.hpp:351</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a46eab9a90bd242bff248113e51bd1952"><div class="ttname"><a href="elf__types_8hpp.xhtml#a46eab9a90bd242bff248113e51bd1952">EM_SCORE7</a></div><div class="ttdeci">#define EM_SCORE7</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00221">elf_types.hpp:221</a></div></div>
<div class="ttc" id="classELFIO_1_1symbol__section__accessor_xhtml_a073e7ac88181aefa032c2fb94040e8d4"><div class="ttname"><a href="classELFIO_1_1symbol__section__accessor.xhtml#a073e7ac88181aefa032c2fb94040e8d4">ELFIO::symbol_section_accessor::get_symbol</a></div><div class="ttdeci">bool get_symbol(Elf_Xword index, std::string &amp;name, Elf64_Addr &amp;value, Elf_Xword &amp;size, unsigned char &amp;bind, unsigned char &amp;type, Elf_Half &amp;section_index, unsigned char &amp;other) const </div><div class="ttdef"><b>Definition:</b> <a href="elfio__symbols_8hpp_source.xhtml#l00054">elfio_symbols.hpp:54</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a3135d8ea00d3dc605687fbe482a59d49"><div class="ttname"><a href="elf__types_8hpp.xhtml#a3135d8ea00d3dc605687fbe482a59d49">EM_res035</a></div><div class="ttdeci">#define EM_res035</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00119">elf_types.hpp:119</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ab490243d70fe5a329588daec007f0d98"><div class="ttname"><a href="elf__types_8hpp.xhtml#ab490243d70fe5a329588daec007f0d98">EM_R32C</a></div><div class="ttdeci">#define EM_R32C</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00248">elf_types.hpp:248</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_a77301c665274669ba8d05978eb0d299e"><div class="ttname"><a href="elf__types_8hpp.xhtml#a77301c665274669ba8d05978eb0d299e">EM_386</a></div><div class="ttdeci">#define EM_386</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00087">elf_types.hpp:87</a></div></div>
<div class="ttc" id="elf__types_8hpp_xhtml_ac48655f306a10e5b67f02bea02927f06"><div class="ttname"><a href="elf__types_8hpp.xhtml#ac48655f306a10e5b67f02bea02927f06">EM_TRICORE</a></div><div class="ttdeci">#define EM_TRICORE</div><div class="ttdef"><b>Definition:</b> <a href="elf__types_8hpp_source.xhtml#l00129">elf_types.hpp:129</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:56 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
