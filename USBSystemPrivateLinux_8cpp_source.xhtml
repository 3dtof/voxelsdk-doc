<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: USBSystemPrivateLinux.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_e7f07c35b19a6de9638fcd101b463d91.xhtml">Voxel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">USBSystemPrivateLinux.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="USBSystemPrivateLinux_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="USBSystemPrivateLinux_8h.xhtml">USBSystemPrivateLinux.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;libudev.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Logger_8h.xhtml">Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>Voxel</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classVoxel_1_1USBSystemPrivate.xhtml#a977ddcd8cd9508c4b598b6f00c89d2a6">   15</a></span>&#160;<a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> <a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#a977ddcd8cd9508c4b598b6f00c89d2a6">USBSystemPrivate::getDevices</a>()</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> <a class="code" href="namespaceCameraSystemTest.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  devices.reserve(10);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#afe0937dc9ecaf71f56dc6da8a220a3b3">_iterateUDevUSB</a>([&amp;devices](<span class="keyword">struct</span> udev_device *dev, uint16_t vendorID, uint16_t productID, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;serial, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;serialIndex, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description)</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    devices.push_back(<a class="code" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>(<span class="keyword">new</span> <a class="code" href="classVoxel_1_1USBDevice.xhtml">USBDevice</a>(vendorID, productID, serial, -1, description, serialIndex)));</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  });</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="namespaceCameraSystemTest.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classVoxel_1_1USBSystemPrivate.xhtml#a0a4343643663e5cb000014b35bec5802">   28</a></span>&#160;libusb_device *<a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#a0a4343643663e5cb000014b35bec5802">USBSystemPrivate::getDeviceHandle</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1USBDevice.xhtml">USBDevice</a> &amp;usbd)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  uint8_t busNumber, devNumber;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#abdbade05f2c35ef3342f04bae6fa81e3">_context</a>)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; <span class="comment">// libusb is not initialized</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#a1cbfa177d183726f0e4a16cb45e30d35">getBusDevNumbers</a>(usbd, busNumber, devNumber))</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBSystem: Failed to get bus and device numbers for device &#39;&quot;</span> &lt;&lt; usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a4d6f2ecd4b014faf49b4cd9dca0dffe4">id</a>() &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  libusb_device *selected = 0;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  libusb_device** libusb_list;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceCameraSystemIQFrameTest.xhtml#ac2abb9d1e1e9e639f1bd83f5342d44c2">count</a> = libusb_get_device_list(<a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#abdbade05f2c35ef3342f04bae6fa81e3">_context</a>, &amp;libusb_list); </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code" href="namespaceCameraSystemIQFrameTest.xhtml#ac2abb9d1e1e9e639f1bd83f5342d44c2">count</a>; i++)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> ((busNumber == libusb_get_bus_number(libusb_list[i])) &amp;&amp; (devNumber == libusb_get_device_address(libusb_list[i])))</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      selected = libusb_list[i];</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      libusb_unref_device(libusb_list[i]);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  libusb_free_device_list(libusb_list, 0);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">return</span> selected;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classVoxel_1_1USBSystemPrivate.xhtml#afe0937dc9ecaf71f56dc6da8a220a3b3">   60</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#afe0937dc9ecaf71f56dc6da8a220a3b3">USBSystemPrivate::_iterateUDevUSB</a>(<a class="code" href="group__Util.xhtml#ga8aaf1e39b1b92e5f2ae6cf09d3ca0623">Function</a>&lt;<span class="keywordtype">void</span>(<span class="keyword">struct</span> udev_device *dev, uint16_t vendorID, uint16_t productID, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;serial, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;serialIndex, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description)&gt; process)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  udev *udevHandle = udev_new();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="classString.xhtml">String</a> devNode;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordflow">if</span>(!udevHandle)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBSystem: UDev Init failed&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">struct </span>udev_enumerate *enumerate;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keyword">struct </span>udev_list_entry *<a class="code" href="namespaceCameraSystemTest.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keyword">struct </span>udev_list_entry *devListEntry;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">/* Create a list of the devices in the &#39;v4l2&#39; subsystem. */</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  enumerate = udev_enumerate_new(udevHandle);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  udev_enumerate_add_match_subsystem(enumerate, <span class="stringliteral">&quot;usb&quot;</span>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  udev_enumerate_add_match_property(enumerate, <span class="stringliteral">&quot;DEVTYPE&quot;</span>, <span class="stringliteral">&quot;usb_device&quot;</span>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  udev_enumerate_scan_devices(enumerate);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  devices = udev_enumerate_get_list_entry(enumerate);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="comment">/*</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">   * For each item enumerated, print out its information.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">   * udev_list_entry_foreach is a macro which expands to</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">   * a loop. The loop will be executed for each member in</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">   * devices, setting dev_list_entry to a list entry</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">   * which contains the device&#39;s path in /sys.</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">   */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  udev_list_entry_foreach(devListEntry, devices)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *path;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     * Get the filename of the /sys entry for the device</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     * and create a udev_device object (dev) representing it</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    path = udev_list_entry_get_name(devListEntry);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">struct </span>udev_device *dev = udev_device_new_from_syspath(udevHandle, path);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    uint16_t vendorID, productID;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classString.xhtml">String</a> serial, serialIndex, description, productDesc;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    vendorID = strtol(udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;idVendor&quot;</span>), &amp;endptr, 16);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    productID = strtol(udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;idProduct&quot;</span>), &amp;endptr, 16);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    serialIndex += udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;busnum&quot;</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    serialIndex += <span class="stringliteral">&quot;:&quot;</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    serialIndex += udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;devpath&quot;</span>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span>(udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;manufacturer&quot;</span>))</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      description = udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;manufacturer&quot;</span>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span>(udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;product&quot;</span>))</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      productDesc = udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;product&quot;</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span>(productDesc.size())</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordflow">if</span>(description.size())</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        description += <span class="stringliteral">&quot; - &quot;</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      description += productDesc;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *s = udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;serial&quot;</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">if</span>(s) serial = s;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    process(dev, vendorID, productID, serial, serialIndex, description);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    udev_device_unref(dev);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="comment">/* Free the enumerator object */</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  udev_enumerate_unref(enumerate);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  udev_unref(udevHandle);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classVoxel_1_1USBSystemPrivate.xhtml#a1cbfa177d183726f0e4a16cb45e30d35">  139</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#a1cbfa177d183726f0e4a16cb45e30d35">USBSystemPrivate::getBusDevNumbers</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1USBDevice.xhtml">USBDevice</a> &amp;usbd, uint8_t &amp;busNumber, uint8_t &amp;devNumber)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  busNumber = devNumber = 0;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">bool</span> gotDevice = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#afe0937dc9ecaf71f56dc6da8a220a3b3">_iterateUDevUSB</a>([&amp;gotDevice, &amp;busNumber, &amp;devNumber, &amp;usbd](<span class="keyword">struct</span> udev_device *dev, uint16_t vendorID, uint16_t productID, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;serial, <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;serialIndex,</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">const</span> <a class="code" href="classString.xhtml">String</a> &amp;description)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">if</span>(!gotDevice &amp;&amp; usbd.<a class="code" href="classVoxel_1_1USBDevice.xhtml#ad7edff89623a9ecf8a2840b5181c67ac">vendorID</a>() == vendorID &amp;&amp; usbd.<a class="code" href="classVoxel_1_1USBDevice.xhtml#a733db00843f6522b28a07719c943e1fe">productID</a>() == productID &amp;&amp;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        (usbd.<a class="code" href="classVoxel_1_1Device.xhtml#af5b725547c816ee4bac357b3ff049a80">serialNumber</a>().size() == 0 || serial == usbd.<a class="code" href="classVoxel_1_1Device.xhtml#af5b725547c816ee4bac357b3ff049a80">serialNumber</a>()) &amp;&amp;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        (usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a015328649745ae11a52afaecbf6a6de5">serialIndex</a>().size() == 0 || serialIndex == usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a015328649745ae11a52afaecbf6a6de5">serialIndex</a>()))</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        busNumber = strtol(udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;busnum&quot;</span>), &amp;endptr, 10);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        devNumber = strtol(udev_device_get_sysattr_value(dev, <span class="stringliteral">&quot;devnum&quot;</span>), &amp;endptr, 10);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        gotDevice = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  });</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keywordflow">return</span> gotDevice;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">// Mainly borrowed from v4l2_devices.c of guvcview</span></div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classVoxel_1_1USBSystemPrivate.xhtml#af6f114a79ec61cc4815afc7828a84f85">  163</a></span>&#160;<a class="code" href="classString.xhtml">String</a> <a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#af6f114a79ec61cc4815afc7828a84f85">USBSystemPrivate::getDeviceNode</a>(<span class="keyword">const</span> <a class="code" href="classVoxel_1_1USBDevice.xhtml">USBDevice</a>&amp; usbd)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  udev *udevHandle = udev_new();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <a class="code" href="classString.xhtml">String</a> devNode;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordflow">if</span>(!udevHandle)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBSystem: Init failed to get device node&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keyword">struct </span>udev_enumerate *enumerate;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">struct </span>udev_list_entry *<a class="code" href="namespaceCameraSystemTest.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keyword">struct </span>udev_list_entry *devListEntry;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="comment">/* Create a list of the devices in the &#39;v4l2&#39; subsystem. */</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  enumerate = udev_enumerate_new(udevHandle);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  udev_enumerate_add_match_subsystem(enumerate, <span class="stringliteral">&quot;video4linux&quot;</span>);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  udev_enumerate_scan_devices(enumerate);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  devices = udev_enumerate_get_list_entry(enumerate);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="comment">/*</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">    * For each item enumerated, print out its information.</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">    * udev_list_entry_foreach is a macro which expands to</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">    * a loop. The loop will be executed for each member in</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">    * devices, setting dev_list_entry to a list entry</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">    * which contains the device&#39;s path in /sys.</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  udev_list_entry_foreach(devListEntry, devices)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *path;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">      * Get the filename of the /sys entry for the device</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">      * and create a udev_device object (dev) representing it</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">      */</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    path = udev_list_entry_get_name(devListEntry);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keyword">struct </span>udev_device *dev = udev_device_new_from_syspath(udevHandle, path), *pdev, *pdev2;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">/* usb_device_get_devnode() returns the path to the device node</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">      * itself in /dev. </span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">      */</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *v4l2Device = udev_device_get_devnode(dev);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">/* The device pointed to by dev contains information about</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">      *      t he v4l2 device. In orde*r to get information about the</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">      *      USB device, get the parent device with the</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">      *      subsystem/devtype pair of &quot;usb&quot;/&quot;usb_device&quot;. This will</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">      *      be several levels up the tree, but the function will find</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">      *      it.*/</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    pdev = udev_device_get_parent_with_subsystem_devtype(dev, <span class="stringliteral">&quot;usb&quot;</span>, <span class="stringliteral">&quot;usb_device&quot;</span>);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">if</span>(!pdev)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8">LOG_WARNING</a>) &lt;&lt; <span class="stringliteral">&quot;USBSystem: Unable to find parent usb device.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      udev_device_unref(dev);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">if</span>(usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a3b47ee5c3a9018c956e16d26be87abdb">channelID</a>() &gt;= 0) <span class="comment">// Valid channel ID?</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      pdev2 = udev_device_get_parent_with_subsystem_devtype(dev, <span class="stringliteral">&quot;usb&quot;</span>, <span class="stringliteral">&quot;usb_interface&quot;</span>);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordflow">if</span>(!pdev2)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8">LOG_WARNING</a>) &lt;&lt; <span class="stringliteral">&quot;USBSystem: Unable to find parent usb interface.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        udev_device_unref(dev);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="comment">/* From here, we can call get_sysattr_value() for each file</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">      *      in the device&#39;s /sys entry. The strings passed into these</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">      *      functions (idProduct, idVendor, serial, etc.) correspond</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">      *      directly to the files in the directory which represents</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">      *      the USB device. Note that USB strings are Unicode, UCS2</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">      *      encoded, but the strings returned from</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">      *      udev_device_get_sysattr_value() are UTF-8 encoded. */</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    uint16_t vendorID, productID;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    uint8_t channelID;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="classString.xhtml">String</a> serial, serialIndex;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    vendorID = strtol(udev_device_get_sysattr_value(pdev, <span class="stringliteral">&quot;idVendor&quot;</span>), &amp;endptr, 16);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    productID = strtol(udev_device_get_sysattr_value(pdev, <span class="stringliteral">&quot;idProduct&quot;</span>), &amp;endptr, 16);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">if</span>(usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a3b47ee5c3a9018c956e16d26be87abdb">channelID</a>() &gt;= 0)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      channelID = strtol(udev_device_get_sysattr_value(pdev2, <span class="stringliteral">&quot;bInterfaceNumber&quot;</span>), &amp;endptr, 16);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordflow">if</span>(usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a015328649745ae11a52afaecbf6a6de5">serialIndex</a>().size())</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      serialIndex += udev_device_get_sysattr_value(pdev, <span class="stringliteral">&quot;busnum&quot;</span>);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      serialIndex += <span class="stringliteral">&quot;:&quot;</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      serialIndex += udev_device_get_sysattr_value(pdev, <span class="stringliteral">&quot;devpath&quot;</span>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *s = udev_device_get_sysattr_value(pdev, <span class="stringliteral">&quot;serial&quot;</span>);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">if</span>(s) serial = s;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">if</span>(usbd.<a class="code" href="classVoxel_1_1USBDevice.xhtml#ad7edff89623a9ecf8a2840b5181c67ac">vendorID</a>() == vendorID &amp;&amp; usbd.<a class="code" href="classVoxel_1_1USBDevice.xhtml#a733db00843f6522b28a07719c943e1fe">productID</a>() == productID &amp;&amp;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      (usbd.<a class="code" href="classVoxel_1_1Device.xhtml#af5b725547c816ee4bac357b3ff049a80">serialNumber</a>().size() == 0 || serial == usbd.<a class="code" href="classVoxel_1_1Device.xhtml#af5b725547c816ee4bac357b3ff049a80">serialNumber</a>()) &amp;&amp;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      (usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a3b47ee5c3a9018c956e16d26be87abdb">channelID</a>() &lt; 0 || channelID == usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a3b47ee5c3a9018c956e16d26be87abdb">channelID</a>()) &amp;&amp;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      (usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a015328649745ae11a52afaecbf6a6de5">serialIndex</a>().size() == 0 || serialIndex == usbd.<a class="code" href="classVoxel_1_1Device.xhtml#a015328649745ae11a52afaecbf6a6de5">serialIndex</a>()))</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      devNode = v4l2Device;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    udev_device_unref(dev);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="comment">/* Free the enumerator object */</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  udev_enumerate_unref(enumerate);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  udev_unref(udevHandle);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordflow">return</span> devNode;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;}</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1USBSystemPrivate_xhtml_a0a4343643663e5cb000014b35bec5802"><div class="ttname"><a href="classVoxel_1_1USBSystemPrivate.xhtml#a0a4343643663e5cb000014b35bec5802">Voxel::USBSystemPrivate::getDeviceHandle</a></div><div class="ttdeci">libusb_device * getDeviceHandle(const USBDevice &amp;usbd)</div><div class="ttdoc">This does not look at the channel to determine which channel to use. </div><div class="ttdef"><b>Definition:</b> <a href="USBSystemPrivateLinux_8cpp_source.xhtml#l00028">USBSystemPrivateLinux.cpp:28</a></div></div>
<div class="ttc" id="USBSystemPrivateLinux_8h_xhtml"><div class="ttname"><a href="USBSystemPrivateLinux_8h.xhtml">USBSystemPrivateLinux.h</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystemPrivate_xhtml_afe0937dc9ecaf71f56dc6da8a220a3b3"><div class="ttname"><a href="classVoxel_1_1USBSystemPrivate.xhtml#afe0937dc9ecaf71f56dc6da8a220a3b3">Voxel::USBSystemPrivate::_iterateUDevUSB</a></div><div class="ttdeci">bool _iterateUDevUSB(Function&lt; void(struct udev_device *dev, uint16_t vendorID, uint16_t productID, const String &amp;serial, const String &amp;serialIndex, const String &amp;description)&gt; process)</div><div class="ttdef"><b>Definition:</b> <a href="USBSystemPrivateLinux_8cpp_source.xhtml#l00060">USBSystemPrivateLinux.cpp:60</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystemPrivate_xhtml_abdbade05f2c35ef3342f04bae6fa81e3"><div class="ttname"><a href="classVoxel_1_1USBSystemPrivate.xhtml#abdbade05f2c35ef3342f04bae6fa81e3">Voxel::USBSystemPrivate::_context</a></div><div class="ttdeci">libusb_context * _context</div><div class="ttdef"><b>Definition:</b> <a href="USBSystemPrivateLinux_8h_source.xhtml#l00027">USBSystemPrivateLinux.h:27</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8">Voxel::LOG_WARNING</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00028">Logger.h:28</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystemPrivate_xhtml_af6f114a79ec61cc4815afc7828a84f85"><div class="ttname"><a href="classVoxel_1_1USBSystemPrivate.xhtml#af6f114a79ec61cc4815afc7828a84f85">Voxel::USBSystemPrivate::getDeviceNode</a></div><div class="ttdeci">String getDeviceNode(const USBDevice &amp;usbd)</div><div class="ttdef"><b>Definition:</b> <a href="USBSystemPrivateLinux_8cpp_source.xhtml#l00163">USBSystemPrivateLinux.cpp:163</a></div></div>
<div class="ttc" id="classVoxel_1_1USBDevice_xhtml_ad7edff89623a9ecf8a2840b5181c67ac"><div class="ttname"><a href="classVoxel_1_1USBDevice.xhtml#ad7edff89623a9ecf8a2840b5181c67ac">Voxel::USBDevice::vendorID</a></div><div class="ttdeci">uint16_t vendorID() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00090">Device.h:90</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1USBDevice_xhtml_a733db00843f6522b28a07719c943e1fe"><div class="ttname"><a href="classVoxel_1_1USBDevice.xhtml#a733db00843f6522b28a07719c943e1fe">Voxel::USBDevice::productID</a></div><div class="ttdeci">uint16_t productID() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00091">Device.h:91</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_a4d6f2ecd4b014faf49b4cd9dca0dffe4"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#a4d6f2ecd4b014faf49b4cd9dca0dffe4">Voxel::Device::id</a></div><div class="ttdeci">const String &amp; id() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00065">Device.h:65</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_a3b47ee5c3a9018c956e16d26be87abdb"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#a3b47ee5c3a9018c956e16d26be87abdb">Voxel::Device::channelID</a></div><div class="ttdeci">const int channelID() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00074">Device.h:74</a></div></div>
<div class="ttc" id="namespaceCameraSystemIQFrameTest_xhtml_ac2abb9d1e1e9e639f1bd83f5342d44c2"><div class="ttname"><a href="namespaceCameraSystemIQFrameTest.xhtml#ac2abb9d1e1e9e639f1bd83f5342d44c2">CameraSystemIQFrameTest.count</a></div><div class="ttdeci">tuple count</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemIQFrameTest_8py_source.xhtml#l00030">CameraSystemIQFrameTest.py:30</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga8a21cf7475356ae552da8952ebf885b4"><div class="ttname"><a href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Voxel::Vector</a></div><div class="ttdeci">std::vector&lt; T &gt; Vector</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00051">Common.h:51</a></div></div>
<div class="ttc" id="group__CamSys_xhtml_ga8b8c5a5f71759c97cc49332cfeb89d79"><div class="ttname"><a href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">Voxel::DevicePtr</a></div><div class="ttdeci">Ptr&lt; Device &gt; DevicePtr</div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00079">Device.h:79</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_af5b725547c816ee4bac357b3ff049a80"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#af5b725547c816ee4bac357b3ff049a80">Voxel::Device::serialNumber</a></div><div class="ttdeci">const String &amp; serialNumber() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00069">Device.h:69</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_a015328649745ae11a52afaecbf6a6de5"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#a015328649745ae11a52afaecbf6a6de5">Voxel::Device::serialIndex</a></div><div class="ttdeci">const String &amp; serialIndex() const </div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00071">Device.h:71</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga8aaf1e39b1b92e5f2ae6cf09d3ca0623"><div class="ttname"><a href="group__Util.xhtml#ga8aaf1e39b1b92e5f2ae6cf09d3ca0623">Voxel::Function</a></div><div class="ttdeci">std::function&lt; T &gt; Function</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00063">Common.h:63</a></div></div>
<div class="ttc" id="Logger_8h_xhtml"><div class="ttname"><a href="Logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="namespaceCameraSystemTest_xhtml_a9e6d1e12787c05f7e4190828d4d2bfa5"><div class="ttname"><a href="namespaceCameraSystemTest.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">CameraSystemTest.devices</a></div><div class="ttdeci">tuple devices</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemTest_8py_source.xhtml#l00012">CameraSystemTest.py:12</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystemPrivate_xhtml_a1cbfa177d183726f0e4a16cb45e30d35"><div class="ttname"><a href="classVoxel_1_1USBSystemPrivate.xhtml#a1cbfa177d183726f0e4a16cb45e30d35">Voxel::USBSystemPrivate::getBusDevNumbers</a></div><div class="ttdeci">bool getBusDevNumbers(const USBDevice &amp;usbd, uint8_t &amp;busNumber, uint8_t &amp;devNumber)</div><div class="ttdef"><b>Definition:</b> <a href="USBSystemPrivateLinux_8cpp_source.xhtml#l00139">USBSystemPrivateLinux.cpp:139</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystemPrivate_xhtml_a977ddcd8cd9508c4b598b6f00c89d2a6"><div class="ttname"><a href="classVoxel_1_1USBSystemPrivate.xhtml#a977ddcd8cd9508c4b598b6f00c89d2a6">Voxel::USBSystemPrivate::getDevices</a></div><div class="ttdeci">Vector&lt; DevicePtr &gt; getDevices()</div><div class="ttdef"><b>Definition:</b> <a href="USBSystemPrivateLinux_8cpp_source.xhtml#l00015">USBSystemPrivateLinux.cpp:15</a></div></div>
<div class="ttc" id="classString_xhtml"><div class="ttname"><a href="classString.xhtml">String</a></div></div>
<div class="ttc" id="classVoxel_1_1USBDevice_xhtml"><div class="ttname"><a href="classVoxel_1_1USBDevice.xhtml">Voxel::USBDevice</a></div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00081">Device.h:81</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:57 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
