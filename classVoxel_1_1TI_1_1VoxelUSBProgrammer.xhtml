<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: Voxel::TI::VoxelUSBProgrammer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceVoxel.xhtml">Voxel</a></li><li class="navelem"><a class="el" href="namespaceVoxel_1_1TI.xhtml">TI</a></li><li class="navelem"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml">VoxelUSBProgrammer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Voxel::TI::VoxelUSBProgrammer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Voxel::TI::VoxelUSBProgrammer:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1TI_1_1VoxelUSBProgrammer__inherit__graph.svg" width="227" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Voxel::TI::VoxelUSBProgrammer:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1TI_1_1VoxelUSBProgrammer__coll__graph.svg" width="100%" height="523"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structVoxel_1_1TI_1_1VoxelUSBProgrammer_1_1RequestParams.xhtml">RequestParams</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a491cc685e74c2cf403e357f9955321f4"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="group__Util.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map</a>&lt; uint, <a class="el" href="structVoxel_1_1TI_1_1VoxelUSBProgrammer_1_1RequestParams.xhtml">RequestParams</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a491cc685e74c2cf403e357f9955321f4">SlaveAddressToRequestParamsMap</a></td></tr>
<tr class="separator:a491cc685e74c2cf403e357f9955321f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classVoxel_1_1TI_1_1VoxelProgrammerBase')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml">Voxel::TI::VoxelProgrammerBase</a></td></tr>
<tr class="memitem:aa5fd87c5c5f54df09b1d53f92e91dac2 inherit pub_types_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="group__Util.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map</a>&lt; uint, uint &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">SlaveAddressToByteMap</a></td></tr>
<tr class="separator:aa5fd87c5c5f54df09b1d53f92e91dac2 inherit pub_types_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1a90688b4d4f30aa0af0050dbb4f8651"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a1a90688b4d4f30aa0af0050dbb4f8651">VoxelUSBProgrammer</a> (const <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">SlaveAddressToByteMap</a> &amp;map, const <a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a491cc685e74c2cf403e357f9955321f4">SlaveAddressToRequestParamsMap</a> &amp;slaveAddressToRequestParamsMap, <a class="el" href="namespaceVoxel.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a> &amp;usbIO, <a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> device)</td></tr>
<tr class="separator:a1a90688b4d4f30aa0af0050dbb4f8651"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fa086d4717bb5adbacd9d57fecd00ea"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a8fa086d4717bb5adbacd9d57fecd00ea">isInitialized</a> () const </td></tr>
<tr class="separator:a8fa086d4717bb5adbacd9d57fecd00ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4cd97f222859e96ee0ec9ba68faac44"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#ab4cd97f222859e96ee0ec9ba68faac44">reset</a> ()</td></tr>
<tr class="separator:ab4cd97f222859e96ee0ec9ba68faac44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a065c3f93bfdc71dc92cd8416a07c9a22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceVoxel.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a065c3f93bfdc71dc92cd8416a07c9a22">getUSBIO</a> ()</td></tr>
<tr class="separator:a065c3f93bfdc71dc92cd8416a07c9a22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2e973a140bcda674dcf97056e825b90"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#ac2e973a140bcda674dcf97056e825b90">~VoxelUSBProgrammer</a> ()</td></tr>
<tr class="separator:ac2e973a140bcda674dcf97056e825b90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml">Voxel::TI::VoxelProgrammerBase</a></td></tr>
<tr class="memitem:aefb09c0e28b139e3a0f1fbd948e37d78 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aefb09c0e28b139e3a0f1fbd948e37d78">VoxelProgrammerBase</a> (const <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">SlaveAddressToByteMap</a> &amp;map, <a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> device)</td></tr>
<tr class="separator:aefb09c0e28b139e3a0f1fbd948e37d78 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b01ce528713db194fad742a5d2a7976 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a7b01ce528713db194fad742a5d2a7976">readRegister</a> (uint32_t address, uint32_t &amp;value) const </td></tr>
<tr class="separator:a7b01ce528713db194fad742a5d2a7976 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af25f669684ac5322aeda5cfced536af0 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#af25f669684ac5322aeda5cfced536af0">writeRegister</a> (uint32_t address, uint32_t value)</td></tr>
<tr class="separator:af25f669684ac5322aeda5cfced536af0 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5722a686959cb8252b757b458fb20b24 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a5722a686959cb8252b757b458fb20b24">getValue</a> (const <a class="el" href="classVoxel_1_1Parameter.xhtml">Parameter</a> &amp;param, uint32_t &amp;value) const </td></tr>
<tr class="separator:a5722a686959cb8252b757b458fb20b24 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ad35d2e8619b2cb4894fe93e007475 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#ac0ad35d2e8619b2cb4894fe93e007475">setValue</a> (const <a class="el" href="classVoxel_1_1Parameter.xhtml">Parameter</a> &amp;param, uint32_t value, <a class="el" href="classbool.xhtml">bool</a> writeOnly=false)</td></tr>
<tr class="separator:ac0ad35d2e8619b2cb4894fe93e007475 inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32e6dcec3390b1e073017cbd0c81c6ef inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a32e6dcec3390b1e073017cbd0c81c6ef">~VoxelProgrammerBase</a> ()</td></tr>
<tr class="separator:a32e6dcec3390b1e073017cbd0c81c6ef inherit pub_methods_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classVoxel_1_1RegisterProgrammer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classVoxel_1_1RegisterProgrammer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classVoxel_1_1RegisterProgrammer.xhtml">Voxel::RegisterProgrammer</a></td></tr>
<tr class="memitem:aea07adb491d0cfaa92e3f20b6e6ed1fe inherit pub_methods_classVoxel_1_1RegisterProgrammer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1RegisterProgrammer.xhtml#aea07adb491d0cfaa92e3f20b6e6ed1fe">~RegisterProgrammer</a> ()</td></tr>
<tr class="separator:aea07adb491d0cfaa92e3f20b6e6ed1fe inherit pub_methods_classVoxel_1_1RegisterProgrammer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a2eb1b9459af85193335e0cfa6b95a51b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a2eb1b9459af85193335e0cfa6b95a51b">_readRegister</a> (uint16_t slaveAddress, uint16_t registerAddress, uint32_t &amp;value, uint8_t length) const </td></tr>
<tr class="separator:a2eb1b9459af85193335e0cfa6b95a51b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9cb779423884d9f8d8309abfb5cf015"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#ad9cb779423884d9f8d8309abfb5cf015">_writeRegister</a> (uint16_t slaveAddress, uint16_t registerAddress, uint32_t value, uint8_t length)</td></tr>
<tr class="separator:ad9cb779423884d9f8d8309abfb5cf015"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aeb695db6f1d897aa6c50e5f78c814bcb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceVoxel.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a></td></tr>
<tr class="separator:aeb695db6f1d897aa6c50e5f78c814bcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ea6583b5256d42a5af5e44a1d46f960"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a491cc685e74c2cf403e357f9955321f4">SlaveAddressToRequestParamsMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">_slaveAddressToRequestParamsMap</a></td></tr>
<tr class="separator:a4ea6583b5256d42a5af5e44a1d46f960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml">Voxel::TI::VoxelProgrammerBase</a></td></tr>
<tr class="memitem:a2bc04ac3af8b7686363888ea5e533354 inherit pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a2bc04ac3af8b7686363888ea5e533354">_device</a></td></tr>
<tr class="separator:a2bc04ac3af8b7686363888ea5e533354 inherit pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31021dbbc3bf1306d382598d4bc964f0 inherit pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__Util.xhtml#ga12f64c7826c44420564715a1dbae5709">Mutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a31021dbbc3bf1306d382598d4bc964f0">_mutex</a></td></tr>
<tr class="separator:a31021dbbc3bf1306d382598d4bc964f0 inherit pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73dc089c8d75b235f7eaa9fdc6ad39c3 inherit pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">SlaveAddressToByteMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a73dc089c8d75b235f7eaa9fdc6ad39c3">_slaveAddressToByteMap</a></td></tr>
<tr class="separator:a73dc089c8d75b235f7eaa9fdc6ad39c3 inherit pro_attribs_classVoxel_1_1TI_1_1VoxelProgrammerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00019">19</a> of file <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a491cc685e74c2cf403e357f9955321f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="group__Util.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map</a>&lt;uint, <a class="el" href="structVoxel_1_1TI_1_1VoxelUSBProgrammer_1_1RequestParams.xhtml">RequestParams</a>&gt; <a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a491cc685e74c2cf403e357f9955321f4">Voxel::TI::VoxelUSBProgrammer::SlaveAddressToRequestParamsMap</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00028">28</a> of file <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1a90688b4d4f30aa0af0050dbb4f8651"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Voxel::TI::VoxelUSBProgrammer::VoxelUSBProgrammer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aa5fd87c5c5f54df09b1d53f92e91dac2">SlaveAddressToByteMap</a> &amp;&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a491cc685e74c2cf403e357f9955321f4">SlaveAddressToRequestParamsMap</a> &amp;&#160;</td>
          <td class="paramname"><em>slaveAddressToRequestParamsMap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceVoxel.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>usbIO</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00023">23</a> of file <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml">VoxelUSBProgrammer.cpp</a>.</p>

<p>References <a class="el" href="Logger_8h_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>, and <a class="el" href="Device_8h_source.xhtml#l00024">Voxel::Device::USB</a>.</p>
<div class="fragment"><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                                                                                                                                                               : <a class="code" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aefb09c0e28b139e3a0f1fbd948e37d78">VoxelProgrammerBase</a>(map, device), </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">_slaveAddressToRequestParamsMap</a>(slaveAddressToRequestParamsMap), <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>(usbIO)</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordflow">if</span>(device-&gt;interfaceID() != <a class="code" href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Device::USB</a>)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Invalid device.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Voxel::Device::USB</a></div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00024">Device.h:24</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_aeb695db6f1d897aa6c50e5f78c814bcb"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">Voxel::TI::VoxelUSBProgrammer::_usbIO</a></div><div class="ttdeci">USBIOPtr _usbIO</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00030">VoxelUSBProgrammer.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_a4ea6583b5256d42a5af5e44a1d46f960"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">Voxel::TI::VoxelUSBProgrammer::_slaveAddressToRequestParamsMap</a></div><div class="ttdeci">SlaveAddressToRequestParamsMap _slaveAddressToRequestParamsMap</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00031">VoxelUSBProgrammer.h:31</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelProgrammerBase_xhtml_aefb09c0e28b139e3a0f1fbd948e37d78"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#aefb09c0e28b139e3a0f1fbd948e37d78">Voxel::TI::VoxelProgrammerBase::VoxelProgrammerBase</a></div><div class="ttdeci">VoxelProgrammerBase(const SlaveAddressToByteMap &amp;map, DevicePtr device)</div><div class="ttdef"><b>Definition:</b> <a href="VoxelProgrammerBase_8cpp_source.xhtml#l00017">VoxelProgrammerBase.cpp:17</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac2e973a140bcda674dcf97056e825b90"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Voxel::TI::VoxelUSBProgrammer::~VoxelUSBProgrammer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00045">45</a> of file <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2eb1b9459af85193335e0cfa6b95a51b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::TI::VoxelUSBProgrammer::_readRegister </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>slaveAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>registerAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a5237ab869ef24b2e19610e2a47dcbe05">Voxel::TI::VoxelProgrammerBase</a>.</p>

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml">VoxelUSBProgrammer.cpp</a>.</p>

<p>References <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00031">_slaveAddressToRequestParamsMap</a>, <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00030">_usbIO</a>, <a class="el" href="USBIO_8h_source.xhtml#l00029">Voxel::USBIO::FROM_DEVICE</a>, <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00025">Voxel::TI::VoxelUSBProgrammer::RequestParams::leftShiftBits</a>, <a class="el" href="Logger_8h_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00024">Voxel::TI::VoxelUSBProgrammer::RequestParams::readRequestCode</a>, <a class="el" href="USBIO_8h_source.xhtml#l00042">Voxel::USBIO::RECIPIENT_DEVICE</a>, <a class="el" href="USBIO_8h_source.xhtml#l00036">Voxel::USBIO::REQUEST_VENDOR</a>, <a class="el" href="LensCalibrationTest_8py_source.xhtml#l00021">LensCalibrationTest::x</a>, and <a class="el" href="LensCalibrationTest_8py_source.xhtml#l00022">LensCalibrationTest::y</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">auto</span> <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> = <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">_slaveAddressToRequestParamsMap</a>.find(slaveAddress);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> == <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">_slaveAddressToRequestParamsMap</a>.end())</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Unknown slave address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">const</span> RequestParams &amp;<a class="code" href="namespaceLensCalibrationTest.xhtml#ade47a6ce7eff19ce3db4cda734e62f1d">y</a> = <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>-&gt;second;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  uint16_t l = length;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">if</span>(length == 1) <span class="comment">// TPS -- addr[0] == 0x2D</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    uint8_t data[1];</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    data[0] = 0x0;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>-&gt;controlTransfer(<a class="code" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">USBIO::FROM_DEVICE</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        y.readRequestCode, slaveAddress &lt;&lt; y.leftShiftBits, registerAddress &lt;&lt; y.leftShiftBits, data, l))</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    value = data[0];</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 3) <span class="comment">// ToF -- 0x58, 0x5C</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    uint8_t data[3];</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    data[0] = 0x0;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    data[1] = 0x0;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    data[2] = 0x0;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>-&gt;controlTransfer(<a class="code" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">USBIO::FROM_DEVICE</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      y.readRequestCode, slaveAddress &lt;&lt; y.leftShiftBits, registerAddress &lt;&lt; y.leftShiftBits, data, l))</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    value = data[0] + (data[1] &lt;&lt; 8) + (data[2] &lt;&lt; 16);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 2)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    uint8_t data[2];</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    data[0] = 0x0;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    data[1] = 0x0;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>-&gt;controlTransfer(<a class="code" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">USBIO::FROM_DEVICE</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      y.readRequestCode, slaveAddress &lt;&lt; y.leftShiftBits, registerAddress &lt;&lt; y.leftShiftBits, data, l))</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    value = data[0] + (data[1] &lt;&lt; 8);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Don&#39;t know how to read &#39;&quot;</span> &lt;&lt; std::dec &lt;&lt; length &lt;&lt; <span class="stringliteral">&quot;&#39; bytes. Required for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1USBIO_xhtml_a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1"><div class="ttname"><a href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">Voxel::USBIO::REQUEST_VENDOR</a></div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8h_source.xhtml#l00036">USBIO.h:36</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_aeb695db6f1d897aa6c50e5f78c814bcb"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">Voxel::TI::VoxelUSBProgrammer::_usbIO</a></div><div class="ttdeci">USBIOPtr _usbIO</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00030">VoxelUSBProgrammer.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_xhtml_a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22"><div class="ttname"><a href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">Voxel::USBIO::RECIPIENT_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8h_source.xhtml#l00042">USBIO.h:42</a></div></div>
<div class="ttc" id="namespaceLensCalibrationTest_xhtml_a0013363a9b9db12e50b9307b3d8be7cb"><div class="ttname"><a href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">LensCalibrationTest.x</a></div><div class="ttdeci">tuple x</div><div class="ttdef"><b>Definition:</b> <a href="LensCalibrationTest_8py_source.xhtml#l00021">LensCalibrationTest.py:21</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_xhtml_a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c"><div class="ttname"><a href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a25f447aeffe05d0b73f28639d92b727c">Voxel::USBIO::FROM_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8h_source.xhtml#l00029">USBIO.h:29</a></div></div>
<div class="ttc" id="namespaceLensCalibrationTest_xhtml_ade47a6ce7eff19ce3db4cda734e62f1d"><div class="ttname"><a href="namespaceLensCalibrationTest.xhtml#ade47a6ce7eff19ce3db4cda734e62f1d">LensCalibrationTest.y</a></div><div class="ttdeci">int y</div><div class="ttdef"><b>Definition:</b> <a href="LensCalibrationTest_8py_source.xhtml#l00022">LensCalibrationTest.py:22</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_a4ea6583b5256d42a5af5e44a1d46f960"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">Voxel::TI::VoxelUSBProgrammer::_slaveAddressToRequestParamsMap</a></div><div class="ttdeci">SlaveAddressToRequestParamsMap _slaveAddressToRequestParamsMap</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00031">VoxelUSBProgrammer.h:31</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad9cb779423884d9f8d8309abfb5cf015"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::TI::VoxelUSBProgrammer::_writeRegister </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>slaveAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>registerAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classVoxel_1_1TI_1_1VoxelProgrammerBase.xhtml#a3fb6de6004b61707a4f4608e5c2107e6">Voxel::TI::VoxelProgrammerBase</a>.</p>

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00101">101</a> of file <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml">VoxelUSBProgrammer.cpp</a>.</p>

<p>References <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00031">_slaveAddressToRequestParamsMap</a>, <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00030">_usbIO</a>, <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00025">Voxel::TI::VoxelUSBProgrammer::RequestParams::leftShiftBits</a>, <a class="el" href="Logger_8h_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="USBIO_8h_source.xhtml#l00042">Voxel::USBIO::RECIPIENT_DEVICE</a>, <a class="el" href="USBIO_8h_source.xhtml#l00036">Voxel::USBIO::REQUEST_VENDOR</a>, <a class="el" href="USBIO_8h_source.xhtml#l00028">Voxel::USBIO::TO_DEVICE</a>, <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00024">Voxel::TI::VoxelUSBProgrammer::RequestParams::writeRequestCode</a>, <a class="el" href="LensCalibrationTest_8py_source.xhtml#l00021">LensCalibrationTest::x</a>, and <a class="el" href="LensCalibrationTest_8py_source.xhtml#l00022">LensCalibrationTest::y</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">auto</span> <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> = <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">_slaveAddressToRequestParamsMap</a>.find(slaveAddress);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a> == <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">_slaveAddressToRequestParamsMap</a>.end())</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelProgrammerBase: Unknown slave address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  RequestParams &amp;<a class="code" href="namespaceLensCalibrationTest.xhtml#ade47a6ce7eff19ce3db4cda734e62f1d">y</a> = <a class="code" href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>-&gt;second;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  uint16_t l = length;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordflow">if</span>(length == 1) <span class="comment">// TPS  -- slaveAddress == 0x2D</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    uint8_t data[1];</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    data[0] = value &amp; 0xFF;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>-&gt;controlTransfer(<a class="code" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      y.writeRequestCode, slaveAddress &lt;&lt; y.leftShiftBits, registerAddress &lt;&lt; y.leftShiftBits, data, l))</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 3) <span class="comment">// ToF</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    uint8_t data[3];</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    data[0] = (value &amp; 0xFF);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    data[1] = (value &gt;&gt; 8) &amp; 0xFF;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    data[2] = (value &gt;&gt; 16) &amp; 0xFF;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>-&gt;controlTransfer(<a class="code" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      y.writeRequestCode, slaveAddress &lt;&lt; y.leftShiftBits, registerAddress &lt;&lt; y.leftShiftBits, data, l))</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(length == 2)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    uint8_t data[2];</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    data[0] = (value &amp; 0xFF);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    data[1] = (value &gt;&gt; 8) &amp; 0xFF;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>-&gt;controlTransfer(<a class="code" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">USBIO::TO_DEVICE</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">USBIO::REQUEST_VENDOR</a>, <a class="code" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">USBIO::RECIPIENT_DEVICE</a>, </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      y.writeRequestCode, slaveAddress &lt;&lt; y.leftShiftBits, registerAddress &lt;&lt; y.leftShiftBits, data, l))</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Could not read register for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Don&#39;t know how to write &#39;&quot;</span> &lt;&lt; std::dec &lt;&lt; length &lt;&lt; <span class="stringliteral">&quot;&#39; bytes. Required for address 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; slaveAddress &lt;&lt; registerAddress &lt;&lt; std::endl;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1USBIO_xhtml_a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1"><div class="ttname"><a href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03ade955dd553f2845d6cd571e17ee55fc1">Voxel::USBIO::REQUEST_VENDOR</a></div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8h_source.xhtml#l00036">USBIO.h:36</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_aeb695db6f1d897aa6c50e5f78c814bcb"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">Voxel::TI::VoxelUSBProgrammer::_usbIO</a></div><div class="ttdeci">USBIOPtr _usbIO</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00030">VoxelUSBProgrammer.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_xhtml_a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22"><div class="ttname"><a href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262ea23ba0195ade467ee3d6347a0a9681b22">Voxel::USBIO::RECIPIENT_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8h_source.xhtml#l00042">USBIO.h:42</a></div></div>
<div class="ttc" id="namespaceLensCalibrationTest_xhtml_a0013363a9b9db12e50b9307b3d8be7cb"><div class="ttname"><a href="namespaceLensCalibrationTest.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">LensCalibrationTest.x</a></div><div class="ttdeci">tuple x</div><div class="ttdef"><b>Definition:</b> <a href="LensCalibrationTest_8py_source.xhtml#l00021">LensCalibrationTest.py:21</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_xhtml_a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5"><div class="ttname"><a href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4a056e9a744ab1a8db8abd989236d2a2f5">Voxel::USBIO::TO_DEVICE</a></div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8h_source.xhtml#l00028">USBIO.h:28</a></div></div>
<div class="ttc" id="namespaceLensCalibrationTest_xhtml_ade47a6ce7eff19ce3db4cda734e62f1d"><div class="ttname"><a href="namespaceLensCalibrationTest.xhtml#ade47a6ce7eff19ce3db4cda734e62f1d">LensCalibrationTest.y</a></div><div class="ttdeci">int y</div><div class="ttdef"><b>Definition:</b> <a href="LensCalibrationTest_8py_source.xhtml#l00022">LensCalibrationTest.py:22</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_a4ea6583b5256d42a5af5e44a1d46f960"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a4ea6583b5256d42a5af5e44a1d46f960">Voxel::TI::VoxelUSBProgrammer::_slaveAddressToRequestParamsMap</a></div><div class="ttdeci">SlaveAddressToRequestParamsMap _slaveAddressToRequestParamsMap</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00031">VoxelUSBProgrammer.h:31</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a065c3f93bfdc71dc92cd8416a07c9a22"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceVoxel.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a>&amp; Voxel::TI::VoxelUSBProgrammer::getUSBIO </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00043">43</a> of file <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a>.</p>

<p>Referenced by <a class="el" href="TintinCDKCamera_8cpp_source.xhtml#l00589">Voxel::TI::TintinCDKCamera::_getEEPROMSize()</a>, <a class="el" href="TintinCDKCamera_8cpp_source.xhtml#l00615">Voxel::TI::TintinCDKCamera::_readConfigFromHardware()</a>, <a class="el" href="TintinCDKCamera_8cpp_source.xhtml#l00703">Voxel::TI::TintinCDKCamera::_writeConfigFromHardware()</a>, and <a class="el" href="ToFCamera_8cpp_source.xhtml#l00620">Voxel::TI::ToFCamera::setSerialNumber()</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>; }</div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_aeb695db6f1d897aa6c50e5f78c814bcb"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">Voxel::TI::VoxelUSBProgrammer::_usbIO</a></div><div class="ttdeci">USBIOPtr _usbIO</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00030">VoxelUSBProgrammer.h:30</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1TI_1_1VoxelUSBProgrammer_a065c3f93bfdc71dc92cd8416a07c9a22_icgraph.svg" width="100%" height="450"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a8fa086d4717bb5adbacd9d57fecd00ea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::TI::VoxelUSBProgrammer::isInitialized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classVoxel_1_1RegisterProgrammer.xhtml#a65cd8b5334e47888543669af23590d1e">Voxel::RegisterProgrammer</a>.</p>

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00017">17</a> of file <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml">VoxelUSBProgrammer.cpp</a>.</p>

<p>References <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00030">_usbIO</a>.</p>

<p>Referenced by <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00163">reset()</a>.</p>
<div class="fragment"><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">_usbIO</a>-&gt;isInitialized();</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_aeb695db6f1d897aa6c50e5f78c814bcb"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#aeb695db6f1d897aa6c50e5f78c814bcb">Voxel::TI::VoxelUSBProgrammer::_usbIO</a></div><div class="ttdeci">USBIOPtr _usbIO</div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8h_source.xhtml#l00030">VoxelUSBProgrammer.h:30</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1TI_1_1VoxelUSBProgrammer_a8fa086d4717bb5adbacd9d57fecd00ea_icgraph.svg" width="491" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab4cd97f222859e96ee0ec9ba68faac44"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::TI::VoxelUSBProgrammer::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classVoxel_1_1RegisterProgrammer.xhtml#a186c37acbc56689c94727279d8cdb689">Voxel::RegisterProgrammer</a>.</p>

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml">VoxelUSBProgrammer.cpp</a>.</p>

<p>References <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00017">isInitialized()</a>, <a class="el" href="Logger_8h_source.xhtml#l00028">Voxel::LOG_WARNING</a>, and <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a8fa086d4717bb5adbacd9d57fecd00ea">isInitialized</a>())</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8">LOG_WARNING</a>) &lt;&lt; <span class="stringliteral">&quot;VoxelUSBProgrammer: Don&#39;t know how to reset the device.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad0982c0e5a750625d98e16b2877dedd8">Voxel::LOG_WARNING</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00028">Logger.h:28</a></div></div>
<div class="ttc" id="classVoxel_1_1TI_1_1VoxelUSBProgrammer_xhtml_a8fa086d4717bb5adbacd9d57fecd00ea"><div class="ttname"><a href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a8fa086d4717bb5adbacd9d57fecd00ea">Voxel::TI::VoxelUSBProgrammer::isInitialized</a></div><div class="ttdeci">virtual bool isInitialized() const </div><div class="ttdef"><b>Definition:</b> <a href="VoxelUSBProgrammer_8cpp_source.xhtml#l00017">VoxelUSBProgrammer.cpp:17</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1TI_1_1VoxelUSBProgrammer_ab4cd97f222859e96ee0ec9ba68faac44_cgraph.svg" width="491" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a4ea6583b5256d42a5af5e44a1d46f960"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVoxel_1_1TI_1_1VoxelUSBProgrammer.xhtml#a491cc685e74c2cf403e357f9955321f4">SlaveAddressToRequestParamsMap</a> Voxel::TI::VoxelUSBProgrammer::_slaveAddressToRequestParamsMap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00031">31</a> of file <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a>.</p>

<p>Referenced by <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00033">_readRegister()</a>, and <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00101">_writeRegister()</a>.</p>

</div>
</div>
<a class="anchor" id="aeb695db6f1d897aa6c50e5f78c814bcb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceVoxel.xhtml#ab98797c1045f61c0ee5da790ee4e47c8">USBIOPtr</a> Voxel::TI::VoxelUSBProgrammer::_usbIO</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml#l00030">30</a> of file <a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a>.</p>

<p>Referenced by <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00033">_readRegister()</a>, <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00101">_writeRegister()</a>, and <a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml#l00017">isInitialized()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="VoxelUSBProgrammer_8h_source.xhtml">VoxelUSBProgrammer.h</a></li>
<li><a class="el" href="VoxelUSBProgrammer_8cpp_source.xhtml">VoxelUSBProgrammer.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 21 2015 20:56:07 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
