<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: Voxel::USBIO::USBIOPrivate Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceVoxel.xhtml">Voxel</a></li><li class="navelem"><a class="el" href="classVoxel_1_1USBIO.xhtml">USBIO</a></li><li class="navelem"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml">USBIOPrivate</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classVoxel_1_1USBIO_1_1USBIOPrivate-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Voxel::USBIO::USBIOPrivate Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for Voxel::USBIO::USBIOPrivate:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1USBIO_1_1USBIOPrivate__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a72862681db5fbc61c173f711b60e76f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a72862681db5fbc61c173f711b60e76f3">USBIOPrivate</a> (<a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> <a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a>)</td></tr>
<tr class="separator:a72862681db5fbc61c173f711b60e76f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f29bc1b4c86f9ce4e14c188f343f94f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a4f29bc1b4c86f9ce4e14c188f343f94f">isInitialized</a> ()</td></tr>
<tr class="separator:a4f29bc1b4c86f9ce4e14c188f343f94f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06a5c4cb4a146f0bf7aa5b65048effe1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a06a5c4cb4a146f0bf7aa5b65048effe1">controlTransfer</a> (<a class="el" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4">Direction</a> direction, <a class="el" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03">RequestType</a> requestType, <a class="el" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262e">RecipientType</a> recipientType, uint8_t request, uint16_t value, uint16_t index, uint8_t *data, uint16_t &amp;length, <a class="el" href="classbool.xhtml">bool</a> needFullLength=true, long timeout=1000)</td></tr>
<tr class="separator:a06a5c4cb4a146f0bf7aa5b65048effe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e2c73ed96955248f1755d1dbceb8483"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a4e2c73ed96955248f1755d1dbceb8483">bulkTransfer</a> (uint8_t endpoint, uint8_t *data, long toTransferLength, long &amp;transferredLength, long timeout=1000)</td></tr>
<tr class="separator:a4e2c73ed96955248f1755d1dbceb8483"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a493c8377fca7aca44e1b156bc94225a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a493c8377fca7aca44e1b156bc94225a4">resetBulkEndPoint</a> (uint8_t endpoint)</td></tr>
<tr class="separator:a493c8377fca7aca44e1b156bc94225a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad603e06612afa33a41bea46664c2bee8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#ad603e06612afa33a41bea46664c2bee8">~USBIOPrivate</a> ()</td></tr>
<tr class="separator:ad603e06612afa33a41bea46664c2bee8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a8ff71a0c8634cc02f4fb47402e5afc22"><td class="memItemLeft" align="right" valign="top">USBHandle&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a></td></tr>
<tr class="separator:a8ff71a0c8634cc02f4fb47402e5afc22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa9a01729ce7316aaf9418e9ec9a2655"><td class="memItemLeft" align="right" valign="top">USBDeviceHandle&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aaa9a01729ce7316aaf9418e9ec9a2655">deviceHandle</a></td></tr>
<tr class="separator:aaa9a01729ce7316aaf9418e9ec9a2655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ace165bd89fce6ecbe168edbda30fbc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVoxel_1_1USBSystem.xhtml">USBSystem</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a2ace165bd89fce6ecbe168edbda30fbc">sys</a></td></tr>
<tr class="separator:a2ace165bd89fce6ecbe168edbda30fbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0a502bf6940314c6bdd3fda12a45c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a></td></tr>
<tr class="separator:a8e0a502bf6940314c6bdd3fda12a45c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4bfd37505997ae8998c208c621a5946"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbool.xhtml">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">_initialized</a></td></tr>
<tr class="separator:aa4bfd37505997ae8998c208c621a5946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af92373cffec7d48f7cedc582fe069ed6"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#af92373cffec7d48f7cedc582fe069ed6">lastTransferSize</a> = 0</td></tr>
<tr class="separator:af92373cffec7d48f7cedc582fe069ed6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00022">22</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a72862681db5fbc61c173f711b60e76f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Voxel::USBIO::USBIOPrivate::USBIOPrivate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a>&#160;</td>
          <td class="paramname"><em>device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>References <a class="el" href="USBIO_8cpp_source.xhtml#l00039">_initialized</a>, <a class="el" href="USBIO_8cpp_source.xhtml#l00033">deviceHandle</a>, <a class="el" href="USBSystemPrivateLinux_8cpp_source.xhtml#l00028">Voxel::USBSystemPrivate::getDeviceHandle()</a>, <a class="el" href="USBSystem_8cpp_source.xhtml#l00056">Voxel::USBSystem::getDeviceNode()</a>, <a class="el" href="USBSystem_8h_source.xhtml#l00037">Voxel::USBSystem::getUSBSystemPrivate()</a>, <a class="el" href="USBIO_8cpp_source.xhtml#l00032">handle</a>, <a class="el" href="Device_8h_source.xhtml#l00065">Voxel::Device::id()</a>, <a class="el" href="USBSystem_8cpp_source.xhtml#l00024">Voxel::USBSystem::isInitialized()</a>, <a class="el" href="Logger_8h_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>, <a class="el" href="USBIO_8cpp_source.xhtml#l00035">sys</a>, and <a class="el" href="Device_8h_source.xhtml#l00024">Voxel::Device::USB</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                               : <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a>(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a>), <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>(0), <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">_initialized</a>(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#ifdef LINUX</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor"></span>  , <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aaa9a01729ce7316aaf9418e9ec9a2655">deviceHandle</a>(0)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#elif defined(WINDOWS)</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor"></span>  , <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aaa9a01729ce7316aaf9418e9ec9a2655">deviceHandle</a>(INVALID_HANDLE_VALUE)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor"></span>{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a>-&gt;interfaceID() != <a class="code" href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Device::USB</a>)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: cannot download to a non-USB device&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  USBDevice &amp;d = (USBDevice &amp;)*<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a2ace165bd89fce6ecbe168edbda30fbc">sys</a>.<a class="code" href="classVoxel_1_1USBSystem.xhtml#a4f5add3f3838c7f3017bfbc377234650">isInitialized</a>())</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: USBSystem init failed.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#ifdef LINUX</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor"></span>  <span class="keywordtype">int</span> rc;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  deviceHandle = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a2ace165bd89fce6ecbe168edbda30fbc">sys</a>.<a class="code" href="classVoxel_1_1USBSystem.xhtml#a151a1cab0198329728a365a0c1afaf57">getUSBSystemPrivate</a>().<a class="code" href="classVoxel_1_1USBSystemPrivate.xhtml#a0a4343643663e5cb000014b35bec5802">getDeviceHandle</a>(d);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordflow">if</span>(deviceHandle)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">if</span>((rc = libusb_open(deviceHandle, &amp;<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>)) == LIBUSB_SUCCESS)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">int</span> channelID = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a>-&gt;channelID();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordflow">if</span>(channelID &lt; 0) channelID = 0;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordflow">if</span>((rc = libusb_claim_interface(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>, channelID)) != LIBUSB_SUCCESS)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: &quot;</span> &lt;&lt; libusb_strerror((libusb_error)rc) &lt;&lt; std::endl;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">_initialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: &quot;</span> &lt;&lt; libusb_strerror((libusb_error)rc) &lt;&lt; std::endl;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: Failed to get device handle. Check that device is connected and is accessible from current user.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">#elif defined(WINDOWS)</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor"></span>  <a class="code" href="classString.xhtml">String</a> devicePath = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a2ace165bd89fce6ecbe168edbda30fbc">sys</a>.<a class="code" href="classVoxel_1_1USBSystem.xhtml#a9150d69d5e3e64e2c9c8839ada21312d">getDeviceNode</a>(d);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">if</span> (!devicePath.size())</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: Could not get device path for &#39;&quot;</span> &lt;&lt; d.id() &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  deviceHandle = CreateFile(devicePath.c_str(), GENERIC_WRITE | GENERIC_READ, FILE_SHARE_WRITE | FILE_SHARE_READ, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL | FILE_FLAG_OVERLAPPED, NULL);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordflow">if</span> (deviceHandle == INVALID_HANDLE_VALUE)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: Failed to open device path &#39;&quot;</span> &lt;&lt; devicePath &lt;&lt; <span class="stringliteral">&quot;&#39; for device &#39;&quot;</span> &lt;&lt; d.id() &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a> = Ptr&lt;CCyUSBDevice&gt;(<span class="keyword">new</span> CCyUSBDevice(deviceHandle));</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>-&gt;IsOpen())</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">_initialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor"></span>}</div>
<div class="ttc" id="classVoxel_1_1USBSystemPrivate_xhtml_a0a4343643663e5cb000014b35bec5802"><div class="ttname"><a href="classVoxel_1_1USBSystemPrivate.xhtml#a0a4343643663e5cb000014b35bec5802">Voxel::USBSystemPrivate::getDeviceHandle</a></div><div class="ttdeci">libusb_device * getDeviceHandle(const USBDevice &amp;usbd)</div><div class="ttdoc">This does not look at the channel to determine which channel to use. </div><div class="ttdef"><b>Definition:</b> <a href="USBSystemPrivateLinux_8cpp_source.xhtml#l00028">USBSystemPrivateLinux.cpp:28</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="classVoxel_1_1Device_xhtml_a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551"><div class="ttname"><a href="classVoxel_1_1Device.xhtml#a09e82a2c8801d91a67a0c3ae96434e90a8d880d4b536ed3803739132c2e5e0551">Voxel::Device::USB</a></div><div class="ttdef"><b>Definition:</b> <a href="Device_8h_source.xhtml#l00024">Device.h:24</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_aa4bfd37505997ae8998c208c621a5946"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">Voxel::USBIO::USBIOPrivate::_initialized</a></div><div class="ttdeci">bool _initialized</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00039">USBIO.cpp:39</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystem_xhtml_a151a1cab0198329728a365a0c1afaf57"><div class="ttname"><a href="classVoxel_1_1USBSystem.xhtml#a151a1cab0198329728a365a0c1afaf57">Voxel::USBSystem::getUSBSystemPrivate</a></div><div class="ttdeci">USBSystemPrivate &amp; getUSBSystemPrivate()</div><div class="ttdef"><b>Definition:</b> <a href="USBSystem_8h_source.xhtml#l00037">USBSystem.h:37</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8e0a502bf6940314c6bdd3fda12a45c0"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">Voxel::USBIO::USBIOPrivate::device</a></div><div class="ttdeci">DevicePtr device</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00037">USBIO.cpp:37</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystem_xhtml_a4f5add3f3838c7f3017bfbc377234650"><div class="ttname"><a href="classVoxel_1_1USBSystem.xhtml#a4f5add3f3838c7f3017bfbc377234650">Voxel::USBSystem::isInitialized</a></div><div class="ttdeci">bool isInitialized()</div><div class="ttdef"><b>Definition:</b> <a href="USBSystem_8cpp_source.xhtml#l00024">USBSystem.cpp:24</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a2ace165bd89fce6ecbe168edbda30fbc"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a2ace165bd89fce6ecbe168edbda30fbc">Voxel::USBIO::USBIOPrivate::sys</a></div><div class="ttdeci">USBSystem sys</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00035">USBIO.cpp:35</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_aaa9a01729ce7316aaf9418e9ec9a2655"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aaa9a01729ce7316aaf9418e9ec9a2655">Voxel::USBIO::USBIOPrivate::deviceHandle</a></div><div class="ttdeci">USBDeviceHandle deviceHandle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00033">USBIO.cpp:33</a></div></div>
<div class="ttc" id="classVoxel_1_1USBSystem_xhtml_a9150d69d5e3e64e2c9c8839ada21312d"><div class="ttname"><a href="classVoxel_1_1USBSystem.xhtml#a9150d69d5e3e64e2c9c8839ada21312d">Voxel::USBSystem::getDeviceNode</a></div><div class="ttdeci">String getDeviceNode(const USBDevice &amp;usbd)</div><div class="ttdef"><b>Definition:</b> <a href="USBSystem_8cpp_source.xhtml#l00056">USBSystem.cpp:56</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8ff71a0c8634cc02f4fb47402e5afc22"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">Voxel::USBIO::USBIOPrivate::handle</a></div><div class="ttdeci">USBHandle handle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00032">USBIO.cpp:32</a></div></div>
<div class="ttc" id="classString_xhtml"><div class="ttname"><a href="classString.xhtml">String</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1USBIO_1_1USBIOPrivate_a72862681db5fbc61c173f711b60e76f3_cgraph.svg" width="100%" height="585"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad603e06612afa33a41bea46664c2bee8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Voxel::USBIO::USBIOPrivate::~USBIOPrivate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00135">135</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#ifdef LINUX</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">_initialized</a>)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    libusb_release_interface(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>, <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">device</a>-&gt;channelID());</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">_initialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    libusb_close(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aaa9a01729ce7316aaf9418e9ec9a2655">deviceHandle</a>)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    libusb_unref_device(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aaa9a01729ce7316aaf9418e9ec9a2655">deviceHandle</a>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor"></span>}</div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_aa4bfd37505997ae8998c208c621a5946"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">Voxel::USBIO::USBIOPrivate::_initialized</a></div><div class="ttdeci">bool _initialized</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00039">USBIO.cpp:39</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8e0a502bf6940314c6bdd3fda12a45c0"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8e0a502bf6940314c6bdd3fda12a45c0">Voxel::USBIO::USBIOPrivate::device</a></div><div class="ttdeci">DevicePtr device</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00037">USBIO.cpp:37</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_aaa9a01729ce7316aaf9418e9ec9a2655"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aaa9a01729ce7316aaf9418e9ec9a2655">Voxel::USBIO::USBIOPrivate::deviceHandle</a></div><div class="ttdeci">USBDeviceHandle deviceHandle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00033">USBIO.cpp:33</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8ff71a0c8634cc02f4fb47402e5afc22"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">Voxel::USBIO::USBIOPrivate::handle</a></div><div class="ttdeci">USBHandle handle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00032">USBIO.cpp:32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a4e2c73ed96955248f1755d1dbceb8483"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::USBIO::USBIOPrivate::bulkTransfer </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>endpoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>toTransferLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long &amp;&#160;</td>
          <td class="paramname"><em>transferredLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>timeout</em> = <code>1000</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00192">192</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>References <a class="el" href="Logger_8h_source.xhtml#l00027">Voxel::LOG_ERROR</a>, <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>, and <a class="el" href="Common_8cpp_source.xhtml#l00151">Voxel::nearestPowerOf2()</a>.</p>
<div class="fragment"><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#ifdef LINUX</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor"></span>  <span class="keywordtype">int</span> transferred;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordtype">int</span> rc = libusb_bulk_transfer(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>, endpoint, data, toTransferLength, &amp;transferred, timeout);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keywordflow">if</span>(rc != 0 &amp;&amp; rc != LIBUSB_ERROR_TIMEOUT)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: Bulk transfer failed.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  transferredLength = transferred;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#af92373cffec7d48f7cedc582fe069ed6">lastTransferSize</a> = toTransferLength;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">#elif defined(WINDOWS)</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor"></span>  </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  CCyBulkEndPoint *dataEP;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordflow">if</span>(endpoint &amp; 0x80)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    dataEP = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>-&gt;BulkInEndPt;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#af92373cffec7d48f7cedc582fe069ed6">lastTransferSize</a> != toTransferLength)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      dataEP-&gt;SetXferSize(<a class="code" href="group__Util.xhtml#ga6d86e760c3fda677715f4381a669acf1">nearestPowerOf2</a>(toTransferLength, index));</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    dataEP = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>-&gt;BulkOutEndPt;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  dataEP-&gt;TimeOut = timeout;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  transferredLength = toTransferLength;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#af92373cffec7d48f7cedc582fe069ed6">lastTransferSize</a> = toTransferLength;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keywordflow">if</span> (!dataEP-&gt;XferData(data, transferredLength, NULL))</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: Could not transfer &#39;&quot;</span> &lt;&lt; transferredLength &lt;&lt; <span class="stringliteral">&quot;&#39; bytes&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor"></span>}</div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga6d86e760c3fda677715f4381a669acf1"><div class="ttname"><a href="group__Util.xhtml#ga6d86e760c3fda677715f4381a669acf1">Voxel::nearestPowerOf2</a></div><div class="ttdeci">unsigned int nearestPowerOf2(unsigned int value, unsigned int &amp;index)</div><div class="ttdef"><b>Definition:</b> <a href="Common_8cpp_source.xhtml#l00151">Common.cpp:151</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_af92373cffec7d48f7cedc582fe069ed6"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#af92373cffec7d48f7cedc582fe069ed6">Voxel::USBIO::USBIOPrivate::lastTransferSize</a></div><div class="ttdeci">long lastTransferSize</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00041">USBIO.cpp:41</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8ff71a0c8634cc02f4fb47402e5afc22"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">Voxel::USBIO::USBIOPrivate::handle</a></div><div class="ttdeci">USBHandle handle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00032">USBIO.cpp:32</a></div></div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVoxel_1_1USBIO_1_1USBIOPrivate_a4e2c73ed96955248f1755d1dbceb8483_cgraph.svg" width="422" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a06a5c4cb4a146f0bf7aa5b65048effe1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::USBIO::USBIOPrivate::controlTransfer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVoxel_1_1USBIO.xhtml#a0e21c746a8c43b662c92f930f9d2f1e4">Direction</a>&#160;</td>
          <td class="paramname"><em>direction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classVoxel_1_1USBIO.xhtml#a25ee6ff5f2cce5e7e801edd52ba7ae03">RequestType</a>&#160;</td>
          <td class="paramname"><em>requestType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classVoxel_1_1USBIO.xhtml#a73687863f871c5c7d5fd02471b35262e">RecipientType</a>&#160;</td>
          <td class="paramname"><em>recipientType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>request</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t &amp;&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbool.xhtml">bool</a>&#160;</td>
          <td class="paramname"><em>needFullLength</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>timeout</em> = <code>1000</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>References <a class="el" href="Logger_8h_source.xhtml#l00027">Voxel::LOG_ERROR</a>, and <a class="el" href="Logger_8h_source.xhtml#l00180">Voxel::logger</a>.</p>
<div class="fragment"><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">#ifdef LINUX</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor"></span>  <span class="keywordtype">int</span> status;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  status = libusb_control_transfer(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                   (direction &lt;&lt; 7) | (requestType &lt;&lt; 5) | recipientType,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                   request,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                   value,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                   index,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                   data, length, timeout);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordflow">if</span> ((needFullLength &amp;&amp; status != length) || (!needFullLength &amp;&amp; status &lt; 0))</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: Control transfer issue: Status &quot;</span> &lt;&lt; status &lt;&lt; std::endl;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  length = (uint16_t)status;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor">#elif defined(WINDOWS)</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="preprocessor"></span>  CCyControlEndPoint *ept = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>-&gt;ControlEndPt;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  ept-&gt;Target = (CTL_XFER_TGT_TYPE)recipientType;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  ept-&gt;ReqType = (CTL_XFER_REQ_TYPE)requestType;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  ept-&gt;Direction = (CTL_XFER_DIR_TYPE)direction;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  ept-&gt;ReqCode = request;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  ept-&gt;Value = value;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  ept-&gt;TimeOut = timeout;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  ept-&gt;Index = index;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordtype">long</span> l = length;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordflow">if</span> (!ept-&gt;XferData(data, l, NULL))</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;USBIO: Control transfer issue.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  length = (uint16_t)l;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor"></span>}</div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8ff71a0c8634cc02f4fb47402e5afc22"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">Voxel::USBIO::USBIOPrivate::handle</a></div><div class="ttdeci">USBHandle handle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00032">USBIO.cpp:32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4f29bc1b4c86f9ce4e14c188f343f94f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::USBIO::USBIOPrivate::isInitialized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>References <a class="el" href="USBIO_8cpp_source.xhtml#l00039">_initialized</a>, and <a class="el" href="USBIO_8cpp_source.xhtml#l00032">handle</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">_initialized</a> &amp;&amp; <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a> != 0; }</div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_aa4bfd37505997ae8998c208c621a5946"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#aa4bfd37505997ae8998c208c621a5946">Voxel::USBIO::USBIOPrivate::_initialized</a></div><div class="ttdeci">bool _initialized</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00039">USBIO.cpp:39</a></div></div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8ff71a0c8634cc02f4fb47402e5afc22"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">Voxel::USBIO::USBIOPrivate::handle</a></div><div class="ttdeci">USBHandle handle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00032">USBIO.cpp:32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a493c8377fca7aca44e1b156bc94225a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::USBIO::USBIOPrivate::resetBulkEndPoint </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>endpoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00237">237</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;{</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">#ifdef LINUX</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">return</span> libusb_clear_halt(<a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>, endpoint) == 0;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#elif defined(WINDOWS)</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor"></span>  CCyBulkEndPoint *dataEP;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keywordflow">if</span>(endpoint &amp; 0x80)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    dataEP = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>-&gt;BulkInEndPt;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    dataEP = <a class="code" href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">handle</a>-&gt;BulkOutEndPt;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordflow">return</span> dataEP-&gt;Reset();</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor"></span>}</div>
<div class="ttc" id="classVoxel_1_1USBIO_1_1USBIOPrivate_xhtml_a8ff71a0c8634cc02f4fb47402e5afc22"><div class="ttname"><a href="classVoxel_1_1USBIO_1_1USBIOPrivate.xhtml#a8ff71a0c8634cc02f4fb47402e5afc22">Voxel::USBIO::USBIOPrivate::handle</a></div><div class="ttdeci">USBHandle handle</div><div class="ttdef"><b>Definition:</b> <a href="USBIO_8cpp_source.xhtml#l00032">USBIO.cpp:32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="aa4bfd37505997ae8998c208c621a5946"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbool.xhtml">bool</a> Voxel::USBIO::USBIOPrivate::_initialized</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>Referenced by <a class="el" href="USBIO_8cpp_source.xhtml#l00044">isInitialized()</a>, and <a class="el" href="USBIO_8cpp_source.xhtml#l00056">USBIOPrivate()</a>.</p>

</div>
</div>
<a class="anchor" id="a8e0a502bf6940314c6bdd3fda12a45c0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__CamSys.xhtml#ga8b8c5a5f71759c97cc49332cfeb89d79">DevicePtr</a> Voxel::USBIO::USBIOPrivate::device</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaa9a01729ce7316aaf9418e9ec9a2655"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">USBDeviceHandle Voxel::USBIO::USBIOPrivate::deviceHandle</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>Referenced by <a class="el" href="USBIO_8cpp_source.xhtml#l00056">USBIOPrivate()</a>.</p>

</div>
</div>
<a class="anchor" id="a8ff71a0c8634cc02f4fb47402e5afc22"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">USBHandle Voxel::USBIO::USBIOPrivate::handle</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>Referenced by <a class="el" href="USBIO_8cpp_source.xhtml#l00044">isInitialized()</a>, and <a class="el" href="USBIO_8cpp_source.xhtml#l00056">USBIOPrivate()</a>.</p>

</div>
</div>
<a class="anchor" id="af92373cffec7d48f7cedc582fe069ed6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">long Voxel::USBIO::USBIOPrivate::lastTransferSize = 0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2ace165bd89fce6ecbe168edbda30fbc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVoxel_1_1USBSystem.xhtml">USBSystem</a> Voxel::USBIO::USBIOPrivate::sys</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="USBIO_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a>.</p>

<p>Referenced by <a class="el" href="USBIO_8cpp_source.xhtml#l00056">USBIOPrivate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="USBIO_8cpp_source.xhtml">USBIO.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 21 2015 20:56:06 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
