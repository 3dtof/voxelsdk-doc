<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Voxel: CLIManager.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_b1617d756d2224e91d37255e84e89ba2.xhtml">App</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CLIManager.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00220.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00221.xhtml">CLIManager.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00270.xhtml">LineNoise.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a00283.xhtml">PCLGrabber.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">   13</a></span>&#160;<span class="preprocessor">#define _C(F) std::bind(F, this, std::placeholders::_1, std::placeholders::_2)</span></div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">   14</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _P(F) std::bind(F, this, std::placeholders::_1)</span></div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">   15</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _H(F) std::bind(F, this)</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using namespace </span>LineNoise;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="a00387.xhtml">   23</a></span>&#160;<span class="keyword">namespace </span>Voxel</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  </div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="a00025.xhtml#a7a7ce51202c00d16a0e1cac5dcceb1e0">   26</a></span>&#160;CLIManager::CLIManager(<a class="code" href="a00023.xhtml">CameraSystem</a> &amp;<a class="code" href="a00379.xhtml#a08de9201448d0d16e6d0293a288b965c">sys</a>): _sys(sys)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a> = <a class="code" href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map&lt;String, Command&gt;</a>({</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    {<span class="stringliteral">&quot;list&quot;</span>,           <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a2362fe206bde3cf40c9dbcac61284ebc">CLIManager::_listHelp</a>),          <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#ab2500972b2b1d5be67c22657f8f00a01">CLIManager::_list</a>),          <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    {<span class="stringliteral">&quot;status&quot;</span>,         <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a3d764a6045563afe3acff232fa65c799">CLIManager::_currentHelp</a>),       <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#aab5267bf1e3a161b078e4ae88abd273d">CLIManager::_current</a>),       <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    {<span class="stringliteral">&quot;connect&quot;</span>,        <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a4f643a858cbe8866e2d8f7949f01c3cf">CLIManager::_connectHelp</a>),       <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#ade2c73e82b7148ab8e998fb89fbfb858">CLIManager::_connect</a>),       <a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#a1f200e3b644fd73fa27726be890ee72b">CLIManager::_connectCompletion</a>))},</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {<span class="stringliteral">&quot;start&quot;</span>,          <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a4e48054f70ec798328bc63f59b07a80f">CLIManager::_startHelp</a>),         <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a980f41b859fe062ea0c132ce6031d0cf">CLIManager::_start</a>),         <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    {<span class="stringliteral">&quot;stop&quot;</span>,           <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#ac1f4d4c27d312c47299be5ecbbc6cf46">CLIManager::_stopHelp</a>),          <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#ab47e49d6a6a17a1315b0d4b650da87be">CLIManager::_stop</a>),          <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    {<span class="stringliteral">&quot;getr&quot;</span>,           <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a6b48ba78d603ecd626e4ba380434180d">CLIManager::_getRegisterHelp</a>),   <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a233b04bcca8da70da2ee02b42120c465">CLIManager::_getRegister</a>),   <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    {<span class="stringliteral">&quot;setr&quot;</span>,           <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a445265afaaab8c0bbe14919bd453a7d1">CLIManager::_setRegisterHelp</a>),   <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#aab8a56867b83a9948d04f20ead922565">CLIManager::_setRegister</a>),   <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    {<span class="stringliteral">&quot;get&quot;</span>,            <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#ac0efff72240dc5e1ba5865e0dd59503d">CLIManager::_getParameterHelp</a>),  <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a725a420cbbe28729002acc00737477c7">CLIManager::_getParameter</a>),  <a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#a3967fe41da74162bc157ec9b0e79e63c">CLIManager::_getParameterCompletion</a>))},</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {<span class="stringliteral">&quot;set&quot;</span>,            <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a6c5a5af89c97f34ae7b117720e1e5a12">CLIManager::_setParameterHelp</a>),  <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#ac54eb976e2f9a29c13e5e5f47d657f8b">CLIManager::_setParameter</a>),  <a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#aac230e2719608e39cb08e69df96a93e2">CLIManager::_setParameterCompletion</a>))},</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {<span class="stringliteral">&quot;save&quot;</span>,           <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#afece35872340107b25cae23070b0d888">CLIManager::_saveHelp</a>),          <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#ac5b3590f9259f86ee3cab93e563d3987">CLIManager::_save</a>),          <a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#a3f2531910575641c586e936fd165b9a1">CLIManager::_saveCompletion</a>))},</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {<span class="stringliteral">&quot;cap&quot;</span>,            <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a88117e881984522565753456916c8641">CLIManager::_capabilitiesHelp</a>),  <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#afce3e4d2158d643e933f3b85f366a42a">CLIManager::_capabilities</a>),  <a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#a49a382b9e838e1f340a9e5715c761a46">CLIManager::_capabilitiesCompletion</a>))},</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {<span class="stringliteral">&quot;help&quot;</span>,           <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a204852ed7f5a5adf187670c2bb324032">CLIManager::_helpHelp</a>),          <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#af3558521944c2644785f80a2343b5e36">CLIManager::_help</a>),          <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {<span class="stringliteral">&quot;disconnect&quot;</span>,     <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a1aa3152dc8f5d2419c413da18fa2613a">CLIManager::_disconnectHelp</a>),    <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#af6aad1a812d394b8e2bcb79df60b3976">CLIManager::_disconnect</a>),    <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    {<span class="stringliteral">&quot;reset&quot;</span>,          <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a09d0a960edd0bc8bf47b3977241c572b">CLIManager::_resetHelp</a>),         <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a81e1d4106d753f79a9077df245ece3b7">CLIManager::_reset</a>),         <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {<span class="stringliteral">&quot;exit&quot;</span>,           <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a365614bf2126c72f086eb77c935daf66">CLIManager::_exitHelp</a>),          <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#adcbed0a1696b5ea512a115f14b4e1614">CLIManager::_exit</a>),          <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {<span class="stringliteral">&quot;filters&quot;</span>,        <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#aa6fff6df6924e6a0bb48f4625c8e02d4">CLIManager::_filtersHelp</a>),       <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a98d69d7bd3e122d61cce89369c2c8a15">CLIManager::_filters</a>),       <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {<span class="stringliteral">&quot;addfilter&quot;</span>,      <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a9a33cfbdd2339db0e49cd4b6d83665fe">CLIManager::_addFilterHelp</a>),     <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a5eb9711b9a17e7d5493c7cfdffedc693">CLIManager::_addFilter</a>),     <a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#a65c5b6b4edb9779b8449e388d91ae2c5">CLIManager::_addFilterCompletion</a>))},</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {<span class="stringliteral">&quot;removefilter&quot;</span>,   <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#ac786de1837d63018ecc858da4406047a">CLIManager::_removeFilterHelp</a>),  <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#afd55259d54922282cc0405ddfaf07739">CLIManager::_removeFilter</a>),  <a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#ab05fde5bd30552734d99594b32a2ca98">CLIManager::_removeFilterCompletion</a>))},</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {<span class="stringliteral">&quot;setfilterparam&quot;</span>, <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a34678edee0e02b0e5a8581f506c26456">CLIManager::_setFilterParamHelp</a>),<a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a25bfff4487bfb531f1a7d42594b682c0">CLIManager::_setFilterParam</a>),<a class="code" href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a>(&amp;<a class="code" href="a00025.xhtml#a00d8fae3a44b95a991330b401ffc6cd2">CLIManager::_setFilterParamCompletion</a>))},</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  });</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a> = <a class="code" href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map&lt;String, Command&gt;</a>({</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {<span class="stringliteral">&quot;roi&quot;</span>,       <a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a875de7a43e41153295ec1414e70eb1d8">CLIManager::_roiCapabilities</a>),         <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#ab476a2b4dee8c003ee19f984005afd90">CLIManager::_roi</a>),         <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {<span class="stringliteral">&quot;video_mode&quot;</span>,<a class="code" href="a00026.xhtml">Command</a>(<a class="code" href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a>(&amp;<a class="code" href="a00025.xhtml#a2672bb26d3423d3cc587f7871a4741cd">CLIManager::_videoModeCapabilities</a>),   <a class="code" href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a>(&amp;<a class="code" href="a00025.xhtml#a1caa7d89cf577f4728a114e78d1a5ba3">CLIManager::_videoMode</a>),   <span class="keyword">nullptr</span>)},</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  });</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="comment">// Scan and connect to the first device available</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> <a class="code" href="a00379.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a> = sys.<a class="code" href="a00023.xhtml#ad26fad5d70ee748d0492184da757d5be">scan</a>();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordflow">if</span>(devices.size() &gt; 0)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a> = sys.<a class="code" href="a00023.xhtml#ab685fb4639d124ee11aa7cd64ab02f00">connect</a>(devices[0]);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a> = <a class="code" href="a00113.xhtml">Ptr&lt;PCLViewer&gt;</a>(<span class="keyword">new</span> <a class="code" href="a00105.xhtml">PCLViewer</a>());</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;setDepthCamera(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;start();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a00025.xhtml#aed50c5722b25bd7dbf2508bf67641dbc">   69</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#aed50c5722b25bd7dbf2508bf67641dbc">CLIManager::run</a>()</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <a class="code" href="a00025.xhtml#accc24e532a9fb16cb7f5df81bd2709c9">_commandLoop</a>();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="a00025.xhtml#aa09c2ce6a3468458e8e949b61fb63350">   74</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#aa09c2ce6a3468458e8e949b61fb63350">CLIManager::_getPrompt</a>(<a class="code" href="a00130.xhtml">String</a> &amp;prompt)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    prompt = <span class="stringliteral">&quot;voxel:&quot;</span> + <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;id() + <span class="stringliteral">&quot;&gt; &quot;</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    prompt = <span class="stringliteral">&quot;voxel:&gt; &quot;</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="a00025.xhtml#accc24e532a9fb16cb7f5df81bd2709c9">   83</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#accc24e532a9fb16cb7f5df81bd2709c9">CLIManager::_commandLoop</a>()</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <a class="code" href="a00025.xhtml#afe8bfa5620b711acaac153337e8eb661">_keepRunning</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="comment">/* Load history from file. The history file is just a plain text file</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">   * where entries are separated by newlines. */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <a class="code" href="a00381.xhtml#ae3fa94e62f15b4f0d105753027521dcf">linenoiseHistorySetMaxLen</a>(1000);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <a class="code" href="a00381.xhtml#ab0652a666cb260a0b487bc9df5638c7a">linenoiseHistoryLoad</a>(<span class="stringliteral">&quot;history.txt&quot;</span>); <span class="comment">/* Load the history at startup */</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <a class="code" href="a00381.xhtml#a77ae76b19f91154937daaf925e725a44">linenoiseSetCompletionCallback</a>(std::bind(&amp;<a class="code" href="a00025.xhtml#a82c90ebee06e7444323318eeaa41e18d">CLIManager::_completionCallback</a>, <span class="keyword">this</span>, std::placeholders::_1, std::placeholders::_2));</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">char</span> *line;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> tokens;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <a class="code" href="a00130.xhtml">String</a> prompt;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <a class="code" href="a00025.xhtml#aa09c2ce6a3468458e8e949b61fb63350">_getPrompt</a>(prompt);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="comment">/* Now this is the main loop of the typical linenoise-based application.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">   * The call to linenoise() will block as long as the user types something</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">   * and presses enter.</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">   *</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">   * The typed string is returned as a malloc() allocated string by</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">   * linenoise, so the user needs to free() it. */</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">while</span>(<a class="code" href="a00025.xhtml#afe8bfa5620b711acaac153337e8eb661">_keepRunning</a> &amp;&amp; (line = <a class="code" href="a00381.xhtml#a1a1a8da73f602e753f773163db344b47">linenoise</a>(prompt.c_str())) != NULL) </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">/* Do something with the string. */</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">if</span> (line[0] != <span class="charliteral">&#39;\0&#39;</span>) </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <a class="code" href="a00381.xhtml#ae0d170e5b6e0ea50d5f722551cb09ec5">linenoiseHistoryAdd</a>(line); <span class="comment">/* Add to the history. */</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <a class="code" href="a00381.xhtml#a238647bb456e72d40b364b093758aafc">linenoiseHistorySave</a>(<span class="stringliteral">&quot;history.txt&quot;</span>); <span class="comment">/* Save the history on disk. */</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <a class="code" href="a00025.xhtml#aa88324c7fb0c96ece91f5125f0cd071c">_getTokens</a>(line, tokens);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      free(line);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keywordflow">if</span>(tokens.size() == 0)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Seems like a parse error. Please re-enter your command&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keyword">auto</span> c = <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>.find(tokens[0]);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordflow">if</span>(c == <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>.end())</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown command &#39;&quot;</span> &lt;&lt; tokens[0] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordflow">if</span>(!c-&gt;second.process)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Don&#39;t know how to execute command &#39;&quot;</span> &lt;&lt; tokens[0] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      c-&gt;second.process(tokens);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <a class="code" href="a00025.xhtml#aa09c2ce6a3468458e8e949b61fb63350">_getPrompt</a>(prompt);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    free(line);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="a00025.xhtml#aa88324c7fb0c96ece91f5125f0cd071c">  148</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#aa88324c7fb0c96ece91f5125f0cd071c">CLIManager::_getTokens</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *command, <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span> *c = command;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span> *previousEnd = command;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordtype">bool</span> inQuote = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  tokens.clear();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">auto</span> index = 0;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keyword">auto</span> maxLength = strlen(command);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordflow">while</span>(*c != <span class="charliteral">&#39;\0&#39;</span> &amp;&amp; index &lt; maxLength)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    index++;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">if</span>(*c == <span class="charliteral">&#39; &#39;</span> || *c == <span class="charliteral">&#39;\t&#39;</span>)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordflow">if</span>(!inQuote)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">if</span>(previousEnd != c)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;          tokens.push_back(<a class="code" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>(previousEnd, (<span class="keywordtype">size_t</span>)(c - previousEnd)));</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;          previousEnd = c;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        previousEnd++;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      c++;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(isalnum(*c) || *c == <span class="charliteral">&#39;_&#39;</span> || *c == <span class="charliteral">&#39;.&#39;</span> || *c == <span class="charliteral">&#39;-&#39;</span> || *c == <span class="charliteral">&#39;:&#39;</span>)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      c++;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(*c == <span class="charliteral">&#39;&quot;&#39;</span>)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordflow">if</span>(previousEnd != c)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        tokens.push_back(<a class="code" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>(previousEnd, (<span class="keywordtype">size_t</span>)(c - previousEnd)));</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        previousEnd = c;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span>(inQuote)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        tokens.push_back(<a class="code" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>()); <span class="comment">// blank string for blank quote</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      c++;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      previousEnd = c;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      inQuote = !inQuote;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!inQuote) <span class="comment">// treat each non-alnum as a separate token</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      <span class="keywordflow">if</span>(previousEnd != c)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        tokens.push_back(<a class="code" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>(previousEnd, (<span class="keywordtype">size_t</span>)(c - previousEnd)));</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        previousEnd = c;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      tokens.push_back(<a class="code" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>(c, 1));</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      c++;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      previousEnd = c;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">else</span> <span class="comment">// inQuote and non-alphabetic character</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      c++;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keywordflow">if</span>(previousEnd != c)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    tokens.push_back(<a class="code" href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">String</a>(previousEnd, (<span class="keywordtype">size_t</span>)(c - previousEnd)));</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="a00025.xhtml#a204852ed7f5a5adf187670c2bb324032">  221</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a204852ed7f5a5adf187670c2bb324032">CLIManager::_helpHelp</a>()          { std::cout &lt;&lt; <span class="stringliteral">&quot;help [cmd]\t\t  Print this help and for any specified Voxel command &#39;cmd&#39;&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="a00025.xhtml#a365614bf2126c72f086eb77c935daf66">  222</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a365614bf2126c72f086eb77c935daf66">CLIManager::_exitHelp</a>()          { std::cout &lt;&lt; <span class="stringliteral">&quot;exit\t\t\t  Exit VoxelCLI&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="a00025.xhtml#a4f643a858cbe8866e2d8f7949f01c3cf">  223</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a4f643a858cbe8866e2d8f7949f01c3cf">CLIManager::_connectHelp</a>()       { std::cout &lt;&lt; <span class="stringliteral">&quot;connect &lt;dev&gt;\t\t  Connect to a specific device. &lt;dev&gt; needs to be device ID\n&quot;</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t  in the format INTERFACE::DEVICE::SERIAL. Use double-quotes for the ID if it contains spaces&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="a00025.xhtml#a2362fe206bde3cf40c9dbcac61284ebc">  225</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a2362fe206bde3cf40c9dbcac61284ebc">CLIManager::_listHelp</a>()          { std::cout &lt;&lt; <span class="stringliteral">&quot;list\t\t\t  Scan and list all valid Voxel connectable devices&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="a00025.xhtml#a3d764a6045563afe3acff232fa65c799">  226</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a3d764a6045563afe3acff232fa65c799">CLIManager::_currentHelp</a>()       { std::cout &lt;&lt; <span class="stringliteral">&quot;status\t\t\t  Show the current connected device ID if present&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="a00025.xhtml#a4e48054f70ec798328bc63f59b07a80f">  227</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a4e48054f70ec798328bc63f59b07a80f">CLIManager::_startHelp</a>()         { std::cout &lt;&lt; <span class="stringliteral">&quot;start\t\t\t  Start streaming and showing the current device&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="a00025.xhtml#ac1f4d4c27d312c47299be5ecbbc6cf46">  228</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ac1f4d4c27d312c47299be5ecbbc6cf46">CLIManager::_stopHelp</a>()          { std::cout &lt;&lt; <span class="stringliteral">&quot;stop\t\t\t  Stop streaming the current device&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="a00025.xhtml#a6b48ba78d603ecd626e4ba380434180d">  229</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a6b48ba78d603ecd626e4ba380434180d">CLIManager::_getRegisterHelp</a>()   { std::cout &lt;&lt; <span class="stringliteral">&quot;getr &lt;reg&gt;\t\t  Get register value at &lt;reg&gt;. Use &#39;0x&#39; prefix for hexadecimal&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="a00025.xhtml#a445265afaaab8c0bbe14919bd453a7d1">  230</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a445265afaaab8c0bbe14919bd453a7d1">CLIManager::_setRegisterHelp</a>()   { std::cout &lt;&lt; <span class="stringliteral">&quot;setr &lt;reg&gt; = &lt;value&gt;\t  Set register &lt;reg&gt; to &lt;value&gt;. Use &#39;0x&#39; prefix for hexadecimal&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="a00025.xhtml#ac0efff72240dc5e1ba5865e0dd59503d">  231</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ac0efff72240dc5e1ba5865e0dd59503d">CLIManager::_getParameterHelp</a>()  { std::cout &lt;&lt; <span class="stringliteral">&quot;get &lt;param&gt;\t\t  Get parameter value given by name &lt;param&gt;&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="a00025.xhtml#a88117e881984522565753456916c8641">  232</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a88117e881984522565753456916c8641">CLIManager::_capabilitiesHelp</a>()  { std::cout &lt;&lt; <span class="stringliteral">&quot;cap [&lt;param&gt;][*]\t  Get capabilities of the current depth camera.\n&quot;</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t  Optionally a parameter name can be given to list only that parameter details given by name &lt;param&gt;.\n&quot;</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t  A optional wildcard can be given to list all parameters beginning with name &lt;param&gt;&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="a00025.xhtml#aa6fff6df6924e6a0bb48f4625c8e02d4">  235</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#aa6fff6df6924e6a0bb48f4625c8e02d4">CLIManager::_filtersHelp</a>()       { std::cout &lt;&lt; <span class="stringliteral">&quot;filters\t\t\t  List available filters and currently in use filters&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="a00025.xhtml#a9a33cfbdd2339db0e49cd4b6d83665fe">  236</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a9a33cfbdd2339db0e49cd4b6d83665fe">CLIManager::_addFilterHelp</a>()     { std::cout &lt;&lt; <span class="stringliteral">&quot;addfilter &lt;frametype&gt; &lt;name&gt; &lt;pos&gt;\t  Add filter &lt;name&gt; for &lt;frametype&gt; at &lt;pos&gt;.\n&quot;</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t Set &lt;pos&gt; = -1 to add the end.\n&quot;</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t &lt;frametype&gt; can be raw/raw_processed/depth.&quot;</span>&lt;&lt; std::endl; }</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="a00025.xhtml#ac786de1837d63018ecc858da4406047a">  239</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ac786de1837d63018ecc858da4406047a">CLIManager::_removeFilterHelp</a>()  { std::cout &lt;&lt; <span class="stringliteral">&quot;removefilter &lt;frametype&gt; &lt;pos&gt;\t  Remove filter with id &lt;filterid&gt; for &lt;frametype&gt;.\n&quot;</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t &lt;frametype&gt; can be raw/raw_processed/depth.&quot;</span>&lt;&lt; std::endl; }</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="a00025.xhtml#a34678edee0e02b0e5a8581f506c26456">  241</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a34678edee0e02b0e5a8581f506c26456">CLIManager::_setFilterParamHelp</a>(){ std::cout &lt;&lt; <span class="stringliteral">&quot;setfilterparam &lt;frametype&gt; &lt;filterid&gt; &lt;param&gt; = &lt;value&gt;  Set parameter &lt;param&gt; to &lt;value&gt; for filter\n&quot;</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t with id &lt;filterid&gt; present for frame type &lt;frametype&gt;.\n&quot;</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                                  &lt;&lt; <span class="stringliteral">&quot;\t\t\t &lt;frametype&gt; can be raw/raw_processed/depth&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="a00025.xhtml#a6c5a5af89c97f34ae7b117720e1e5a12">  244</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a6c5a5af89c97f34ae7b117720e1e5a12">CLIManager::_setParameterHelp</a>()  { std::cout &lt;&lt; <span class="stringliteral">&quot;set &lt;param&gt; = &lt;value&gt;\t  Set parameter value given by name &lt;param&gt;. Use &#39;0x&#39; prefix for hexadecimal&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="a00025.xhtml#afece35872340107b25cae23070b0d888">  245</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#afece35872340107b25cae23070b0d888">CLIManager::_saveHelp</a>()          { std::cout &lt;&lt; <span class="stringliteral">&quot;save type count filename  Save current &#39;count&#39; number of frames.\n&quot;</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                                  &lt;&lt;  <span class="stringliteral">&quot;\t\t\t  &#39;type&#39; = raw/raw_processed/depth/pointcloud&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="a00025.xhtml#a1aa3152dc8f5d2419c413da18fa2613a">  247</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a1aa3152dc8f5d2419c413da18fa2613a">CLIManager::_disconnectHelp</a>()    { std::cout &lt;&lt; <span class="stringliteral">&quot;disconnect\t\t  Disconnect the currently connected depth camera&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="a00025.xhtml#a09d0a960edd0bc8bf47b3977241c572b">  248</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a09d0a960edd0bc8bf47b3977241c572b">CLIManager::_resetHelp</a>()         { std::cout &lt;&lt; <span class="stringliteral">&quot;reset\t\t\t  Reset and disconnect the currently connected depth camera&quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="a00025.xhtml#af3558521944c2644785f80a2343b5e36">  251</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#af3558521944c2644785f80a2343b5e36">CLIManager::_help</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &gt;= 2)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">auto</span> c = <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>.find(tokens[1]);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">if</span>(c == <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>.end())</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown command &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">if</span>(!c-&gt;second.help)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No help available about command &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    c-&gt;second.help();</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  }</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;c: <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>)</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      <span class="keywordflow">if</span>(c.second.help)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        c.second.help();</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="a00025.xhtml#adcbed0a1696b5ea512a115f14b4e1614">  282</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#adcbed0a1696b5ea512a115f14b4e1614">CLIManager::_exit</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;{</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <a class="code" href="a00025.xhtml#afe8bfa5620b711acaac153337e8eb661">_keepRunning</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  <a class="code" href="a00025.xhtml#af6aad1a812d394b8e2bcb79df60b3976">_disconnect</a>(tokens);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;}</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="a00025.xhtml#ab2500972b2b1d5be67c22657f8f00a01">  288</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ab2500972b2b1d5be67c22657f8f00a01">CLIManager::_list</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;{</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> <a class="code" href="a00379.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a> = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ad26fad5d70ee748d0492184da757d5be">scan</a>();</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keywordflow">if</span>(!devices.size())</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not find any valid devices.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;d: devices)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  {</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    std::cout &lt;&lt; d-&gt;id();</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">if</span>(d-&gt;description().size())</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot; -- &quot;</span> &lt;&lt; d-&gt;description();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="a00025.xhtml#ade2c73e82b7148ab8e998fb89fbfb858">  309</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ade2c73e82b7148ab8e998fb89fbfb858">CLIManager::_connect</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;{</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 2)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  {</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specify a device ID&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Searching for &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> <a class="code" href="a00379.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a> = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ad26fad5d70ee748d0492184da757d5be">scan</a>();</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;d: devices)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  {</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">if</span>(d-&gt;id() == tokens[1])</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;      <a class="code" href="a00113.xhtml">DepthCameraPtr</a> p = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ab685fb4639d124ee11aa7cd64ab02f00">connect</a>(d);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;      </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      <span class="keywordflow">if</span>(!p)</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Couldn&#39;t connect to specific device ID&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      <span class="keywordtype">bool</span> wasRunning = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a> &amp;&amp; <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;isRunning())</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <a class="code" href="a00025.xhtml#ab47e49d6a6a17a1315b0d4b650da87be">_stop</a>(tokens);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        wasRunning = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      {</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <a class="code" href="a00025.xhtml#af6aad1a812d394b8e2bcb79df60b3976">_disconnect</a>(tokens); <span class="comment">// disconnect currently connected depth camera</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a> = p;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      <span class="keywordflow">if</span>(wasRunning)</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <a class="code" href="a00025.xhtml#a980f41b859fe062ea0c132ce6031d0cf">_start</a>(tokens);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;      </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not find a valid device with specified ID&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="a00025.xhtml#aab5267bf1e3a161b078e4ae88abd273d">  357</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#aab5267bf1e3a161b078e4ae88abd273d">CLIManager::_current</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;{</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;  {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Current device ID = &quot;</span> &lt;&lt; <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;id() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a> &amp;&amp; <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;isRunning())</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;It is currently streaming. Use &#39;stop&#39; command to stop streaming&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;It is currently not streaming. Use &#39;start&#39; command to start streaming&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;No device is current in use by this CLI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="a00025.xhtml#a980f41b859fe062ea0c132ce6031d0cf">  372</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a980f41b859fe062ea0c132ce6031d0cf">CLIManager::_start</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No device connected. Kindly &#39;connect&#39; a device first&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>)</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a> = <a class="code" href="a00113.xhtml">Ptr&lt;PCLViewer&gt;</a>(<span class="keyword">new</span> <a class="code" href="a00105.xhtml">PCLViewer</a>());</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;  }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  </div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;isRunning())</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;  {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;setDepthCamera(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;start();</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;stop();</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;setDepthCamera(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;start();</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  }</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;}</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="a00025.xhtml#ab47e49d6a6a17a1315b0d4b650da87be">  398</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ab47e49d6a6a17a1315b0d4b650da87be">CLIManager::_stop</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;{</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>)</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  </div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;   <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;stop();</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="a00025.xhtml#a725a420cbbe28729002acc00737477c7">  406</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a725a420cbbe28729002acc00737477c7">CLIManager::_getParameter</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;{</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  {</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please connect to a depth camera first&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 2)</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;  {</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specific a parameter name&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  <span class="keyword">auto</span> sp = <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>.find(tokens[1]);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  </div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="comment">// Is a special parameter?</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="keywordflow">if</span>(sp != <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>.end() &amp;&amp; sp-&gt;second.process)</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  {</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    sp-&gt;second.process(tokens);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <a class="code" href="a00113.xhtml">ParameterPtr</a> param = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getParam(tokens[1]);</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  </div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  <span class="keywordflow">if</span>(!param)</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No valid parameter with name = &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  </div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  <a class="code" href="a00012.xhtml">BoolParameter</a> *boolParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00012.xhtml">BoolParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  <a class="code" href="a00088.xhtml">IntegerParameter</a> *intParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00088.xhtml">IntegerParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  <a class="code" href="a00117.xhtml">UnsignedIntegerParameter</a> *uintParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00117.xhtml">UnsignedIntegerParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  <a class="code" href="a00064.xhtml">FloatParameter</a> *floatParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00064.xhtml">FloatParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  <a class="code" href="a00053.xhtml">EnumParameter</a> *enumParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00053.xhtml">EnumParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;  </div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  <span class="keywordflow">if</span>(boolParam)</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  {</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordtype">bool</span> value;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordflow">if</span>(!boolParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    {</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to get parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    }</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    std::cout &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; (value?<span class="stringliteral">&quot;true&quot;</span>:<span class="stringliteral">&quot;false&quot;</span>);</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;meaning = boolParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>();</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    </div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keywordflow">if</span>(meaning.size() == 2 &amp;&amp; meaning[value].size())</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; meaning[value] &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;  }</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  </div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  <span class="keywordflow">if</span>(intParam)</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  {</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="keywordtype">int</span> value;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keywordflow">if</span>(!intParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    {</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to get parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    }</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    std::cout &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; std::dec &lt;&lt; value  &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; intParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    </div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;  </div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;  <span class="keywordflow">if</span>(uintParam)</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  {</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    uint value;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keywordflow">if</span>(!uintParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    {</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to get parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    std::cout &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; uintParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    </div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  }</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;  </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;  <span class="keywordflow">if</span>(floatParam)</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordtype">float</span> value;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keywordflow">if</span>(!floatParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to get parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    std::cout &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; floatParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    </div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;  }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  </div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="keywordflow">if</span>(enumParam)</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keywordtype">int</span> value;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">if</span>(!enumParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    {</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to get parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    }</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    std::cout &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot; = &quot;</span>  &lt;&lt; std::dec &lt;&lt; value;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    </div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;meaning = enumParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>();</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    </div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordflow">if</span>(meaning.size() &gt; value &amp;&amp; meaning[value].size())</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; meaning[value] &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    </div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;  </div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown type of parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;. Don&#39;t know how to handle&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;}</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div>
<div class="line"><a name="l00524"></a><span class="lineno"><a class="line" href="a00025.xhtml#ac54eb976e2f9a29c13e5e5f47d657f8b">  524</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ac54eb976e2f9a29c13e5e5f47d657f8b">CLIManager::_setParameter</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;{</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;  {</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please connect to a depth camera first&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  }</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;  </div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 4 || tokens[2] != <span class="stringliteral">&quot;=&quot;</span>)</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  {</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specify a parameter name and value to be set in the format given below.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    <a class="code" href="a00025.xhtml#a6c5a5af89c97f34ae7b117720e1e5a12">_setParameterHelp</a>();</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;  }</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;  </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  <span class="keyword">auto</span> sp = <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>.find(tokens[1]);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;  </div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  <span class="comment">// Is a special parameter?</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;  <span class="keywordflow">if</span>(sp != <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>.end() &amp;&amp; sp-&gt;second.process)</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;  {</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    sp-&gt;second.process(tokens);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  }</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  </div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <a class="code" href="a00113.xhtml">ParameterPtr</a> param = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getParam(tokens[1]);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  </div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;  <span class="keywordflow">if</span>(!param)</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;  {</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No valid parameter with name = &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;  </div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  <a class="code" href="a00012.xhtml">BoolParameter</a> *boolParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00012.xhtml">BoolParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;  <a class="code" href="a00088.xhtml">IntegerParameter</a> *intParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00088.xhtml">IntegerParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;  <a class="code" href="a00117.xhtml">UnsignedIntegerParameter</a> *uintParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00117.xhtml">UnsignedIntegerParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  <a class="code" href="a00064.xhtml">FloatParameter</a> *floatParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00064.xhtml">FloatParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;  <a class="code" href="a00053.xhtml">EnumParameter</a> *enumParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00053.xhtml">EnumParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  </div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  <span class="keywordflow">if</span>(boolParam)</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;  {</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <span class="keywordtype">bool</span> value;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    </div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <span class="keywordflow">if</span>(tokens[3] == <span class="stringliteral">&quot;true&quot;</span>)</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      value = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[3] == <span class="stringliteral">&quot;false&quot;</span>)</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;      value = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    {</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;      std::istringstream s(tokens[3]);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;      s.unsetf(std::ios_base::basefield);</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;      s &gt;&gt; value;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    }</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    </div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Setting parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; = &quot;</span> &lt;&lt; (value?<span class="stringliteral">&quot;true&quot;</span>:<span class="stringliteral">&quot;false&quot;</span>) &lt;&lt; <span class="stringliteral">&quot; ...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    </div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">if</span>(!boolParam-&gt;<a class="code" href="a00103.xhtml#a64240b607339f55c4fac973fba8c8934">set</a>(value))</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    {</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    </div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;  }</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;  </div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;  <span class="keywordflow">if</span>(intParam)</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  {</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="keywordtype">int</span> value;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    </div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    std::istringstream s(tokens[3]);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    s.unsetf(std::ios_base::basefield);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    s &gt;&gt; value;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    </div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Setting parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; = &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; intParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot; ...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    </div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="keywordflow">if</span>(!intParam-&gt;<a class="code" href="a00103.xhtml#a64240b607339f55c4fac973fba8c8934">set</a>(value))</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    {</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    }</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    </div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;  }</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;  </div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;  <span class="keywordflow">if</span>(uintParam)</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;  {</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    uint value;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    </div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    std::istringstream s(tokens[3]);</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    s.unsetf(std::ios_base::basefield);</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    s &gt;&gt; value;</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    </div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Setting parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; = &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; uintParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot; ...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    </div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keywordflow">if</span>(!uintParam-&gt;<a class="code" href="a00103.xhtml#a64240b607339f55c4fac973fba8c8934">set</a>(value))</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    {</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    }</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    </div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;  }</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;  </div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;  <span class="keywordflow">if</span>(floatParam)</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;  {</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <span class="keywordtype">float</span> value;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    </div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    std::istringstream s(tokens[3]);</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    s &gt;&gt; value;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    </div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Setting parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; = &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; floatParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot; ...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    </div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    <span class="keywordflow">if</span>(!floatParam-&gt;<a class="code" href="a00103.xhtml#a64240b607339f55c4fac973fba8c8934">set</a>(value))</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    {</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    }</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    </div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;  }</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;  </div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;  <span class="keywordflow">if</span>(enumParam)</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;  {</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keywordtype">int</span> value;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    </div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    std::istringstream s(tokens[3]);</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    s.unsetf(std::ios_base::basefield);</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    s &gt;&gt; value;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    </div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Setting parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; = &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; ...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    </div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <span class="keywordflow">if</span>(!enumParam-&gt;<a class="code" href="a00103.xhtml#a64240b607339f55c4fac973fba8c8934">set</a>(value))</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    {</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    }</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    </div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;  }</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;  </div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;  <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown type of parameter &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;. Don&#39;t know how to handle&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;}</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div>
<div class="line"><a name="l00671"></a><span class="lineno"><a class="line" href="a00025.xhtml#a233b04bcca8da70da2ee02b42120c465">  671</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a233b04bcca8da70da2ee02b42120c465">CLIManager::_getRegister</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;{</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;  {</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please connect to a depth camera first&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;  }</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;  </div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getProgrammer())</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;  {</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Current depth camera &quot;</span> &lt;&lt; <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt; id() &lt;&lt; <span class="stringliteral">&quot; does not have a register programmer.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;  }</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;  </div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 2)</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  {</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specify a register address to read from&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;  }</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;  </div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;  uint address, value;</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;  </div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;  std::istringstream s(tokens[1]);</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;  s.unsetf(std::ios_base::basefield);</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;  s &gt;&gt; address;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;  </div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getProgrammer()-&gt;readRegister(address, value))</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;  {</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not read register @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; std::endl;</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  }</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Register @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; <span class="stringliteral">&quot; = 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; value &lt;&lt; std::endl;</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;}</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div>
<div class="line"><a name="l00705"></a><span class="lineno"><a class="line" href="a00025.xhtml#aab8a56867b83a9948d04f20ead922565">  705</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#aab8a56867b83a9948d04f20ead922565">CLIManager::_setRegister</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;{</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;  {</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please connect to a depth camera first&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;  }</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;  </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getProgrammer())</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;  {</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Current depth camera &quot;</span> &lt;&lt; <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt; id() &lt;&lt; <span class="stringliteral">&quot; does not have a register programmer.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;  }</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;  </div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 4 || tokens[2] != <span class="stringliteral">&quot;=&quot;</span>)</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;  {</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specify a register address to write to and value to set in the following format&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <a class="code" href="a00025.xhtml#a445265afaaab8c0bbe14919bd453a7d1">_setRegisterHelp</a>();</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;  }</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;  </div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;  uint address, value;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;  </div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;  {</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    std::istringstream s(tokens[1]);</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    s.unsetf(std::ios_base::basefield);</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    s &gt;&gt; address;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;  }</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;  </div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;  {</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    std::istringstream s(tokens[3]);</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    s.unsetf(std::ios_base::basefield);</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    s &gt;&gt; value;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;  }</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;  </div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Setting register @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; std::hex &lt;&lt; <span class="stringliteral">&quot;0x&quot;</span> &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; ...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;  </div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getProgrammer()-&gt;writeRegister(address, value))</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;  {</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not write to register @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; std::endl;</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;  }</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set register @0x&quot;</span> &lt;&lt; std::hex &lt;&lt; address &lt;&lt; std::endl;</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;}</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div>
<div class="line"><a name="l00750"></a><span class="lineno"><a class="line" href="a00025.xhtml#afce3e4d2158d643e933f3b85f366a42a">  750</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#afce3e4d2158d643e933f3b85f366a42a">CLIManager::_capabilities</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;{</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;  {</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please connect to a depth camera first&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;  }</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  </div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 2)</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;  {</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    <span class="comment">// Show special parameters first</span></div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;sp: <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>)</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    {</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;      <span class="keywordflow">if</span>(sp.second.help)</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        sp.second.help();</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    }</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    </div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map&lt;String, ParameterPtr&gt;</a> &amp;parameters = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getParameters();</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p: parameters)</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    {</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;      <a class="code" href="a00025.xhtml#a6aa5863de7fb0da3578d60a46de46033">_showParameterInfo</a>(p.second);</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    }</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;  }</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 2)</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;  {</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    <span class="keyword">auto</span> sp = <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>.find(tokens[1]);</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    </div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    <span class="comment">// Is a special parameter?</span></div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    <span class="keywordflow">if</span>(sp != <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>.end() &amp;&amp; sp-&gt;second.help)</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    {</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;      sp-&gt;second.help();</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    }</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    </div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    <a class="code" href="a00025.xhtml#a6aa5863de7fb0da3578d60a46de46033">_showParameterInfo</a>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getParam(tokens[1]));</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;  }</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[2] == <span class="stringliteral">&quot;*&quot;</span>) <span class="comment">// wildcard match?</span></div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;  {</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;sp: <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>)</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    {</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;      <span class="keyword">const</span> <a class="code" href="a00130.xhtml">String</a> &amp;n = sp.first;</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;      <span class="keywordflow">if</span>(n.size() &lt; tokens[1].size()) <span class="comment">// parameter name smaller than search name?</span></div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;      </div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;      <span class="keywordflow">if</span>(n.compare(0, tokens[1].size(), tokens[1]) == 0) <span class="comment">// matches first part in the name?</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        sp.second.help();</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    }</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    </div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Map&lt;String, ParameterPtr&gt;</a> &amp;parameters = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getParameters();</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p: parameters)</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    {</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;      <span class="keyword">const</span> <a class="code" href="a00130.xhtml">String</a> &amp;n = p.second-&gt;name();</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;      </div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;      <span class="keywordflow">if</span>(n.size() &lt; tokens[1].size()) <span class="comment">// parameter name smaller than search name?</span></div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;      </div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      <span class="keywordflow">if</span>(n.compare(0, tokens[1].size(), tokens[1]) == 0) <span class="comment">// matches first part in the name?</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        <a class="code" href="a00025.xhtml#a6aa5863de7fb0da3578d60a46de46033">_showParameterInfo</a>(p.second);</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    }</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;  }</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;}</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div>
<div class="line"><a name="l00812"></a><span class="lineno"><a class="line" href="a00025.xhtml#a6aa5863de7fb0da3578d60a46de46033">  812</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a6aa5863de7fb0da3578d60a46de46033">CLIManager::_showParameterInfo</a>(<span class="keyword">const</span> <a class="code" href="a00113.xhtml">ParameterPtr</a> &amp;param)</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;{</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;  <span class="keywordflow">if</span>(!param)</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;  {</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Null parameter given for display&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;  }</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;  </div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;  std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;  </div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;  <a class="code" href="a00012.xhtml">BoolParameter</a> *boolParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00012.xhtml">BoolParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;  <a class="code" href="a00088.xhtml">IntegerParameter</a> *intParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00088.xhtml">IntegerParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;  <a class="code" href="a00117.xhtml">UnsignedIntegerParameter</a> *uintParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00117.xhtml">UnsignedIntegerParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;  <a class="code" href="a00064.xhtml">FloatParameter</a> *floatParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00064.xhtml">FloatParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;  <a class="code" href="a00053.xhtml">EnumParameter</a> *enumParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00053.xhtml">EnumParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;  </div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;  <a class="code" href="a00130.xhtml">String</a> n = param-&gt;name() + ((param-&gt;ioType() == <a class="code" href="a00101.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da35b42c0a9497587608f019b9e6ac7f23">Parameter::IO_READ_ONLY</a>)?<span class="stringliteral">&quot; [R]&quot;</span>:<span class="stringliteral">&quot; [RW]&quot;</span>);</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;  std::cout &lt;&lt; n;</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;  </div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;  <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = 0; i &lt; 4 - n.size()/8; i++)</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span>;</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;  </div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;  <span class="keywordtype">bool</span> descShown = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;  </div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;  <span class="keywordflow">if</span>(param-&gt;displayName().size())</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; param-&gt;displayName() &lt;&lt; <span class="stringliteral">&quot;). &quot;</span> &lt;&lt; param-&gt;description() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(param-&gt;description().size())</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    std::cout &lt;&lt; param-&gt;description() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    descShown = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;  </div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;  </div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;  <span class="keywordflow">if</span>(param-&gt;address())</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;  {</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    <span class="keywordflow">if</span>(descShown)</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\t&quot;</span>;</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Register: 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; param-&gt;address() &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> &lt;&lt; std::dec &lt;&lt; (uint)param-&gt;msb() &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; (uint)param-&gt;lsb() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;  }</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;  </div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;  <span class="keywordflow">if</span>(boolParam) <span class="comment">// FIXME: Handle strobe type later</span></div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;  {</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    <span class="keywordtype">bool</span> value;</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    <span class="keywordflow">if</span>(boolParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tCurrent value: &quot;</span> &lt;&lt; (value?<span class="stringliteral">&quot;true&quot;</span>:<span class="stringliteral">&quot;false&quot;</span>) &lt;&lt; std::endl;</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    <span class="keywordflow">if</span>(boolParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>().size())</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    {</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tPossible values:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;      </div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;      <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = 0; i &lt; boolParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>().size(); i++)</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;      {</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\t&quot;</span> &lt;&lt; ((i == 0)?<span class="stringliteral">&quot;false&quot;</span>:<span class="stringliteral">&quot;true&quot;</span>);</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;        </div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keywordflow">if</span>(boolParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>()[i].size())</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;          std::cout &lt;&lt; <span class="stringliteral">&quot; -&gt; &quot;</span> &lt;&lt; boolParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>()[i];</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;        </div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;        <span class="keywordflow">if</span>(boolParam-&gt;<a class="code" href="a00054.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">valueDescription</a>().size() &gt; i &amp;&amp;boolParam-&gt;<a class="code" href="a00054.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">valueDescription</a>()[i].size())</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        {</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;          std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; boolParam-&gt;<a class="code" href="a00054.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">valueDescription</a>()[i] &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;        }</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        </div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;        std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;      }</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    }</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    </div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;  }</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;  </div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;  <span class="keywordflow">if</span>(intParam)</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;  {</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <span class="keywordtype">int</span> value;</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    <span class="keywordflow">if</span>(intParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tCurrent value: &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; intParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    </div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tLimits: [&quot;</span> &lt;&lt; std::dec &lt;&lt; intParam-&gt;<a class="code" href="a00117.xhtml#a5748dd5aee4616996abbecd8b603af2c">lowerLimit</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; intParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; intParam-&gt;<a class="code" href="a00117.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">upperLimit</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; intParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    </div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;  }</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;  </div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;  <span class="keywordflow">if</span>(uintParam)</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;  {</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    uint value;</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    <span class="keywordflow">if</span>(uintParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tCurrent value: &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; uintParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    </div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tLimits: [&quot;</span> &lt;&lt; std::dec &lt;&lt; uintParam-&gt;<a class="code" href="a00117.xhtml#a5748dd5aee4616996abbecd8b603af2c">lowerLimit</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; uintParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; uintParam-&gt;<a class="code" href="a00117.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">upperLimit</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; uintParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;    </div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;  }</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;  </div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;  <span class="keywordflow">if</span>(floatParam)</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;  {</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;    <span class="keywordtype">float</span> value;</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    <span class="keywordflow">if</span>(floatParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tCurrent value: &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; floatParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    </div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tLimits: [&quot;</span> &lt;&lt; std::dec &lt;&lt; floatParam-&gt;<a class="code" href="a00117.xhtml#a5748dd5aee4616996abbecd8b603af2c">lowerLimit</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; floatParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; floatParam-&gt;<a class="code" href="a00117.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">upperLimit</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; floatParam-&gt;<a class="code" href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">unit</a>() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    </div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;  }</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;  </div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;  <span class="keywordflow">if</span>(enumParam)</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;  {</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    <span class="keywordtype">int</span> value;</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    <span class="keywordflow">if</span>(enumParam-&gt;<a class="code" href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">get</a>(value))</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tCurrent value: &quot;</span> &lt;&lt; std::dec &lt;&lt; value &lt;&lt; std::endl;</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    <span class="keywordflow">if</span>(enumParam-&gt;<a class="code" href="a00053.xhtml#ab74f397082b4134fe8e3338a72f91639">allowedValues</a>().size())</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    {</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\tPossible values:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;      </div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;      <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = 0; i &lt; enumParam-&gt;<a class="code" href="a00053.xhtml#ab74f397082b4134fe8e3338a72f91639">allowedValues</a>().size(); i++)</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;      {</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\t&quot;</span> &lt;&lt; std::dec &lt;&lt; enumParam-&gt;<a class="code" href="a00053.xhtml#ab74f397082b4134fe8e3338a72f91639">allowedValues</a>()[i];</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;        </div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;        <span class="keywordflow">if</span>(enumParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>().size() &gt; i &amp;&amp;enumParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>()[i].size())</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;          std::cout &lt;&lt; <span class="stringliteral">&quot; -&gt; &quot;</span> &lt;&lt; enumParam-&gt;<a class="code" href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">valueMeaning</a>()[i];</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;        </div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;        <span class="keywordflow">if</span>(enumParam-&gt;<a class="code" href="a00054.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">valueDescription</a>().size() &gt; i &amp;&amp;enumParam-&gt;<a class="code" href="a00054.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">valueDescription</a>()[i].size())</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;        {</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;          std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; enumParam-&gt;<a class="code" href="a00054.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">valueDescription</a>()[i] &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;        }</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        </div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;      }</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    }</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    </div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;  }</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;  </div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;}</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;</div>
<div class="line"><a name="l00942"></a><span class="lineno"><a class="line" href="a00025.xhtml#a82c90ebee06e7444323318eeaa41e18d">  942</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a82c90ebee06e7444323318eeaa41e18d">CLIManager::_completionCallback</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *buf, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;{</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;  <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> tokens;</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;  </div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;  <a class="code" href="a00025.xhtml#aa88324c7fb0c96ece91f5125f0cd071c">_getTokens</a>(buf, tokens);</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  </div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;  <span class="keywordflow">if</span>(tokens.size() == 0)</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;  </div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;  uint length = strlen(buf);</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;  </div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &gt; 1 || buf[length - 1] == <span class="charliteral">&#39; &#39;</span> || buf[length - 1] == <span class="charliteral">&#39;\t&#39;</span>) <span class="comment">// seems like one complete command has been given</span></div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;  {</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    <span class="keyword">auto</span> c = <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>.find(tokens[0]);</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    </div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;    <span class="keywordflow">if</span>(c == <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>.end())</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;    </div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;    <span class="keywordflow">if</span>(c-&gt;second.complete)</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;      c-&gt;second.complete(tokens, lc);</div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;  }</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;  <span class="keywordflow">else</span> <span class="comment">// still typing the main command itself...</span></div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;  {</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;c: <a class="code" href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">_commands</a>)</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    {</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;      <span class="keywordflow">if</span>(c.first.size() &gt;= tokens[0].size() &amp;&amp; c.first.compare(0, tokens[0].size(), tokens[0]) == 0)</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, c.first.c_str());</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    }</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;  }</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;}</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;</div>
<div class="line"><a name="l00973"></a><span class="lineno"><a class="line" href="a00025.xhtml#a1f200e3b644fd73fa27726be890ee72b">  973</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a1f200e3b644fd73fa27726be890ee72b">CLIManager::_connectCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;{</div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;  <span class="keywordflow">if</span>(tokens.size() == 2)</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;  {</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> <a class="code" href="a00379.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a> = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ad26fad5d70ee748d0492184da757d5be">scan</a>();</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    </div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;d: devices)</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    {</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;      <span class="keywordflow">if</span>(d-&gt;id().size() &gt;= tokens[1].size() &amp;&amp; d-&gt;id().compare(0, tokens[1].size(), tokens[1]) == 0)</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; \&quot;&quot;</span> + d-&gt;id() + <span class="stringliteral">&quot;\&quot;&quot;</span>).c_str());</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    }   </div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;  }</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 1)</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;  {</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;    <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;DevicePtr&gt;</a> <a class="code" href="a00379.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">devices</a> = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ad26fad5d70ee748d0492184da757d5be">scan</a>();</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    </div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;d: devices)</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    {</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;      <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; \&quot;&quot;</span> + d-&gt;id() + <span class="stringliteral">&quot;\&quot;&quot;</span>).c_str());</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    }</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;  }</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;}</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;</div>
<div class="line"><a name="l00996"></a><span class="lineno"><a class="line" href="a00025.xhtml#a4c601a4be22df4615d2f0c89b0ad135c">  996</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a4c601a4be22df4615d2f0c89b0ad135c">CLIManager::_paramCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;{</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;  </div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;  uint <a class="code" href="a00378.xhtml#ac2abb9d1e1e9e639f1bd83f5342d44c2">count</a> = 0;</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;  <span class="keywordflow">if</span>(tokens.size() == 2)</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;  {</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;sp: <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>)</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    {</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;      <span class="keywordflow">if</span>(sp.first.size() &gt;= tokens[1].size() &amp;&amp; sp.first.compare(0, tokens[1].size(), tokens[1]) == 0)</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;      {</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + sp.first).c_str());</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        count++;</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;      }</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;    }</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    </div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p: <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getParameters())</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    {</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;      <span class="keywordflow">if</span>(p.first.size() &gt;= tokens[1].size() &amp;&amp; p.first.compare(0, tokens[1].size(), tokens[1]) == 0)</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;      {</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + p.first).c_str());</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;        count++;</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        </div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        <span class="keywordflow">if</span>(count &gt;= 100) <span class="comment">// return a maximum of 100 matches</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;          <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;      }</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    }   </div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;  }</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 1)</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;  {</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;sp: <a class="code" href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">_specialParameters</a>)</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;    {</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;      <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + sp.first).c_str());</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;      count++;</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    }</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    </div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p: <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getParameters())</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    {</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;      <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + p.first).c_str());</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;      count++;</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;        </div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;      <span class="keywordflow">if</span>(count &gt;= 100) <span class="comment">// return a maximum of 100 matches</span></div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    }</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;  }</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;}</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div>
<div class="line"><a name="l01044"></a><span class="lineno"><a class="line" href="a00025.xhtml#a49a382b9e838e1f340a9e5715c761a46"> 1044</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a49a382b9e838e1f340a9e5715c761a46">CLIManager::_capabilitiesCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;{</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;  <a class="code" href="a00025.xhtml#a4c601a4be22df4615d2f0c89b0ad135c">_paramCompletion</a>(tokens, lc);</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;}</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;</div>
<div class="line"><a name="l01050"></a><span class="lineno"><a class="line" href="a00025.xhtml#a3967fe41da74162bc157ec9b0e79e63c"> 1050</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a3967fe41da74162bc157ec9b0e79e63c">CLIManager::_getParameterCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;{</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;  <a class="code" href="a00025.xhtml#a4c601a4be22df4615d2f0c89b0ad135c">_paramCompletion</a>(tokens, lc);</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;}</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;</div>
<div class="line"><a name="l01055"></a><span class="lineno"><a class="line" href="a00025.xhtml#aac230e2719608e39cb08e69df96a93e2"> 1055</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#aac230e2719608e39cb08e69df96a93e2">CLIManager::_setParameterCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;{</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;  <a class="code" href="a00025.xhtml#a4c601a4be22df4615d2f0c89b0ad135c">_paramCompletion</a>(tokens, lc);</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;}</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div>
<div class="line"><a name="l01060"></a><span class="lineno"><a class="line" href="a00025.xhtml#ac5b3590f9259f86ee3cab93e563d3987"> 1060</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ac5b3590f9259f86ee3cab93e563d3987">CLIManager::_save</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;{</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a> || !<a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;isRunning())</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;  {</div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Cannot save without an active depth camera. Please make sure a depth camera is connect and is streaming. See &#39;status&#39; to find this out.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;  }</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;  </div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 4)</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;  {</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Required parameters missing.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    <a class="code" href="a00025.xhtml#afece35872340107b25cae23070b0d888">_saveHelp</a>();</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;  }</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;  </div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;  <a class="code" href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">_count</a> = atoi(tokens[2].c_str());</div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;  </div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">_count</a> &gt; 100000 || <a class="code" href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">_count</a> &lt;= 0)</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;  {</div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Invalid count. Allowed values are 1 to 100000&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;  }</div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;  </div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;  <a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a> = 0;</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> = 0;</div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  </div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;  <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.open(tokens[3], std::ios::out | std::ios::binary);</div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;  </div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.good())</div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;  {</div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not open &#39;&quot;</span> &lt;&lt; tokens[3] &lt;&lt; <span class="stringliteral">&quot;&#39; for writing frames.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;  }</div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;  </div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;  <a class="code" href="a00025.xhtml#a5d14efc968f47fdde89407e5b38d412c">_saveFileName</a> = tokens[3];</div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;  </div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;  <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw&quot;</span>)</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;  {</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a> = <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;getGrabber()-&gt;registerCallback&lt;<a class="code" href="a00104.xhtml#a72eabe5e85c8c89091e23fbccea2929b">PCLGrabber::RawImageCallBack</a>&gt;([<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code" href="a00119.xhtml">Voxel::RawFrame</a> &amp;frame, <span class="keyword">const</span> <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">Voxel::DepthCamera::FrameType</a> type) -&gt; <span class="keywordtype">void</span> {</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;      <span class="keywordflow">if</span>(type != <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">DepthCamera::FRAME_RAW_FRAME_UNPROCESSED</a>)</div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;      </div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;      <span class="keyword">const</span> <a class="code" href="a00118.xhtml">RawDataFrame</a> *d = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00118.xhtml">RawDataFrame</a> *<span class="keyword">&gt;</span>(&amp;frame);</div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;      </div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;      <span class="keywordflow">if</span>(!d)</div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;      {</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;        <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Null frame captured? or not of type RawDataFrame&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;      }</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;      </div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Capture frame &quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;      </div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> != 0)</div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; 1E6/(d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a> - <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a>) &lt;&lt; <span class="stringliteral">&quot; fps)&quot;</span>;</div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;      </div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;      std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;      </div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;      <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> = d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;      </div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>));</div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>));</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;      </div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00118.xhtml#a138837f48f2842394f7293b6b256e491">data</a>.data(), d-&gt;<a class="code" href="a00118.xhtml#a138837f48f2842394f7293b6b256e491">data</a>.size());</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;      </div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;      <a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a>++;</div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;      </div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a> &gt;= <a class="code" href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">_count</a>)</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;      {</div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Saved to file &#39;&quot;</span> &lt;&lt; <a class="code" href="a00025.xhtml#a5d14efc968f47fdde89407e5b38d412c">_saveFileName</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.close();</div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;        <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a>.disconnect();</div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;      }</div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    });</div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;  } </div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw_processed&quot;</span>)</div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;  {</div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a> = <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;getGrabber()-&gt;registerCallback&lt;<a class="code" href="a00104.xhtml#a72eabe5e85c8c89091e23fbccea2929b">PCLGrabber::RawImageCallBack</a>&gt;([<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code" href="a00119.xhtml">Voxel::RawFrame</a> &amp;frame, <span class="keyword">const</span> <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">Voxel::DepthCamera::FrameType</a> type) {</div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;      <span class="keywordflow">if</span>(type != <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">DepthCamera::FRAME_RAW_FRAME_PROCESSED</a>)</div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;      </div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;      <span class="keyword">const</span> <a class="code" href="a00160.xhtml">ToFRawFrame</a> *d = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00160.xhtml">ToFRawFrame</a> *<span class="keyword">&gt;</span>(&amp;frame);</div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;</div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;      <span class="keywordflow">if</span>(!d)</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;      {</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;        <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Null frame captured? or not of type ToFRawFrame&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;      }</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;</div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Capture frame &quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> != 0)</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;      {</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; 1E6 / (d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a> - <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a>) &lt;&lt; <span class="stringliteral">&quot; fps)&quot;</span>;</div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;      }</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;</div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;      std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;</div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;      <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> = d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;      </div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>));</div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>));</div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;</div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;      <span class="keywordflow">if</span>(d-&gt;<a class="code" href="a00160.xhtml#ab66f7bd205a6a5c16b0a47aedc00a7b4">phase</a>())</div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;      {</div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00160.xhtml#ab66f7bd205a6a5c16b0a47aedc00a7b4">phase</a>(), d-&gt;<a class="code" href="a00160.xhtml#af3fb7938e3e76c26299efe07f69d406f">phaseWordWidth</a>()*d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> * d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;      }</div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;</div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;      <span class="keywordflow">if</span>(d-&gt;<a class="code" href="a00160.xhtml#a38cdfc04eef41661cdcaec4c0870e687">amplitude</a>())</div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;      {</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00160.xhtml#a38cdfc04eef41661cdcaec4c0870e687">amplitude</a>(), d-&gt;<a class="code" href="a00160.xhtml#af85f22109d62a47ec5843437558fa90c">amplitudeWordWidth</a>()*d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> * d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;      }</div>
<div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;</div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;      <span class="keywordflow">if</span>(d-&gt;<a class="code" href="a00160.xhtml#a62d21aa88579379c97a51b40ff370f05">ambient</a>())</div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;      {</div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00160.xhtml#a62d21aa88579379c97a51b40ff370f05">ambient</a>(), d-&gt;<a class="code" href="a00160.xhtml#a71129221a2aadc0e1ca8551ac11ef5cd">ambientWordWidth</a>()*d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> * d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;      }</div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;</div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;      <span class="keywordflow">if</span>(d-&gt;<a class="code" href="a00160.xhtml#abc808bba1a6289d3e95e790104d6c80f">flags</a>())</div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;      {</div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00160.xhtml#abc808bba1a6289d3e95e790104d6c80f">flags</a>(), d-&gt;<a class="code" href="a00160.xhtml#a7f51f217b13dddc61ceec2270dbfcf2f">flagsWordWidth</a>()*d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> * d-&gt;<a class="code" href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">size</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);      </div>
<div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;      }</div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;      </div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;      <a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a>++;</div>
<div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;      </div>
<div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a> &gt;= <a class="code" href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">_count</a>)</div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;      {</div>
<div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Saved to file &#39;&quot;</span> &lt;&lt; <a class="code" href="a00025.xhtml#a5d14efc968f47fdde89407e5b38d412c">_saveFileName</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.close();</div>
<div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;        <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a>.disconnect();</div>
<div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;      }</div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    });</div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;  } </div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;depth&quot;</span>)</div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;  {</div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a> = <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;getGrabber()-&gt;registerCallback&lt;<a class="code" href="a00104.xhtml#aedbf1780d431db5cc50874213e602223">PCLGrabber::DepthImageCallBack</a>&gt;([<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code" href="a00040.xhtml">Voxel::DepthFrame</a> &amp;frame) {</div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;      <span class="keyword">const</span> <a class="code" href="a00040.xhtml">DepthFrame</a> *d = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00040.xhtml">DepthFrame</a> *<span class="keyword">&gt;</span>(&amp;frame);</div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;      </div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;      <span class="keywordflow">if</span>(!d)</div>
<div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;      {</div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;        <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Null frame captured? or not of type DepthFrame&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;      }</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;      </div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Capture frame &quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;      </div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> != 0)</div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; 1E6/(d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a> - <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a>) &lt;&lt; <span class="stringliteral">&quot; fps)&quot;</span>;</div>
<div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;      </div>
<div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;      std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;      </div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;      <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> = d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;      </div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>));</div>
<div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>));</div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;      </div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00040.xhtml#ad357f39b645c3febf9a3710741cdabf5">depth</a>.data(), <span class="keyword">sizeof</span>(<a class="code" href="a00396.xhtml">float</a>)*d-&gt;<a class="code" href="a00040.xhtml#a3305137afc2f3ecde548223e71a86135">size</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a>*d-&gt;<a class="code" href="a00040.xhtml#a3305137afc2f3ecde548223e71a86135">size</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00040.xhtml#a6d99c64a5daddfe88b5b561e16a21037">amplitude</a>.data(), <span class="keyword">sizeof</span>(<a class="code" href="a00396.xhtml">float</a>)*d-&gt;<a class="code" href="a00040.xhtml#a3305137afc2f3ecde548223e71a86135">size</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a>*d-&gt;<a class="code" href="a00040.xhtml#a3305137afc2f3ecde548223e71a86135">size</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a>);</div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    </div>
<div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;      <a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a>++;</div>
<div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;      </div>
<div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a> &gt;= <a class="code" href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">_count</a>)</div>
<div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;      {</div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Saved to file &#39;&quot;</span> &lt;&lt; <a class="code" href="a00025.xhtml#a5d14efc968f47fdde89407e5b38d412c">_saveFileName</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.close();</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;        <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a>.disconnect();</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;      }</div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    });</div>
<div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;  } </div>
<div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;pointcloud&quot;</span>)</div>
<div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;  {</div>
<div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;    <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a> = <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;getGrabber()-&gt;registerCallback&lt;<a class="code" href="a00104.xhtml#af4b491184eda441c287fc126a7453630">PCLGrabber::PointCloudFrameCallBack</a>&gt;([<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code" href="a00109.xhtml">Voxel::PointCloudFrame</a> &amp;frame) {</div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;      <span class="keyword">const</span> <a class="code" href="a00111.xhtml">XYZIPointCloudFrame</a> *d = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00111.xhtml">XYZIPointCloudFrame</a> *<span class="keyword">&gt;</span>(&amp;frame);</div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;      </div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;      <span class="keywordflow">if</span>(!d)</div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;      {</div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;        <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Null frame captured? or not of type XYZIPointCloudFrame&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;      }</div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;      </div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Capture frame &quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;      </div>
<div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> != 0)</div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; 1E6/(d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a> - <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a>) &lt;&lt; <span class="stringliteral">&quot; fps)&quot;</span>;</div>
<div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;      </div>
<div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;      std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;      </div>
<div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;      <a class="code" href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">_lastTimeStamp</a> = d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>;</div>
<div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;      </div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">id</a>));</div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)&amp;d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>, <span class="keyword">sizeof</span>(d-&gt;<a class="code" href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">timestamp</a>));</div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;      </div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;      <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.write((<span class="keywordtype">char</span> *)d-&gt;<a class="code" href="a00111.xhtml#a84e5c725fadb14f7c7f86db89d3e8e0f">points</a>.data(), <span class="keyword">sizeof</span>(<a class="code" href="a00090.xhtml">IntensityPoint</a>)*d-&gt;<a class="code" href="a00111.xhtml#a84e5c725fadb14f7c7f86db89d3e8e0f">points</a>.size());</div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;          </div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;      <a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a>++;</div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;      </div>
<div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">_currentCount</a> &gt;= <a class="code" href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">_count</a>)</div>
<div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;      {</div>
<div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Saved to file &#39;&quot;</span> &lt;&lt; <a class="code" href="a00025.xhtml#a5d14efc968f47fdde89407e5b38d412c">_saveFileName</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;        <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.close();</div>
<div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;        <a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a>.disconnect();</div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;      }</div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    });</div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;  }</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;  {</div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown frame type &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;  }</div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;  </div>
<div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">_saveCallbackConnection</a>.connected())</div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;  {</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not connect to save the frames.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;    <a class="code" href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">_saveFile</a>.close();</div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;  }</div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;}</div>
<div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;</div>
<div class="line"><a name="l01276"></a><span class="lineno"><a class="line" href="a00025.xhtml#a3f2531910575641c586e936fd165b9a1"> 1276</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a3f2531910575641c586e936fd165b9a1">CLIManager::_saveCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;{</div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;  </div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;  <span class="keywordflow">if</span>(tokens.size() == 1)</div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;  {</div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw&quot;</span>).c_str());</div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw_processed&quot;</span>).c_str());</div>
<div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; depth&quot;</span>).c_str());</div>
<div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; pointcloud&quot;</span>).c_str());</div>
<div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;  }</div>
<div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 2)</div>
<div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;  {</div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;    <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> types = {<span class="stringliteral">&quot;raw&quot;</span>, <span class="stringliteral">&quot;raw_processed&quot;</span>, <span class="stringliteral">&quot;depth&quot;</span>, <span class="stringliteral">&quot;pointcloud&quot;</span>};</div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;    </div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;t: types)</div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;    {</div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;      <span class="keywordflow">if</span>(t.size() &lt; tokens[1].size())</div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;      </div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;      <span class="keywordflow">if</span>(t.compare(0, tokens[1].size(), tokens[1]) == 0)</div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + t).c_str());</div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;    }</div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;  }</div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;}</div>
<div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;</div>
<div class="line"><a name="l01303"></a><span class="lineno"><a class="line" href="a00025.xhtml#af6aad1a812d394b8e2bcb79df60b3976"> 1303</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#af6aad1a812d394b8e2bcb79df60b3976">CLIManager::_disconnect</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;{</div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;  {</div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No depth camera is current connected&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;  }</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;  </div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;  <a class="code" href="a00025.xhtml#ab47e49d6a6a17a1315b0d4b650da87be">_stop</a>(tokens);</div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;  <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;removeDepthCamera();</div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;  <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#aa4383a5805d1bfcb6ee71458f6e26bcc">disconnect</a>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>);</div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;  <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a> = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;}</div>
<div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;</div>
<div class="line"><a name="l01317"></a><span class="lineno"><a class="line" href="a00025.xhtml#a875de7a43e41153295ec1414e70eb1d8"> 1317</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a875de7a43e41153295ec1414e70eb1d8">CLIManager::_roiCapabilities</a>()</div>
<div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;{</div>
<div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;  {</div>
<div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No depth camera currently connected.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;  }</div>
<div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;  </div>
<div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;roi [RW]\t\t\t&quot;</span>;</div>
<div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;  </div>
<div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;  <a class="code" href="a00390.xhtml#ga74d91a42f62a7b69d841b6cfeabeb415">breakLines</a>(<span class="stringliteral">&quot;To set, use &#39;set roi = x,y,width,height&#39;.&quot;</span>, std::cout, 60, <span class="stringliteral">&quot;\t\t\t\t&quot;</span>);</div>
<div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;  </div>
<div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;  <a class="code" href="a00130.xhtml">String</a> message;</div>
<div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;allowedROI(message))</div>
<div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    <a class="code" href="a00390.xhtml#ga74d91a42f62a7b69d841b6cfeabeb415">breakLines</a>(message, std::cout, 60, <span class="stringliteral">&quot;\t\t\t\t&quot;</span>);</div>
<div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;  </div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;  <a class="code" href="a00120.xhtml">RegionOfInterest</a> roi;</div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;  </div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getROI(roi))</div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;  {</div>
<div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Current value: [&quot;</span> &lt;&lt; std::dec &lt;&lt; roi.<a class="code" href="a00120.xhtml#a53d8b28fa3a82ce5a50382c0524b8ed0">x</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; roi.<a class="code" href="a00120.xhtml#a603ed39327ec182e0214f2b7ef58cd99">y</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; roi.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; roi.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;  }</div>
<div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;}</div>
<div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;</div>
<div class="line"><a name="l01341"></a><span class="lineno"><a class="line" href="a00025.xhtml#ab476a2b4dee8c003ee19f984005afd90"> 1341</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ab476a2b4dee8c003ee19f984005afd90">CLIManager::_roi</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;{</div>
<div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 2)</div>
<div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;  {</div>
<div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specify roi parameter&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;  }</div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;  </div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;  <span class="comment">// get roi</span></div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;  <span class="keywordflow">if</span>(tokens[0] == <span class="stringliteral">&quot;get&quot;</span>)</div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;  {</div>
<div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;    <a class="code" href="a00120.xhtml">RegionOfInterest</a> roi;</div>
<div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;    </div>
<div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getROI(roi))</div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;    {</div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;ROI = [&quot;</span> &lt;&lt; std::dec &lt;&lt; roi.<a class="code" href="a00120.xhtml#a53d8b28fa3a82ce5a50382c0524b8ed0">x</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; roi.<a class="code" href="a00120.xhtml#a603ed39327ec182e0214f2b7ef58cd99">y</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; roi.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; roi.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    }</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;    {</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not get ROI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;    }</div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;  }</div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[0] == <span class="stringliteral">&quot;set&quot;</span>)</div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;  {</div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;    <span class="keywordflow">if</span>(tokens.size() &lt; 10 || tokens[2] != <span class="stringliteral">&quot;=&quot;</span>)</div>
<div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    {</div>
<div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Invalid syntax used for setting ROI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;      <a class="code" href="a00025.xhtml#a875de7a43e41153295ec1414e70eb1d8">_roiCapabilities</a>();</div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;    }</div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;    </div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;    <a class="code" href="a00120.xhtml">RegionOfInterest</a> roi;</div>
<div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;    </div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    </div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;    roi.<a class="code" href="a00120.xhtml#a53d8b28fa3a82ce5a50382c0524b8ed0">x</a> = strtol(tokens[3].c_str(), &amp;endptr, 10);</div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    roi.<a class="code" href="a00120.xhtml#a603ed39327ec182e0214f2b7ef58cd99">y</a> = strtol(tokens[5].c_str(), &amp;endptr, 10);</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;    roi.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> = strtol(tokens[7].c_str(), &amp;endptr, 10);</div>
<div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;    roi.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> = strtol(tokens[9].c_str(), &amp;endptr, 10);</div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;    </div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;setROI(roi))</div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;    {</div>
<div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not set ROI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;    }</div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set ROI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;  }</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;  {</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown command &#39;&quot;</span> &lt;&lt; tokens[0] &lt;&lt; <span class="stringliteral">&quot;&#39; used for ROI&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;  }</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;}</div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;</div>
<div class="line"><a name="l01394"></a><span class="lineno"><a class="line" href="a00025.xhtml#a2672bb26d3423d3cc587f7871a4741cd"> 1394</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a2672bb26d3423d3cc587f7871a4741cd">CLIManager::_videoModeCapabilities</a>()</div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;{</div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;  {</div>
<div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No depth camera currently connected.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;  }</div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;  </div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;video_mode [RW]\t\t\t&quot;</span>;</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;  </div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;  <a class="code" href="a00390.xhtml#ga74d91a42f62a7b69d841b6cfeabeb415">breakLines</a>(<span class="stringliteral">&quot;To set, use &#39;set video_mode = widthXheight@fps&#39;.&quot;</span>, std::cout, 60, <span class="stringliteral">&quot;\t\t\t\t&quot;</span>);</div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;  </div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;  <a class="code" href="a00181.xhtml">VideoMode</a> m;</div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;  </div>
<div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFrameSize(m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>) &amp;&amp; <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFrameRate(m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>))</div>
<div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;  {</div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Current video mode:&quot;</span> &lt;&lt; std::dec &lt;&lt; m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> &lt;&lt; <span class="stringliteral">&quot;X&quot;</span> &lt;&lt; m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; m.<a class="code" href="a00181.xhtml#a99b3955c15011399b66cbf609afdbacb">getFrameRate</a>() &lt;&lt; <span class="stringliteral">&quot;\n\t\t\t\t&quot;</span>;</div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;  }</div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;  </div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;  <a class="code" href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;SupportedVideoMode&gt;</a> videoModes;</div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;  <a class="code" href="a00390.xhtml#ga69863b6d047cf3817af4c0bbbc466339">Set&lt;uint&gt;</a> pixelCounts;</div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;  </div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Supported Video Modes: (FPS given below is maximum allowed value) \n\t\t\t\t&quot;</span>;</div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;  </div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getSupportedVideoModes(videoModes))</div>
<div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;  {</div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;v: videoModes)</div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;    {</div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;      std::cout &lt;&lt; std::dec &lt;&lt; v.frameSize.width &lt;&lt; <span class="stringliteral">&quot;X&quot;</span> &lt;&lt; v.frameSize.height &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; v.getFrameRate() &lt;&lt; <span class="stringliteral">&quot;fps for &quot;</span> &lt;&lt; (uint)v.bytesPerPixel*8 &lt;&lt; <span class="stringliteral">&quot;bpp&quot;</span> </div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;\n\t\t\t\t&quot;</span>;</div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;                </div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;      pixelCounts.insert(v.frameSize.width*v.frameSize.height);</div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;    }</div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;    </div>
<div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;    <span class="keywordflow">if</span>(pixelCounts.size())</div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Supported pixel counts: \n&quot;</span>;</div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p: pixelCounts)</div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;    {</div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;\t\t\t\t&quot;</span> &lt;&lt; p &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;    }</div>
<div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;  }</div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;}</div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;</div>
<div class="line"><a name="l01437"></a><span class="lineno"><a class="line" href="a00025.xhtml#a1caa7d89cf577f4728a114e78d1a5ba3"> 1437</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a1caa7d89cf577f4728a114e78d1a5ba3">CLIManager::_videoMode</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;{</div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 2)</div>
<div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;  {</div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specify roi parameter&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;  }</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;  </div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;  <span class="comment">// get roi</span></div>
<div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;  <span class="keywordflow">if</span>(tokens[0] == <span class="stringliteral">&quot;get&quot;</span>)</div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;  {</div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;    <a class="code" href="a00181.xhtml">VideoMode</a> m;</div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    </div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFrameSize(m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>) || !<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFrameRate(m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>))</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;    {</div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not get current video mode&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;    }</div>
<div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;video_mode = &quot;</span> &lt;&lt; std::dec &lt;&lt; m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> &lt;&lt; <span class="stringliteral">&quot;X&quot;</span> &lt;&lt; m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; m.<a class="code" href="a00181.xhtml#a99b3955c15011399b66cbf609afdbacb">getFrameRate</a>() &lt;&lt; <span class="stringliteral">&quot;fps&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;  }</div>
<div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[0] == <span class="stringliteral">&quot;set&quot;</span>)</div>
<div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;  {</div>
<div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;    <span class="keywordflow">if</span>(tokens.size() &lt; 6 || tokens[2] != <span class="stringliteral">&quot;=&quot;</span>)</div>
<div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;    {</div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Invalid syntax used for setting video_mode&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;      <a class="code" href="a00025.xhtml#a2672bb26d3423d3cc587f7871a4741cd">_videoModeCapabilities</a>();</div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;    }</div>
<div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;    </div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;    <a class="code" href="a00181.xhtml">VideoMode</a> m;</div>
<div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;    </div>
<div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;    <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;    </div>
<div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;    <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> splits;</div>
<div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;    </div>
<div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;    <a class="code" href="a00390.xhtml#gadd67e5b1a02a8a07764793e4598922d4">split</a>(tokens[3], <span class="charliteral">&#39;X&#39;</span>, splits);</div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;    </div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;    <span class="keywordflow">if</span>(splits.size() == 1)</div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;      <a class="code" href="a00390.xhtml#gadd67e5b1a02a8a07764793e4598922d4">split</a>(tokens[3], <span class="charliteral">&#39;x&#39;</span>, splits);</div>
<div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;    </div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;    <span class="keywordflow">if</span>(splits.size() != 2)</div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;    {</div>
<div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Please specify frame size as widthXheight&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;      <a class="code" href="a00025.xhtml#a2672bb26d3423d3cc587f7871a4741cd">_videoModeCapabilities</a>();</div>
<div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;    }</div>
<div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;    </div>
<div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;    m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> = strtol(splits[0].c_str(), &amp;endptr, 10);</div>
<div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;    m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> = strtol(splits[1].c_str(), &amp;endptr, 10);</div>
<div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;    </div>
<div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;    <span class="keywordtype">float</span> frameRate = strtof(tokens[5].c_str(), &amp;endptr);</div>
<div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;    </div>
<div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;    m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#a0423f6c7e1e11a552cb08147bfd93cd0">numerator</a> = frameRate*10000;</div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;    m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#abce5ac3ab79442b76758484110258e82">denominator</a> = 10000;</div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;    </div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;    uint g = <a class="code" href="a00390.xhtml#ga148a066c676b3c831918800b78a2f056">gcd</a>(m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#a0423f6c7e1e11a552cb08147bfd93cd0">numerator</a>, m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#abce5ac3ab79442b76758484110258e82">denominator</a>);</div>
<div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;    m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#a0423f6c7e1e11a552cb08147bfd93cd0">numerator</a> = m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#a0423f6c7e1e11a552cb08147bfd93cd0">numerator</a>/g;</div>
<div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;    m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#abce5ac3ab79442b76758484110258e82">denominator</a> = m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>.<a class="code" href="a00069.xhtml#abce5ac3ab79442b76758484110258e82">denominator</a>/g;</div>
<div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;    </div>
<div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Setting video_mode = &quot;</span> &lt;&lt; std::dec &lt;&lt; m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">width</a> &lt;&lt; <span class="stringliteral">&quot;X&quot;</span> &lt;&lt; m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>.<a class="code" href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">height</a> &lt;&lt; <span class="stringliteral">&quot;@&quot;</span> &lt;&lt; m.<a class="code" href="a00181.xhtml#a99b3955c15011399b66cbf609afdbacb">getFrameRate</a>() &lt;&lt; <span class="stringliteral">&quot;fps ...&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;    </div>
<div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;setFrameSize(m.<a class="code" href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">frameSize</a>) || !<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;setFrameRate(m.<a class="code" href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">frameRate</a>))</div>
<div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;    {</div>
<div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not set video_mode&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;    }</div>
<div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully set video_mode&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;  }</div>
<div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;  {</div>
<div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown command &#39;&quot;</span> &lt;&lt; tokens[0] &lt;&lt; <span class="stringliteral">&quot;&#39; used for video_mode&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;  }</div>
<div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;}</div>
<div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;</div>
<div class="line"><a name="l01511"></a><span class="lineno"><a class="line" href="a00025.xhtml#a81e1d4106d753f79a9077df245ece3b7"> 1511</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a81e1d4106d753f79a9077df245ece3b7">CLIManager::_reset</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;{</div>
<div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;  {</div>
<div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No depth camera is current connected&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;  }</div>
<div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;  </div>
<div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;  <a class="code" href="a00025.xhtml#ab47e49d6a6a17a1315b0d4b650da87be">_stop</a>(tokens);</div>
<div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;  </div>
<div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;  <a class="code" href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">_viewer</a>-&gt;removeDepthCamera();</div>
<div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;  <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#aa4383a5805d1bfcb6ee71458f6e26bcc">disconnect</a>(<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;  <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a> = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;}</div>
<div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;</div>
<div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l01527"></a><span class="lineno"><a class="line" href="a00025.xhtml#a7405f3b9c1589d2f343e93f13eadec3e"> 1527</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a7405f3b9c1589d2f343e93f13eadec3e">CLIManager::_showFilterSet</a>(<span class="keyword">const</span> <a class="code" href="a00062.xhtml">FilterSet&lt;T&gt;</a> &amp;filterSet)</div>
<div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;{</div>
<div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;  <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = filterSet.<a class="code" href="a00062.xhtml#a4b809b1a18e404d041a3456f1df48e74">begin</a>(); i != filterSet.<a class="code" href="a00062.xhtml#a40382f422b79fa91d2000c2b81e8c5e6">end</a>(); i++)</div>
<div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;  {</div>
<div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;    <span class="keyword">const</span> <a class="code" href="a00113.xhtml">FilterPtr</a> &amp;p = *i;</div>
<div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;    std::cout &lt;&lt; i.index &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; p-&gt;name();</div>
<div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;    </div>
<div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;    <span class="keyword">auto</span> &amp;param = p-&gt;parameters();</div>
<div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;    </div>
<div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;    <span class="keywordflow">if</span>(param.size())</div>
<div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;    {</div>
<div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;      <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;pr: param)</div>
<div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;      {</div>
<div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; pr.first &lt;&lt; <span class="stringliteral">&quot; = &quot;</span>;</div>
<div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;        </div>
<div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;        <a class="code" href="a00011.xhtml">BoolFilterParameter</a> *boolParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00011.xhtml">BoolFilterParameter</a> *<span class="keyword">&gt;</span>(pr.second.get());</div>
<div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;        <a class="code" href="a00059.xhtml">EnumFilterParameter</a> *enumParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00059.xhtml">EnumFilterParameter</a> *<span class="keyword">&gt;</span>(pr.second.get());</div>
<div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;        <a class="code" href="a00060.xhtml">SignedFilterParameter</a> *signedParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00060.xhtml">SignedFilterParameter</a> *<span class="keyword">&gt;</span>(pr.second.get());</div>
<div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;        <a class="code" href="a00060.xhtml">UnsignedFilterParameter</a> *unsignedParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00060.xhtml">UnsignedFilterParameter</a> *<span class="keyword">&gt;</span>(pr.second.get());</div>
<div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;        <a class="code" href="a00060.xhtml">FloatFilterParameter</a> *floatParam = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="a00060.xhtml">FloatFilterParameter</a> *<span class="keyword">&gt;</span>(pr.second.get());</div>
<div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;        </div>
<div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;        <span class="keywordflow">if</span>(boolParam)</div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;        {</div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;          <span class="keywordtype">bool</span> v;</div>
<div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;          boolParam-&gt;<a class="code" href="a00061.xhtml#a2315d477a0ade3bcdbe969fcea3c9eb8">get</a>(v);</div>
<div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;          std::cout &lt;&lt; (v?<span class="stringliteral">&quot;true&quot;</span>:<span class="stringliteral">&quot;false&quot;</span>);</div>
<div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;          </div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;          <span class="keyword">const</span> <a class="code" href="a00130.xhtml">String</a> &amp;m = boolParam-&gt;<a class="code" href="a00011.xhtml#a4a76ae1c94d0f810a1478e7ca730b02c">valueMeaning</a>()[v];</div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;          </div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;          <span class="keywordflow">if</span>(m.size())</div>
<div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;            std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; m &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;        }</div>
<div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;        </div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;        <span class="keywordflow">if</span>(enumParam)</div>
<div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;        {</div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;          <span class="keywordtype">int</span> v;</div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;          enumParam-&gt;<a class="code" href="a00061.xhtml#a2315d477a0ade3bcdbe969fcea3c9eb8">get</a>(v);</div>
<div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;          </div>
<div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;          std::cout &lt;&lt; v;</div>
<div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;          </div>
<div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;          <span class="keyword">const</span> <a class="code" href="a00130.xhtml">String</a> &amp;m = boolParam-&gt;<a class="code" href="a00011.xhtml#a4a76ae1c94d0f810a1478e7ca730b02c">valueMeaning</a>()[v];</div>
<div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;          </div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;          <span class="keywordflow">if</span>(m.size())</div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;            std::cout &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; m &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;        }</div>
<div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;        </div>
<div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;        <span class="keywordflow">if</span>(signedParam)</div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;        {</div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;          <span class="keywordtype">int</span> v;</div>
<div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;          signedParam-&gt;<a class="code" href="a00061.xhtml#a2315d477a0ade3bcdbe969fcea3c9eb8">get</a>(v);</div>
<div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;          </div>
<div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;          std::cout &lt;&lt; v;</div>
<div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;        }</div>
<div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;        </div>
<div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;        <span class="keywordflow">if</span>(unsignedParam)</div>
<div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;        {</div>
<div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;          uint v;</div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;          unsignedParam-&gt;<a class="code" href="a00061.xhtml#a2315d477a0ade3bcdbe969fcea3c9eb8">get</a>(v);</div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;          </div>
<div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;          std::cout &lt;&lt; v;</div>
<div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;        }</div>
<div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;        </div>
<div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;        <span class="keywordflow">if</span>(floatParam)</div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;        {</div>
<div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;          <span class="keywordtype">float</span> v;</div>
<div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;          floatParam-&gt;<a class="code" href="a00061.xhtml#a2315d477a0ade3bcdbe969fcea3c9eb8">get</a>(v);</div>
<div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;          </div>
<div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;          std::cout &lt;&lt; v;</div>
<div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;        }</div>
<div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;      }</div>
<div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;    }</div>
<div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;    std::cout &lt;&lt; std::endl;</div>
<div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;  }</div>
<div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;}</div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;</div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;</div>
<div class="line"><a name="l01603"></a><span class="lineno"><a class="line" href="a00025.xhtml#a98d69d7bd3e122d61cce89369c2c8a15"> 1603</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a98d69d7bd3e122d61cce89369c2c8a15">CLIManager::_filters</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;{</div>
<div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;  <span class="keyword">const</span> <span class="keyword">auto</span> &amp;m = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ab3b297a4d736fbccd1464bf3bcae60b4">getSupportedFilters</a>();</div>
<div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;  </div>
<div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;  <span class="keywordflow">if</span>(m.size())</div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;  {</div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Supported Filters:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;    </div>
<div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;f: m)</div>
<div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;      std::cout &lt;&lt; f &lt;&lt; std::endl;</div>
<div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;  }</div>
<div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;  </div>
<div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;  </div>
<div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;  <span class="keyword">auto</span> &amp;u = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getUnprocessedRawFilterSet();</div>
<div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;  </div>
<div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;  <span class="keywordflow">if</span>(u.size())</div>
<div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;  {</div>
<div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;\nFilters for unprocessed raw frame:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;    </div>
<div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;    <a class="code" href="a00025.xhtml#a7405f3b9c1589d2f343e93f13eadec3e">_showFilterSet</a>(u);</div>
<div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;  }</div>
<div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;  </div>
<div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;  <span class="keyword">auto</span> &amp;u1 = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getProcessedRawFilterSet();</div>
<div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;  </div>
<div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;  <span class="keywordflow">if</span>(u1.size())</div>
<div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;  {</div>
<div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;\nFilters for processed raw frame:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;    </div>
<div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;    <a class="code" href="a00025.xhtml#a7405f3b9c1589d2f343e93f13eadec3e">_showFilterSet</a>(u1);</div>
<div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;  }</div>
<div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;  </div>
<div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;  <span class="keyword">auto</span> &amp;u2 = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getDepthFilterSet();</div>
<div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;  </div>
<div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;  <span class="keywordflow">if</span>(u2.size())</div>
<div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;  {</div>
<div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;\nFilters for depth frame:&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;    </div>
<div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;    <a class="code" href="a00025.xhtml#a7405f3b9c1589d2f343e93f13eadec3e">_showFilterSet</a>(u2);</div>
<div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;  }</div>
<div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;}</div>
<div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;</div>
<div class="line"><a name="l01646"></a><span class="lineno"><a class="line" href="a00025.xhtml#a6a5208973a7df9aaa163d649394847f7"> 1646</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a6a5208973a7df9aaa163d649394847f7">CLIManager::_addFilter2</a>(<span class="keyword">const</span> <a class="code" href="a00130.xhtml">String</a> &amp;name, <span class="keywordtype">int</span> position, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">DepthCamera::FrameType</a> type)</div>
<div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;{</div>
<div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;  <a class="code" href="a00113.xhtml">FilterPtr</a> p = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#a5c6f46b1446564f205e75d0e21c10f15">createFilter</a>(name, type);</div>
<div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;  </div>
<div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;  <span class="keywordflow">if</span>(!p)</div>
<div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;  {</div>
<div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not get filter with name &#39;&quot;</span> &lt;&lt; name &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;  }</div>
<div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;  </div>
<div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;  <span class="keywordtype">int</span> <span class="keywordtype">id</span> = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;addFilter(p, type, position);</div>
<div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;  </div>
<div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;  <span class="keywordflow">if</span>(<span class="keywordtype">id</span> &lt; 0)</div>
<div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;  {</div>
<div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not add filter with name &#39;&quot;</span> &lt;&lt; name &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;  }</div>
<div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;  </div>
<div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully added filter &#39;&quot;</span> &lt;&lt; name &lt;&lt; <span class="stringliteral">&quot;&#39;. ID = &quot;</span> &lt;&lt; <span class="keywordtype">id</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;}</div>
<div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;</div>
<div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;</div>
<div class="line"><a name="l01668"></a><span class="lineno"><a class="line" href="a00025.xhtml#a5eb9711b9a17e7d5493c7cfdffedc693"> 1668</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a5eb9711b9a17e7d5493c7cfdffedc693">CLIManager::_addFilter</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;{</div>
<div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;  {</div>
<div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No depth camera is current connected&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;  }</div>
<div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;  </div>
<div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 4)</div>
<div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;  {</div>
<div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Missing parameters&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;    <a class="code" href="a00025.xhtml#a9a33cfbdd2339db0e49cd4b6d83665fe">_addFilterHelp</a>();</div>
<div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;  }</div>
<div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;  </div>
<div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;  <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw&quot;</span>)</div>
<div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;    <a class="code" href="a00025.xhtml#a6a5208973a7df9aaa163d649394847f7">_addFilter2</a>(tokens[2], atoi(tokens[3].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">DepthCamera::FRAME_RAW_FRAME_UNPROCESSED</a>);</div>
<div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw_processed&quot;</span>)</div>
<div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;    <a class="code" href="a00025.xhtml#a6a5208973a7df9aaa163d649394847f7">_addFilter2</a>(tokens[2], atoi(tokens[3].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">DepthCamera::FRAME_RAW_FRAME_PROCESSED</a>);</div>
<div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;depth&quot;</span>)</div>
<div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;    <a class="code" href="a00025.xhtml#a6a5208973a7df9aaa163d649394847f7">_addFilter2</a>(tokens[2], atoi(tokens[3].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a">DepthCamera::FRAME_DEPTH_FRAME</a>);</div>
<div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;  {</div>
<div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Frame type &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; is not supported&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;  }</div>
<div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;}</div>
<div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;</div>
<div class="line"><a name="l01696"></a><span class="lineno"><a class="line" href="a00025.xhtml#a65c5b6b4edb9779b8449e388d91ae2c5"> 1696</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a65c5b6b4edb9779b8449e388d91ae2c5">CLIManager::_addFilterCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;{</div>
<div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;  <span class="keywordflow">if</span>(tokens.size() == 1)</div>
<div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;  {</div>
<div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw&quot;</span>).c_str());</div>
<div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw_processed&quot;</span>).c_str());</div>
<div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; depth&quot;</span>).c_str());   </div>
<div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;  }</div>
<div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 2)</div>
<div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;  {</div>
<div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;    <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw&quot;</span> || tokens[1] == <span class="stringliteral">&quot;raw_processed&quot;</span> || tokens[1] == <span class="stringliteral">&quot;depth&quot;</span>)</div>
<div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;    {</div>
<div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160;      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;m = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ab3b297a4d736fbccd1464bf3bcae60b4">getSupportedFilters</a>();</div>
<div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;      </div>
<div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;      <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;f: m)</div>
<div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + tokens[1] + <span class="stringliteral">&quot; &quot;</span> + f).c_str());</div>
<div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;    }</div>
<div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;    {</div>
<div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;      <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> f = { <span class="stringliteral">&quot;raw&quot;</span>, <span class="stringliteral">&quot;raw_processed&quot;</span>, <span class="stringliteral">&quot;depth&quot;</span> };</div>
<div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;      </div>
<div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;      <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;<a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>: f)</div>
<div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>.size() &gt; tokens[1].size() &amp;&amp; <a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>.compare(0, tokens[1].size(), tokens[1]) == 0)</div>
<div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;          <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + <a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>).c_str());</div>
<div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;    }</div>
<div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;  }</div>
<div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 3)</div>
<div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;  {</div>
<div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;m = <a class="code" href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">_sys</a>.<a class="code" href="a00023.xhtml#ab3b297a4d736fbccd1464bf3bcae60b4">getSupportedFilters</a>();</div>
<div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;      </div>
<div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;f: m)</div>
<div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;      <span class="keywordflow">if</span>(f.size() &gt; tokens[2].size() &amp;&amp; f.compare(0, tokens[2].size(), tokens[2]) == 0)</div>
<div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + tokens[1] + <span class="stringliteral">&quot; &quot;</span> + f).c_str());</div>
<div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;  }</div>
<div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;}</div>
<div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;</div>
<div class="line"><a name="l01732"></a><span class="lineno"><a class="line" href="a00025.xhtml#ab22381ec640c4a849564002100f582a6"> 1732</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ab22381ec640c4a849564002100f582a6">CLIManager::_removeFilter2</a>(<span class="keywordtype">int</span> filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">DepthCamera::FrameType</a> type)</div>
<div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;{</div>
<div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;removeFilter(filterID, type))</div>
<div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;  {</div>
<div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to remove filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;  }</div>
<div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;  </div>
<div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Successfully removed filter&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;}</div>
<div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;</div>
<div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;</div>
<div class="line"><a name="l01744"></a><span class="lineno"><a class="line" href="a00025.xhtml#afd55259d54922282cc0405ddfaf07739"> 1744</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#afd55259d54922282cc0405ddfaf07739">CLIManager::_removeFilter</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;{</div>
<div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;  {</div>
<div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No depth camera is current connected&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;  }</div>
<div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;  </div>
<div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 3)</div>
<div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;  {</div>
<div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Missing parameters&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;    <a class="code" href="a00025.xhtml#ac786de1837d63018ecc858da4406047a">_removeFilterHelp</a>();</div>
<div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;  }</div>
<div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;  </div>
<div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;  <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw&quot;</span>)</div>
<div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;    <a class="code" href="a00025.xhtml#ab22381ec640c4a849564002100f582a6">_removeFilter2</a>(atoi(tokens[2].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">DepthCamera::FRAME_RAW_FRAME_UNPROCESSED</a>);</div>
<div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw_processed&quot;</span>)</div>
<div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;    <a class="code" href="a00025.xhtml#ab22381ec640c4a849564002100f582a6">_removeFilter2</a>(atoi(tokens[2].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">DepthCamera::FRAME_RAW_FRAME_PROCESSED</a>);</div>
<div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;depth&quot;</span>)</div>
<div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;    <a class="code" href="a00025.xhtml#ab22381ec640c4a849564002100f582a6">_removeFilter2</a>(atoi(tokens[2].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a">DepthCamera::FRAME_DEPTH_FRAME</a>);</div>
<div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;  {</div>
<div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Frame type &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; is not supported&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;  }</div>
<div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;}</div>
<div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;</div>
<div class="line"><a name="l01772"></a><span class="lineno"><a class="line" href="a00025.xhtml#ab05fde5bd30552734d99594b32a2ca98"> 1772</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#ab05fde5bd30552734d99594b32a2ca98">CLIManager::_removeFilterCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;{</div>
<div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;  <span class="keywordflow">if</span>(tokens.size() == 1)</div>
<div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;  {</div>
<div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw&quot;</span>).c_str());</div>
<div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw_processed&quot;</span>).c_str());</div>
<div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; depth&quot;</span>).c_str());   </div>
<div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;  }</div>
<div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 2)</div>
<div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;  {</div>
<div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;    <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> f = { <span class="stringliteral">&quot;raw&quot;</span>, <span class="stringliteral">&quot;raw_processed&quot;</span>, <span class="stringliteral">&quot;depth&quot;</span> };</div>
<div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;      </div>
<div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;<a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>: f)</div>
<div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>.size() &gt; tokens[1].size() &amp;&amp; <a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>.compare(0, tokens[1].size(), tokens[1]) == 0)</div>
<div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + <a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>).c_str());</div>
<div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;  }</div>
<div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;}</div>
<div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;</div>
<div class="line"><a name="l01790"></a><span class="lineno"><a class="line" href="a00025.xhtml#a40f6356543e9e287fa9c23117e461b12"> 1790</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a40f6356543e9e287fa9c23117e461b12">CLIManager::_setFilterParam2</a>(<span class="keywordtype">int</span> filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">DepthCamera::FrameType</a> type, <span class="keyword">const</span> <a class="code" href="a00130.xhtml">String</a> &amp;paramName, <span class="keyword">const</span> <a class="code" href="a00130.xhtml">String</a> &amp;paramValue)</div>
<div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;{</div>
<div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;  <a class="code" href="a00113.xhtml">FilterPtr</a> p = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFilter(filterID, type);</div>
<div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;  </div>
<div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;  <span class="keywordflow">if</span>(!p)</div>
<div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;  {</div>
<div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No valid filter found for ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;  }</div>
<div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;  </div>
<div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;  <span class="keyword">auto</span> param = p-&gt;getParam(paramName);</div>
<div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;  </div>
<div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;  <span class="keywordflow">if</span>(!param)</div>
<div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;  {</div>
<div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No valid parameter &#39;&quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot;&#39; found for filter ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;  }</div>
<div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;  </div>
<div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;  <span class="keyword">const</span> <a class="code" href="a00011.xhtml">BoolFilterParameter</a> *boolParam = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00011.xhtml">BoolFilterParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;  <span class="keyword">const</span> <a class="code" href="a00059.xhtml">EnumFilterParameter</a> *enumParam = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00059.xhtml">EnumFilterParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;  <span class="keyword">const</span> <a class="code" href="a00060.xhtml">SignedFilterParameter</a> *signedParam = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00060.xhtml">SignedFilterParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;  <span class="keyword">const</span> <a class="code" href="a00060.xhtml">UnsignedFilterParameter</a> *unsignedParam = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00060.xhtml">UnsignedFilterParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;  <span class="keyword">const</span> <a class="code" href="a00060.xhtml">FloatFilterParameter</a> *floatParam = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00060.xhtml">FloatFilterParameter</a> *<span class="keyword">&gt;</span>(param.get());</div>
<div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;  </div>
<div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;  <span class="keywordflow">if</span>(boolParam)</div>
<div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;  {</div>
<div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;    <span class="keywordtype">bool</span> v;</div>
<div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;    </div>
<div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;    <span class="keywordflow">if</span>(paramValue == <span class="stringliteral">&quot;true&quot;</span> || paramValue == <span class="stringliteral">&quot;1&quot;</span>)</div>
<div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;      v = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;      v = <span class="keyword">false</span>;</div>
<div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;    </div>
<div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;    <span class="keywordflow">if</span>(!p-&gt;set(paramName, v))</div>
<div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot;&#39; for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Set &quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; paramValue &lt;&lt; <span class="stringliteral">&quot; successfully for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;  }</div>
<div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;  </div>
<div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;  <span class="keywordflow">if</span>(enumParam)</div>
<div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;  {</div>
<div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;    <span class="keywordtype">int</span> v = atoi(paramValue.c_str());</div>
<div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;    </div>
<div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;    <span class="keywordflow">if</span>(!p-&gt;set(paramName, v))</div>
<div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot;&#39; for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Set &quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; paramValue &lt;&lt; <span class="stringliteral">&quot; successfully for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;  }</div>
<div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;  </div>
<div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;  <span class="keywordflow">if</span>(signedParam)</div>
<div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;  {</div>
<div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;    <span class="keywordtype">int</span> v = atoi(paramValue.c_str());</div>
<div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;    </div>
<div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;    <span class="keywordflow">if</span>(!p-&gt;set(paramName, v))</div>
<div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot;&#39; for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Set &quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; paramValue &lt;&lt; <span class="stringliteral">&quot; successfully for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;  }</div>
<div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;  </div>
<div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;  <span class="keywordflow">if</span>(unsignedParam)</div>
<div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;  {</div>
<div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;    uint v = atoi(paramValue.c_str());</div>
<div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;    </div>
<div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;    <span class="keywordflow">if</span>(!p-&gt;set(paramName, v))</div>
<div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot;&#39; for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Set &quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; paramValue &lt;&lt; <span class="stringliteral">&quot; successfully for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;  }</div>
<div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;  </div>
<div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;  <span class="keywordflow">if</span>(floatParam)</div>
<div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;  {</div>
<div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;    <span class="keywordtype">float</span> v = atof(paramValue.c_str());</div>
<div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;    </div>
<div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;    <span class="keywordflow">if</span>(!p-&gt;set(paramName, v))</div>
<div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;      <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to set parameter &#39;&quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot;&#39; for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;Set &quot;</span> &lt;&lt; paramName &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; paramValue &lt;&lt; <span class="stringliteral">&quot; successfully for filter with ID &#39;&quot;</span> &lt;&lt; filterID &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;  }</div>
<div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;}</div>
<div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;</div>
<div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;</div>
<div class="line"><a name="l01871"></a><span class="lineno"><a class="line" href="a00025.xhtml#a25bfff4487bfb531f1a7d42594b682c0"> 1871</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a25bfff4487bfb531f1a7d42594b682c0">CLIManager::_setFilterParam</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens)</div>
<div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;{</div>
<div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;  <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;  {</div>
<div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;No depth camera is current connected&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;  }</div>
<div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;  </div>
<div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;  <span class="keywordflow">if</span>(tokens.size() &lt; 6)</div>
<div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;  {</div>
<div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Missing parameters&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;    <a class="code" href="a00025.xhtml#a34678edee0e02b0e5a8581f506c26456">_setFilterParamHelp</a>();</div>
<div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;  }</div>
<div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;  </div>
<div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;  <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw&quot;</span>)</div>
<div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;    <a class="code" href="a00025.xhtml#a40f6356543e9e287fa9c23117e461b12">_setFilterParam2</a>(atoi(tokens[2].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">DepthCamera::FRAME_RAW_FRAME_UNPROCESSED</a>, tokens[3], tokens[5]);</div>
<div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw_processed&quot;</span>)</div>
<div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;    <a class="code" href="a00025.xhtml#a40f6356543e9e287fa9c23117e461b12">_setFilterParam2</a>(atoi(tokens[2].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">DepthCamera::FRAME_RAW_FRAME_PROCESSED</a>, tokens[3], tokens[5]);</div>
<div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;depth&quot;</span>)</div>
<div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;    <a class="code" href="a00025.xhtml#a40f6356543e9e287fa9c23117e461b12">_setFilterParam2</a>(atoi(tokens[2].c_str()), <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a">DepthCamera::FRAME_DEPTH_FRAME</a>, tokens[3], tokens[5]);</div>
<div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;  {</div>
<div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;    <a class="code" href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Frame type &#39;&quot;</span> &lt;&lt; tokens[1] &lt;&lt; <span class="stringliteral">&quot;&#39; is not supported&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;  }</div>
<div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;}</div>
<div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;</div>
<div class="line"><a name="l01899"></a><span class="lineno"><a class="line" href="a00025.xhtml#a00d8fae3a44b95a991330b401ffc6cd2"> 1899</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00025.xhtml#a00d8fae3a44b95a991330b401ffc6cd2">CLIManager::_setFilterParamCompletion</a>(<span class="keyword">const</span> <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> &amp;tokens, <a class="code" href="a00091.xhtml">linenoiseCompletions</a> *lc)</div>
<div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;{</div>
<div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;  <span class="keywordflow">if</span>(tokens.size() == 1)</div>
<div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;  {</div>
<div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw&quot;</span>).c_str());</div>
<div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; raw_processed&quot;</span>).c_str());</div>
<div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;    <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; depth&quot;</span>).c_str());   </div>
<div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;  }</div>
<div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 2)</div>
<div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;  {</div>
<div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;    <a class="code" href="a00395.xhtml">Vector&lt;String&gt;</a> f = { <span class="stringliteral">&quot;raw&quot;</span>, <span class="stringliteral">&quot;raw_processed&quot;</span>, <span class="stringliteral">&quot;depth&quot;</span> };</div>
<div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;    </div>
<div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;<a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>: f)</div>
<div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>.size() &gt; tokens[1].size() &amp;&amp; <a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>.compare(0, tokens[1].size(), tokens[1]) == 0)</div>
<div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + <a class="code" href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">x</a>).c_str());</div>
<div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;  }</div>
<div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 3)</div>
<div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;  {</div>
<div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>)</div>
<div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;    </div>
<div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;    <a class="code" href="a00113.xhtml">FilterPtr</a> p;</div>
<div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;    </div>
<div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;    <span class="keywordtype">int</span> filterID = atoi(tokens[2].c_str());</div>
<div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;    </div>
<div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;    <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw&quot;</span>)</div>
<div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;      p = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFilter(filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">DepthCamera::FRAME_RAW_FRAME_UNPROCESSED</a>);</div>
<div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw_processed&quot;</span>)</div>
<div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;      p = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFilter(filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">DepthCamera::FRAME_RAW_FRAME_PROCESSED</a>);</div>
<div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;depth&quot;</span>)</div>
<div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;      p = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFilter(filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a">DepthCamera::FRAME_DEPTH_FRAME</a>);</div>
<div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;    </div>
<div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;    <span class="keywordflow">if</span>(p)</div>
<div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;    {</div>
<div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;      <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;param: p-&gt;parameters())</div>
<div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;      {</div>
<div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;        <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + tokens[1] + <span class="stringliteral">&quot; &quot;</span> + tokens[2] + <span class="stringliteral">&quot; &quot;</span> + param.first).c_str());</div>
<div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;      }</div>
<div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;    }</div>
<div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;  }</div>
<div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens.size() == 4)</div>
<div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;  {</div>
<div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;    <a class="code" href="a00113.xhtml">FilterPtr</a> p;</div>
<div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;    </div>
<div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;    <span class="keywordtype">int</span> filterID = atoi(tokens[2].c_str());</div>
<div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;    </div>
<div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;    <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw&quot;</span>)</div>
<div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;      p = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFilter(filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">DepthCamera::FRAME_RAW_FRAME_UNPROCESSED</a>);</div>
<div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;raw_processed&quot;</span>)</div>
<div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;      p = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFilter(filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">DepthCamera::FRAME_RAW_FRAME_PROCESSED</a>);</div>
<div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(tokens[1] == <span class="stringliteral">&quot;depth&quot;</span>)</div>
<div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;      p = <a class="code" href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">_currentDepthCamera</a>-&gt;getFilter(filterID, <a class="code" href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a">DepthCamera::FRAME_DEPTH_FRAME</a>);</div>
<div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;    </div>
<div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;    <span class="keywordflow">if</span>(p)</div>
<div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;    {</div>
<div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;      <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;param: p-&gt;parameters())</div>
<div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;      {</div>
<div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;        <span class="keywordflow">if</span>(param.first.size() &gt; tokens[3].size() &amp;&amp; param.first.compare(0, tokens[3].size(), tokens[3]) == 0)</div>
<div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;          <a class="code" href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">linenoiseAddCompletion</a>(lc, (tokens[0] + <span class="stringliteral">&quot; &quot;</span> + tokens[1] + <span class="stringliteral">&quot; &quot;</span> + tokens[2] + <span class="stringliteral">&quot; &quot;</span> + param.first).c_str());</div>
<div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;      }</div>
<div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;    }</div>
<div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;  }</div>
<div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;}</div>
<div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;</div>
<div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;</div>
<div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;</div>
<div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;  </div>
<div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;}</div>
<div class="ttc" id="a00025_xhtml_a4f643a858cbe8866e2d8f7949f01c3cf"><div class="ttname"><a href="a00025.xhtml#a4f643a858cbe8866e2d8f7949f01c3cf">Voxel::CLIManager::_connectHelp</a></div><div class="ttdeci">void _connectHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00223">CLIManager.cpp:223</a></div></div>
<div class="ttc" id="a00040_xhtml_a3305137afc2f3ecde548223e71a86135"><div class="ttname"><a href="a00040.xhtml#a3305137afc2f3ecde548223e71a86135">Voxel::DepthFrame::size</a></div><div class="ttdeci">FrameSize size</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00060">Frame.h:60</a></div></div>
<div class="ttc" id="a00065_xhtml_a9f3af1ab3238ed9815daa019c2fc681f"><div class="ttname"><a href="a00065.xhtml#a9f3af1ab3238ed9815daa019c2fc681f">Voxel::Frame::timestamp</a></div><div class="ttdeci">TimeStampType timestamp</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00029">Frame.h:29</a></div></div>
<div class="ttc" id="a00160_xhtml_abc808bba1a6289d3e95e790104d6c80f"><div class="ttname"><a href="a00160.xhtml#abc808bba1a6289d3e95e790104d6c80f">Voxel::ToFRawFrame::flags</a></div><div class="ttdeci">virtual const uint8_t * flags() const =0</div></div>
<div class="ttc" id="a00025_xhtml_a980f41b859fe062ea0c132ce6031d0cf"><div class="ttname"><a href="a00025.xhtml#a980f41b859fe062ea0c132ce6031d0cf">Voxel::CLIManager::_start</a></div><div class="ttdeci">void _start(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00372">CLIManager.cpp:372</a></div></div>
<div class="ttc" id="a00025_xhtml_a98d69d7bd3e122d61cce89369c2c8a15"><div class="ttname"><a href="a00025.xhtml#a98d69d7bd3e122d61cce89369c2c8a15">Voxel::CLIManager::_filters</a></div><div class="ttdeci">void _filters(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01603">CLIManager.cpp:1603</a></div></div>
<div class="ttc" id="a00117_xhtml"><div class="ttname"><a href="a00117.xhtml">Voxel::RangeParameterTemplate</a></div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00319">Parameter.h:319</a></div></div>
<div class="ttc" id="a00220_xhtml_a390bf8b7f704f0afb22a673b611a0d00"><div class="ttname"><a href="a00220.xhtml#a390bf8b7f704f0afb22a673b611a0d00">_C</a></div><div class="ttdeci">#define _C(F)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00013">CLIManager.cpp:13</a></div></div>
<div class="ttc" id="a00025_xhtml_a4e48054f70ec798328bc63f59b07a80f"><div class="ttname"><a href="a00025.xhtml#a4e48054f70ec798328bc63f59b07a80f">Voxel::CLIManager::_startHelp</a></div><div class="ttdeci">void _startHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00227">CLIManager.cpp:227</a></div></div>
<div class="ttc" id="a00061_xhtml_a2315d477a0ade3bcdbe969fcea3c9eb8"><div class="ttname"><a href="a00061.xhtml#a2315d477a0ade3bcdbe969fcea3c9eb8">Voxel::FilterParameterTemplate::get</a></div><div class="ttdeci">virtual bool get(T &amp;v) const </div><div class="ttdef"><b>Definition:</b> <a href="a00254_source.xhtml#l00054">FilterParameter.h:54</a></div></div>
<div class="ttc" id="a00025_xhtml_a6a5208973a7df9aaa163d649394847f7"><div class="ttname"><a href="a00025.xhtml#a6a5208973a7df9aaa163d649394847f7">Voxel::CLIManager::_addFilter2</a></div><div class="ttdeci">void _addFilter2(const String &amp;name, int position, DepthCamera::FrameType type)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01646">CLIManager.cpp:1646</a></div></div>
<div class="ttc" id="a00040_xhtml"><div class="ttname"><a href="a00040.xhtml">Voxel::DepthFrame</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00055">Frame.h:55</a></div></div>
<div class="ttc" id="a00025_xhtml_aa09c2ce6a3468458e8e949b61fb63350"><div class="ttname"><a href="a00025.xhtml#aa09c2ce6a3468458e8e949b61fb63350">Voxel::CLIManager::_getPrompt</a></div><div class="ttdeci">void _getPrompt(String &amp;prompt)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00074">CLIManager.cpp:74</a></div></div>
<div class="ttc" id="a00390_xhtml_gadd67e5b1a02a8a07764793e4598922d4"><div class="ttname"><a href="a00390.xhtml#gadd67e5b1a02a8a07764793e4598922d4">Voxel::split</a></div><div class="ttdeci">void split(const String &amp;str, const char delimiter, Vector&lt; String &gt; &amp;split)</div><div class="ttdef"><b>Definition:</b> <a href="a00222_source.xhtml#l00041">Common.cpp:41</a></div></div>
<div class="ttc" id="a00060_xhtml"><div class="ttname"><a href="a00060.xhtml">Voxel::FilterParameterRangeTemplate</a></div><div class="ttdef"><b>Definition:</b> <a href="a00254_source.xhtml#l00085">FilterParameter.h:85</a></div></div>
<div class="ttc" id="a00025_xhtml_ab22381ec640c4a849564002100f582a6"><div class="ttname"><a href="a00025.xhtml#ab22381ec640c4a849564002100f582a6">Voxel::CLIManager::_removeFilter2</a></div><div class="ttdeci">void _removeFilter2(int filterID, DepthCamera::FrameType type)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01732">CLIManager.cpp:1732</a></div></div>
<div class="ttc" id="a00090_xhtml"><div class="ttname"><a href="a00090.xhtml">Voxel::IntensityPoint</a></div><div class="ttdef"><b>Definition:</b> <a href="a00286_source.xhtml#l00102">Point.h:102</a></div></div>
<div class="ttc" id="a00040_xhtml_a6d99c64a5daddfe88b5b561e16a21037"><div class="ttname"><a href="a00040.xhtml#a6d99c64a5daddfe88b5b561e16a21037">Voxel::DepthFrame::amplitude</a></div><div class="ttdeci">Vector&lt; float &gt; amplitude</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00059">Frame.h:59</a></div></div>
<div class="ttc" id="a00395_xhtml"><div class="ttname"><a href="a00395.xhtml">Vector&lt; String &gt;</a></div></div>
<div class="ttc" id="a00023_xhtml"><div class="ttname"><a href="a00023.xhtml">Voxel::CameraSystem</a></div><div class="ttdoc">This class provides ways to instantiate individual cameras and components like filters. </div><div class="ttdef"><b>Definition:</b> <a href="a00214_source.xhtml#l00028">CameraSystem.h:28</a></div></div>
<div class="ttc" id="a00118_xhtml_a138837f48f2842394f7293b6b256e491"><div class="ttname"><a href="a00118.xhtml#a138837f48f2842394f7293b6b256e491">Voxel::RawDataFrame::data</a></div><div class="ttdeci">Vector&lt; ByteType &gt; data</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00566">Frame.h:566</a></div></div>
<div class="ttc" id="a00053_xhtml"><div class="ttname"><a href="a00053.xhtml">Voxel::EnumParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00279">Parameter.h:279</a></div></div>
<div class="ttc" id="a00071_xhtml_ae6de6f5d7fed5fd0af1985f86e3b9e55"><div class="ttname"><a href="a00071.xhtml#ae6de6f5d7fed5fd0af1985f86e3b9e55">Voxel::FrameSize::height</a></div><div class="ttdeci">uint32_t height</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00022">VideoMode.h:22</a></div></div>
<div class="ttc" id="a00381_xhtml_a238647bb456e72d40b364b093758aafc"><div class="ttname"><a href="a00381.xhtml#a238647bb456e72d40b364b093758aafc">LineNoise::linenoiseHistorySave</a></div><div class="ttdeci">int linenoiseHistorySave(const char *filename)</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l01580">LineNoise.cpp:1580</a></div></div>
<div class="ttc" id="a00105_xhtml"><div class="ttname"><a href="a00105.xhtml">Voxel::PCLViewer</a></div><div class="ttdef"><b>Definition:</b> <a href="a00285_source.xhtml#l00035">PCLViewer.h:35</a></div></div>
<div class="ttc" id="a00025_xhtml_aab8a56867b83a9948d04f20ead922565"><div class="ttname"><a href="a00025.xhtml#aab8a56867b83a9948d04f20ead922565">Voxel::CLIManager::_setRegister</a></div><div class="ttdeci">void _setRegister(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00705">CLIManager.cpp:705</a></div></div>
<div class="ttc" id="a00025_xhtml_ab05fde5bd30552734d99594b32a2ca98"><div class="ttname"><a href="a00025.xhtml#ab05fde5bd30552734d99594b32a2ca98">Voxel::CLIManager::_removeFilterCompletion</a></div><div class="ttdeci">void _removeFilterCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01772">CLIManager.cpp:1772</a></div></div>
<div class="ttc" id="a00381_xhtml_ae3fa94e62f15b4f0d105753027521dcf"><div class="ttname"><a href="a00381.xhtml#ae3fa94e62f15b4f0d105753027521dcf">LineNoise::linenoiseHistorySetMaxLen</a></div><div class="ttdeci">int linenoiseHistorySetMaxLen(int len)</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l01550">LineNoise.cpp:1550</a></div></div>
<div class="ttc" id="a00111_xhtml_a84e5c725fadb14f7c7f86db89d3e8e0f"><div class="ttname"><a href="a00111.xhtml#a84e5c725fadb14f7c7f86db89d3e8e0f">Voxel::PointCloudFrameTemplate::points</a></div><div class="ttdeci">Vector&lt; PointType &gt; points</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00665">Frame.h:665</a></div></div>
<div class="ttc" id="a00025_xhtml_ab8db52caf9a7104e49e7a53216653ab6"><div class="ttname"><a href="a00025.xhtml#ab8db52caf9a7104e49e7a53216653ab6">Voxel::CLIManager::_lastTimeStamp</a></div><div class="ttdeci">TimeStampType _lastTimeStamp</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00108">CLIManager.h:108</a></div></div>
<div class="ttc" id="a00054_xhtml_ae5c837d7ae2ba54a9adb59116e0d0708"><div class="ttname"><a href="a00054.xhtml#ae5c837d7ae2ba54a9adb59116e0d0708">Voxel::EnumParameterTemplate::valueMeaning</a></div><div class="ttdeci">const Vector&lt; String &gt; &amp; valueMeaning() const </div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00210">Parameter.h:210</a></div></div>
<div class="ttc" id="a00120_xhtml_a603ed39327ec182e0214f2b7ef58cd99"><div class="ttname"><a href="a00120.xhtml#a603ed39327ec182e0214f2b7ef58cd99">Voxel::RegionOfInterest::y</a></div><div class="ttdeci">uint32_t y</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00038">VideoMode.h:38</a></div></div>
<div class="ttc" id="a00025_xhtml_ac786de1837d63018ecc858da4406047a"><div class="ttname"><a href="a00025.xhtml#ac786de1837d63018ecc858da4406047a">Voxel::CLIManager::_removeFilterHelp</a></div><div class="ttdeci">void _removeFilterHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00239">CLIManager.cpp:239</a></div></div>
<div class="ttc" id="a00181_xhtml_a48b5eb13a5c9f7d0a1641a261e056375"><div class="ttname"><a href="a00181.xhtml#a48b5eb13a5c9f7d0a1641a261e056375">Voxel::VideoMode::frameSize</a></div><div class="ttdeci">FrameSize frameSize</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00062">VideoMode.h:62</a></div></div>
<div class="ttc" id="a00390_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="a00390.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="a00104_xhtml_af4b491184eda441c287fc126a7453630"><div class="ttname"><a href="a00104.xhtml#af4b491184eda441c287fc126a7453630">Voxel::PCLGrabber::PointCloudFrameCallBack</a></div><div class="ttdeci">void( PointCloudFrameCallBack)(const Voxel::PointCloudFrame &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="a00283_source.xhtml#l00024">PCLGrabber.h:24</a></div></div>
<div class="ttc" id="a00011_xhtml_a4a76ae1c94d0f810a1478e7ca730b02c"><div class="ttname"><a href="a00011.xhtml#a4a76ae1c94d0f810a1478e7ca730b02c">Voxel::BoolFilterParameter::valueMeaning</a></div><div class="ttdeci">valueMeaning</div><div class="ttdef"><b>Definition:</b> <a href="a00254_source.xhtml#l00178">FilterParameter.h:178</a></div></div>
<div class="ttc" id="a00025_xhtml_afece35872340107b25cae23070b0d888"><div class="ttname"><a href="a00025.xhtml#afece35872340107b25cae23070b0d888">Voxel::CLIManager::_saveHelp</a></div><div class="ttdeci">void _saveHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00245">CLIManager.cpp:245</a></div></div>
<div class="ttc" id="a00025_xhtml_a39454a9045001ccfbee933bc1ac4658b"><div class="ttname"><a href="a00025.xhtml#a39454a9045001ccfbee933bc1ac4658b">Voxel::CLIManager::_viewer</a></div><div class="ttdeci">Ptr&lt; PCLViewer &gt; _viewer</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00033">CLIManager.h:33</a></div></div>
<div class="ttc" id="a00130_xhtml"><div class="ttname"><a href="a00130.xhtml">String</a></div></div>
<div class="ttc" id="a00120_xhtml"><div class="ttname"><a href="a00120.xhtml">Voxel::RegionOfInterest</a></div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00035">VideoMode.h:35</a></div></div>
<div class="ttc" id="a00053_xhtml_ab74f397082b4134fe8e3338a72f91639"><div class="ttname"><a href="a00053.xhtml#ab74f397082b4134fe8e3338a72f91639">Voxel::EnumParameter::allowedValues</a></div><div class="ttdeci">const Vector&lt; int &gt; &amp; allowedValues() const </div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00298">Parameter.h:298</a></div></div>
<div class="ttc" id="a00160_xhtml"><div class="ttname"><a href="a00160.xhtml">Voxel::ToFRawFrame</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00168">Frame.h:168</a></div></div>
<div class="ttc" id="a00390_xhtml_gafd72f3b1c8c89d947c44f85bf983f852"><div class="ttname"><a href="a00390.xhtml#gafd72f3b1c8c89d947c44f85bf983f852">Voxel::String</a></div><div class="ttdeci">std::string String</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00083">Common.h:83</a></div></div>
<div class="ttc" id="a00025_xhtml_a40f6356543e9e287fa9c23117e461b12"><div class="ttname"><a href="a00025.xhtml#a40f6356543e9e287fa9c23117e461b12">Voxel::CLIManager::_setFilterParam2</a></div><div class="ttdeci">void _setFilterParam2(int filterID, DepthCamera::FrameType type, const String &amp;paramName, const String &amp;paramValue)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01790">CLIManager.cpp:1790</a></div></div>
<div class="ttc" id="a00390_xhtml_ga148a066c676b3c831918800b78a2f056"><div class="ttname"><a href="a00390.xhtml#ga148a066c676b3c831918800b78a2f056">Voxel::gcd</a></div><div class="ttdeci">uint gcd(uint n, uint m)</div><div class="ttdef"><b>Definition:</b> <a href="a00222_source.xhtml#l00135">Common.cpp:135</a></div></div>
<div class="ttc" id="a00025_xhtml_a725a420cbbe28729002acc00737477c7"><div class="ttname"><a href="a00025.xhtml#a725a420cbbe28729002acc00737477c7">Voxel::CLIManager::_getParameter</a></div><div class="ttdeci">void _getParameter(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00406">CLIManager.cpp:406</a></div></div>
<div class="ttc" id="a00160_xhtml_af3fb7938e3e76c26299efe07f69d406f"><div class="ttname"><a href="a00160.xhtml#af3fb7938e3e76c26299efe07f69d406f">Voxel::ToFRawFrame::phaseWordWidth</a></div><div class="ttdeci">virtual SizeType phaseWordWidth() const =0</div></div>
<div class="ttc" id="a00113_xhtml"><div class="ttname"><a href="a00113.xhtml">Voxel::Ptr</a></div><div class="ttdef"><b>Definition:</b> <a href="a00291_source.xhtml#l00036">Ptr.h:36</a></div></div>
<div class="ttc" id="a00270_xhtml"><div class="ttname"><a href="a00270.xhtml">LineNoise.h</a></div></div>
<div class="ttc" id="a00025_xhtml_ac0efff72240dc5e1ba5865e0dd59503d"><div class="ttname"><a href="a00025.xhtml#ac0efff72240dc5e1ba5865e0dd59503d">Voxel::CLIManager::_getParameterHelp</a></div><div class="ttdeci">void _getParameterHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00231">CLIManager.cpp:231</a></div></div>
<div class="ttc" id="a00117_xhtml_a37ac5f7905a5849207fde317192ae7ce"><div class="ttname"><a href="a00117.xhtml#a37ac5f7905a5849207fde317192ae7ce">Voxel::RangeParameterTemplate::unit</a></div><div class="ttdeci">const String &amp; unit() const </div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00340">Parameter.h:340</a></div></div>
<div class="ttc" id="a00381_xhtml_ae0d170e5b6e0ea50d5f722551cb09ec5"><div class="ttname"><a href="a00381.xhtml#ae0d170e5b6e0ea50d5f722551cb09ec5">LineNoise::linenoiseHistoryAdd</a></div><div class="ttdeci">int linenoiseHistoryAdd(const char *line)</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l01519">LineNoise.cpp:1519</a></div></div>
<div class="ttc" id="a00104_xhtml_a72eabe5e85c8c89091e23fbccea2929b"><div class="ttname"><a href="a00104.xhtml#a72eabe5e85c8c89091e23fbccea2929b">Voxel::PCLGrabber::RawImageCallBack</a></div><div class="ttdeci">void( RawImageCallBack)(const Voxel::RawFrame &amp;, const Voxel::DepthCamera::FrameType type)</div><div class="ttdef"><b>Definition:</b> <a href="a00283_source.xhtml#l00026">PCLGrabber.h:26</a></div></div>
<div class="ttc" id="a00283_xhtml"><div class="ttname"><a href="a00283.xhtml">PCLGrabber.h</a></div></div>
<div class="ttc" id="a00390_xhtml_ga8a21cf7475356ae552da8952ebf885b4"><div class="ttname"><a href="a00390.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Voxel::Vector</a></div><div class="ttdeci">std::vector&lt; T &gt; Vector</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00051">Common.h:51</a></div></div>
<div class="ttc" id="a00025_xhtml_ac1f4d4c27d312c47299be5ecbbc6cf46"><div class="ttname"><a href="a00025.xhtml#ac1f4d4c27d312c47299be5ecbbc6cf46">Voxel::CLIManager::_stopHelp</a></div><div class="ttdeci">void _stopHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00228">CLIManager.cpp:228</a></div></div>
<div class="ttc" id="a00025_xhtml_a7231bf39032646bb0cecb8dbd7e5498f"><div class="ttname"><a href="a00025.xhtml#a7231bf39032646bb0cecb8dbd7e5498f">Voxel::CLIManager::_currentCount</a></div><div class="ttdeci">int _currentCount</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00111">CLIManager.h:111</a></div></div>
<div class="ttc" id="a00379_xhtml_a9e6d1e12787c05f7e4190828d4d2bfa5"><div class="ttname"><a href="a00379.xhtml#a9e6d1e12787c05f7e4190828d4d2bfa5">CameraSystemTest.devices</a></div><div class="ttdeci">tuple devices</div><div class="ttdef"><b>Definition:</b> <a href="a00219_source.xhtml#l00012">CameraSystemTest.py:12</a></div></div>
<div class="ttc" id="a00381_xhtml_ab0652a666cb260a0b487bc9df5638c7a"><div class="ttname"><a href="a00381.xhtml#ab0652a666cb260a0b487bc9df5638c7a">LineNoise::linenoiseHistoryLoad</a></div><div class="ttdeci">int linenoiseHistoryLoad(const char *filename)</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l01615">LineNoise.cpp:1615</a></div></div>
<div class="ttc" id="a00025_xhtml_a49a382b9e838e1f340a9e5715c761a46"><div class="ttname"><a href="a00025.xhtml#a49a382b9e838e1f340a9e5715c761a46">Voxel::CLIManager::_capabilitiesCompletion</a></div><div class="ttdeci">void _capabilitiesCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01044">CLIManager.cpp:1044</a></div></div>
<div class="ttc" id="a00103_xhtml_afa8896eaffbd2b87d1482c0967a0fe1d"><div class="ttname"><a href="a00103.xhtml#afa8896eaffbd2b87d1482c0967a0fe1d">Voxel::ParameterTemplate::get</a></div><div class="ttdeci">virtual bool get(T &amp;value, bool refresh=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00142">Parameter.h:142</a></div></div>
<div class="ttc" id="a00220_xhtml_a97ee5b1964dd12093ae9290e4656e522"><div class="ttname"><a href="a00220.xhtml#a97ee5b1964dd12093ae9290e4656e522">_H</a></div><div class="ttdeci">#define _H(F)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00015">CLIManager.cpp:15</a></div></div>
<div class="ttc" id="a00054_xhtml_a8d6a37e707b0e960bb6229f51e12b85a"><div class="ttname"><a href="a00054.xhtml#a8d6a37e707b0e960bb6229f51e12b85a">Voxel::EnumParameterTemplate::valueDescription</a></div><div class="ttdeci">const Vector&lt; String &gt; &amp; valueDescription() const </div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00209">Parameter.h:209</a></div></div>
<div class="ttc" id="a00390_xhtml_ga1326362c67d9262ef012439fe9bdd3bc"><div class="ttname"><a href="a00390.xhtml#ga1326362c67d9262ef012439fe9bdd3bc">Voxel::Map</a></div><div class="ttdeci">std::unordered_map&lt; K, V &gt; Map</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00060">Common.h:60</a></div></div>
<div class="ttc" id="a00025_xhtml_a9a33cfbdd2339db0e49cd4b6d83665fe"><div class="ttname"><a href="a00025.xhtml#a9a33cfbdd2339db0e49cd4b6d83665fe">Voxel::CLIManager::_addFilterHelp</a></div><div class="ttdeci">void _addFilterHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00236">CLIManager.cpp:236</a></div></div>
<div class="ttc" id="a00120_xhtml_a53d8b28fa3a82ce5a50382c0524b8ed0"><div class="ttname"><a href="a00120.xhtml#a53d8b28fa3a82ce5a50382c0524b8ed0">Voxel::RegionOfInterest::x</a></div><div class="ttdeci">uint32_t x</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00038">VideoMode.h:38</a></div></div>
<div class="ttc" id="a00220_xhtml_a24507234b287f324e7e62f0dfd6a0ccf"><div class="ttname"><a href="a00220.xhtml#a24507234b287f324e7e62f0dfd6a0ccf">_P</a></div><div class="ttdeci">#define _P(F)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00014">CLIManager.cpp:14</a></div></div>
<div class="ttc" id="a00025_xhtml_a2672bb26d3423d3cc587f7871a4741cd"><div class="ttname"><a href="a00025.xhtml#a2672bb26d3423d3cc587f7871a4741cd">Voxel::CLIManager::_videoModeCapabilities</a></div><div class="ttdeci">void _videoModeCapabilities()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01394">CLIManager.cpp:1394</a></div></div>
<div class="ttc" id="a00025_xhtml_a88117e881984522565753456916c8641"><div class="ttname"><a href="a00025.xhtml#a88117e881984522565753456916c8641">Voxel::CLIManager::_capabilitiesHelp</a></div><div class="ttdeci">void _capabilitiesHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00232">CLIManager.cpp:232</a></div></div>
<div class="ttc" id="a00036_xhtml_a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e"><div class="ttname"><a href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91acd1a96647d5cbd670857006da7ec5b6e">Voxel::DepthCamera::FRAME_RAW_FRAME_UNPROCESSED</a></div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00044">DepthCamera.h:44</a></div></div>
<div class="ttc" id="a00023_xhtml_ab3b297a4d736fbccd1464bf3bcae60b4"><div class="ttname"><a href="a00023.xhtml#ab3b297a4d736fbccd1464bf3bcae60b4">Voxel::CameraSystem::getSupportedFilters</a></div><div class="ttdeci">Vector&lt; String &gt; getSupportedFilters()</div><div class="ttdef"><b>Definition:</b> <a href="a00213_source.xhtml#l00209">CameraSystem.cpp:209</a></div></div>
<div class="ttc" id="a00025_xhtml_ac54eb976e2f9a29c13e5e5f47d657f8b"><div class="ttname"><a href="a00025.xhtml#ac54eb976e2f9a29c13e5e5f47d657f8b">Voxel::CLIManager::_setParameter</a></div><div class="ttdeci">void _setParameter(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00524">CLIManager.cpp:524</a></div></div>
<div class="ttc" id="a00025_xhtml_add34ceca75cfba5b41a0b65b20abea50"><div class="ttname"><a href="a00025.xhtml#add34ceca75cfba5b41a0b65b20abea50">Voxel::CLIManager::_saveCallbackConnection</a></div><div class="ttdeci">boost::signals2::connection _saveCallbackConnection</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00113">CLIManager.h:113</a></div></div>
<div class="ttc" id="a00025_xhtml_a4c601a4be22df4615d2f0c89b0ad135c"><div class="ttname"><a href="a00025.xhtml#a4c601a4be22df4615d2f0c89b0ad135c">Voxel::CLIManager::_paramCompletion</a></div><div class="ttdeci">void _paramCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00996">CLIManager.cpp:996</a></div></div>
<div class="ttc" id="a00390_xhtml_ga69863b6d047cf3817af4c0bbbc466339"><div class="ttname"><a href="a00390.xhtml#ga69863b6d047cf3817af4c0bbbc466339">Voxel::Set</a></div><div class="ttdeci">std::set&lt; T &gt; Set</div><div class="ttdef"><b>Definition:</b> <a href="a00223_source.xhtml#l00057">Common.h:57</a></div></div>
<div class="ttc" id="a00025_xhtml_aafa6e4dfa8ca7d83f2fdf23a5498b557"><div class="ttname"><a href="a00025.xhtml#aafa6e4dfa8ca7d83f2fdf23a5498b557">Voxel::CLIManager::_saveFile</a></div><div class="ttdeci">std::ofstream _saveFile</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00109">CLIManager.h:109</a></div></div>
<div class="ttc" id="a00025_xhtml_a34678edee0e02b0e5a8581f506c26456"><div class="ttname"><a href="a00025.xhtml#a34678edee0e02b0e5a8581f506c26456">Voxel::CLIManager::_setFilterParamHelp</a></div><div class="ttdeci">void _setFilterParamHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00241">CLIManager.cpp:241</a></div></div>
<div class="ttc" id="a00011_xhtml"><div class="ttname"><a href="a00011.xhtml">Voxel::BoolFilterParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="a00254_source.xhtml#l00173">FilterParameter.h:173</a></div></div>
<div class="ttc" id="a00025_xhtml_adcbed0a1696b5ea512a115f14b4e1614"><div class="ttname"><a href="a00025.xhtml#adcbed0a1696b5ea512a115f14b4e1614">Voxel::CLIManager::_exit</a></div><div class="ttdeci">void _exit(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00282">CLIManager.cpp:282</a></div></div>
<div class="ttc" id="a00181_xhtml_a99b3955c15011399b66cbf609afdbacb"><div class="ttname"><a href="a00181.xhtml#a99b3955c15011399b66cbf609afdbacb">Voxel::VideoMode::getFrameRate</a></div><div class="ttdeci">float getFrameRate() const </div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00065">VideoMode.h:65</a></div></div>
<div class="ttc" id="a00025_xhtml_a3967fe41da74162bc157ec9b0e79e63c"><div class="ttname"><a href="a00025.xhtml#a3967fe41da74162bc157ec9b0e79e63c">Voxel::CLIManager::_getParameterCompletion</a></div><div class="ttdeci">void _getParameterCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01050">CLIManager.cpp:1050</a></div></div>
<div class="ttc" id="a00025_xhtml_a6b48ba78d603ecd626e4ba380434180d"><div class="ttname"><a href="a00025.xhtml#a6b48ba78d603ecd626e4ba380434180d">Voxel::CLIManager::_getRegisterHelp</a></div><div class="ttdeci">void _getRegisterHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00229">CLIManager.cpp:229</a></div></div>
<div class="ttc" id="a00091_xhtml"><div class="ttname"><a href="a00091.xhtml">LineNoise::linenoiseCompletions</a></div><div class="ttdef"><b>Definition:</b> <a href="a00270_source.xhtml#l00053">LineNoise.h:53</a></div></div>
<div class="ttc" id="a00025_xhtml_ab476a2b4dee8c003ee19f984005afd90"><div class="ttname"><a href="a00025.xhtml#ab476a2b4dee8c003ee19f984005afd90">Voxel::CLIManager::_roi</a></div><div class="ttdeci">void _roi(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01341">CLIManager.cpp:1341</a></div></div>
<div class="ttc" id="a00381_xhtml_a1a1a8da73f602e753f773163db344b47"><div class="ttname"><a href="a00381.xhtml#a1a1a8da73f602e753f773163db344b47">LineNoise::linenoise</a></div><div class="ttdeci">char * linenoise(const char *prompt)</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l01477">LineNoise.cpp:1477</a></div></div>
<div class="ttc" id="a00025_xhtml_aac230e2719608e39cb08e69df96a93e2"><div class="ttname"><a href="a00025.xhtml#aac230e2719608e39cb08e69df96a93e2">Voxel::CLIManager::_setParameterCompletion</a></div><div class="ttdeci">void _setParameterCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01055">CLIManager.cpp:1055</a></div></div>
<div class="ttc" id="a00025_xhtml_afe8bfa5620b711acaac153337e8eb661"><div class="ttname"><a href="a00025.xhtml#afe8bfa5620b711acaac153337e8eb661">Voxel::CLIManager::_keepRunning</a></div><div class="ttdeci">bool _keepRunning</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00049">CLIManager.h:49</a></div></div>
<div class="ttc" id="a00062_xhtml_a4b809b1a18e404d041a3456f1df48e74"><div class="ttname"><a href="a00062.xhtml#a4b809b1a18e404d041a3456f1df48e74">Voxel::FilterSet::begin</a></div><div class="ttdeci">FilterSetIterator&lt; FrameType &gt; begin() const </div><div class="ttdef"><b>Definition:</b> <a href="a00255_source.xhtml#l00079">FilterSet.h:79</a></div></div>
<div class="ttc" id="a00088_xhtml"><div class="ttname"><a href="a00088.xhtml">Voxel::IntegerParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00366">Parameter.h:366</a></div></div>
<div class="ttc" id="a00390_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="a00390.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="a00274_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="a00160_xhtml_a38cdfc04eef41661cdcaec4c0870e687"><div class="ttname"><a href="a00160.xhtml#a38cdfc04eef41661cdcaec4c0870e687">Voxel::ToFRawFrame::amplitude</a></div><div class="ttdeci">virtual const uint8_t * amplitude() const =0</div></div>
<div class="ttc" id="a00025_xhtml_a1aa3152dc8f5d2419c413da18fa2613a"><div class="ttname"><a href="a00025.xhtml#a1aa3152dc8f5d2419c413da18fa2613a">Voxel::CLIManager::_disconnectHelp</a></div><div class="ttdeci">void _disconnectHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00247">CLIManager.cpp:247</a></div></div>
<div class="ttc" id="a00025_xhtml_af3558521944c2644785f80a2343b5e36"><div class="ttname"><a href="a00025.xhtml#af3558521944c2644785f80a2343b5e36">Voxel::CLIManager::_help</a></div><div class="ttdeci">void _help(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00251">CLIManager.cpp:251</a></div></div>
<div class="ttc" id="a00025_xhtml_a1caa7d89cf577f4728a114e78d1a5ba3"><div class="ttname"><a href="a00025.xhtml#a1caa7d89cf577f4728a114e78d1a5ba3">Voxel::CLIManager::_videoMode</a></div><div class="ttdeci">void _videoMode(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01437">CLIManager.cpp:1437</a></div></div>
<div class="ttc" id="a00025_xhtml_a445265afaaab8c0bbe14919bd453a7d1"><div class="ttname"><a href="a00025.xhtml#a445265afaaab8c0bbe14919bd453a7d1">Voxel::CLIManager::_setRegisterHelp</a></div><div class="ttdeci">void _setRegisterHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00230">CLIManager.cpp:230</a></div></div>
<div class="ttc" id="a00025_xhtml_a6c5a5af89c97f34ae7b117720e1e5a12"><div class="ttname"><a href="a00025.xhtml#a6c5a5af89c97f34ae7b117720e1e5a12">Voxel::CLIManager::_setParameterHelp</a></div><div class="ttdeci">void _setParameterHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00244">CLIManager.cpp:244</a></div></div>
<div class="ttc" id="a00025_xhtml_afce3e4d2158d643e933f3b85f366a42a"><div class="ttname"><a href="a00025.xhtml#afce3e4d2158d643e933f3b85f366a42a">Voxel::CLIManager::_capabilities</a></div><div class="ttdeci">void _capabilities(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00750">CLIManager.cpp:750</a></div></div>
<div class="ttc" id="a00025_xhtml_adcd019cd2d7d2f75888ab7487a910fe9"><div class="ttname"><a href="a00025.xhtml#adcd019cd2d7d2f75888ab7487a910fe9">Voxel::CLIManager::_commands</a></div><div class="ttdeci">Map&lt; String, Command &gt; _commands</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00045">CLIManager.h:45</a></div></div>
<div class="ttc" id="a00026_xhtml"><div class="ttname"><a href="a00026.xhtml">Voxel::CLIManager::Command</a></div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00035">CLIManager.h:35</a></div></div>
<div class="ttc" id="a00040_xhtml_ad357f39b645c3febf9a3710741cdabf5"><div class="ttname"><a href="a00040.xhtml#ad357f39b645c3febf9a3710741cdabf5">Voxel::DepthFrame::depth</a></div><div class="ttdeci">Vector&lt; float &gt; depth</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00058">Frame.h:58</a></div></div>
<div class="ttc" id="a00025_xhtml_a6aa5863de7fb0da3578d60a46de46033"><div class="ttname"><a href="a00025.xhtml#a6aa5863de7fb0da3578d60a46de46033">Voxel::CLIManager::_showParameterInfo</a></div><div class="ttdeci">void _showParameterInfo(const ParameterPtr &amp;param)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00812">CLIManager.cpp:812</a></div></div>
<div class="ttc" id="a00111_xhtml"><div class="ttname"><a href="a00111.xhtml">Voxel::PointCloudFrameTemplate</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00662">Frame.h:662</a></div></div>
<div class="ttc" id="a00181_xhtml"><div class="ttname"><a href="a00181.xhtml">Voxel::VideoMode</a></div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00059">VideoMode.h:59</a></div></div>
<div class="ttc" id="a00025_xhtml_aed50c5722b25bd7dbf2508bf67641dbc"><div class="ttname"><a href="a00025.xhtml#aed50c5722b25bd7dbf2508bf67641dbc">Voxel::CLIManager::run</a></div><div class="ttdeci">void run()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00069">CLIManager.cpp:69</a></div></div>
<div class="ttc" id="a00025_xhtml_a4696d0255d2b08499f47b3c64d992e1b"><div class="ttname"><a href="a00025.xhtml#a4696d0255d2b08499f47b3c64d992e1b">Voxel::CLIManager::_specialParameters</a></div><div class="ttdeci">Map&lt; String, Command &gt; _specialParameters</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00047">CLIManager.h:47</a></div></div>
<div class="ttc" id="a00381_xhtml_a5648e21adbd7aa937a3e50c32961ade4"><div class="ttname"><a href="a00381.xhtml#a5648e21adbd7aa937a3e50c32961ade4">LineNoise::linenoiseAddCompletion</a></div><div class="ttdeci">void linenoiseAddCompletion(linenoiseCompletions *lc, const char *str)</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l01158">LineNoise.cpp:1158</a></div></div>
<div class="ttc" id="a00036_xhtml_a894e0d17fd2315cf1eedc1cb60114a91"><div class="ttname"><a href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91">Voxel::DepthCamera::FrameType</a></div><div class="ttdeci">FrameType</div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00042">DepthCamera.h:42</a></div></div>
<div class="ttc" id="a00221_xhtml"><div class="ttname"><a href="a00221.xhtml">CLIManager.h</a></div></div>
<div class="ttc" id="a00390_xhtml_ga74d91a42f62a7b69d841b6cfeabeb415"><div class="ttname"><a href="a00390.xhtml#ga74d91a42f62a7b69d841b6cfeabeb415">Voxel::breakLines</a></div><div class="ttdeci">void breakLines(const String &amp;str, std::ostream &amp;out, const uint maxPerLine, const String &amp;newlinePrefix)</div><div class="ttdef"><b>Definition:</b> <a href="a00222_source.xhtml#l00059">Common.cpp:59</a></div></div>
<div class="ttc" id="a00118_xhtml"><div class="ttname"><a href="a00118.xhtml">Voxel::RawDataFrame</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00563">Frame.h:563</a></div></div>
<div class="ttc" id="a00036_xhtml_a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01"><div class="ttname"><a href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91a899ea2c60df1534cd9b8147a3ddfdf01">Voxel::DepthCamera::FRAME_RAW_FRAME_PROCESSED</a></div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00045">DepthCamera.h:45</a></div></div>
<div class="ttc" id="a00025_xhtml_a25bfff4487bfb531f1a7d42594b682c0"><div class="ttname"><a href="a00025.xhtml#a25bfff4487bfb531f1a7d42594b682c0">Voxel::CLIManager::_setFilterParam</a></div><div class="ttdeci">void _setFilterParam(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01871">CLIManager.cpp:1871</a></div></div>
<div class="ttc" id="a00381_xhtml_a77ae76b19f91154937daaf925e725a44"><div class="ttname"><a href="a00381.xhtml#a77ae76b19f91154937daaf925e725a44">LineNoise::linenoiseSetCompletionCallback</a></div><div class="ttdeci">LinenoiseCompletionCallback linenoiseSetCompletionCallback(LinenoiseCompletionCallback fn)</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l01152">LineNoise.cpp:1152</a></div></div>
<div class="ttc" id="a00025_xhtml_ab2500972b2b1d5be67c22657f8f00a01"><div class="ttname"><a href="a00025.xhtml#ab2500972b2b1d5be67c22657f8f00a01">Voxel::CLIManager::_list</a></div><div class="ttdeci">void _list(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00288">CLIManager.cpp:288</a></div></div>
<div class="ttc" id="a00023_xhtml_a5c6f46b1446564f205e75d0e21c10f15"><div class="ttname"><a href="a00023.xhtml#a5c6f46b1446564f205e75d0e21c10f15">Voxel::CameraSystem::createFilter</a></div><div class="ttdeci">FilterPtr createFilter(const String &amp;name, DepthCamera::FrameType type)</div><div class="ttdef"><b>Definition:</b> <a href="a00213_source.xhtml#l00307">CameraSystem.cpp:307</a></div></div>
<div class="ttc" id="a00025_xhtml_a2362fe206bde3cf40c9dbcac61284ebc"><div class="ttname"><a href="a00025.xhtml#a2362fe206bde3cf40c9dbcac61284ebc">Voxel::CLIManager::_listHelp</a></div><div class="ttdeci">void _listHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00225">CLIManager.cpp:225</a></div></div>
<div class="ttc" id="a00025_xhtml_af6aad1a812d394b8e2bcb79df60b3976"><div class="ttname"><a href="a00025.xhtml#af6aad1a812d394b8e2bcb79df60b3976">Voxel::CLIManager::_disconnect</a></div><div class="ttdeci">void _disconnect(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01303">CLIManager.cpp:1303</a></div></div>
<div class="ttc" id="a00396_xhtml"><div class="ttname"><a href="a00396.xhtml">float</a></div></div>
<div class="ttc" id="a00025_xhtml_a7405f3b9c1589d2f343e93f13eadec3e"><div class="ttname"><a href="a00025.xhtml#a7405f3b9c1589d2f343e93f13eadec3e">Voxel::CLIManager::_showFilterSet</a></div><div class="ttdeci">void _showFilterSet(const FilterSet&lt; T &gt; &amp;filterSet)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01527">CLIManager.cpp:1527</a></div></div>
<div class="ttc" id="a00025_xhtml_a82c90ebee06e7444323318eeaa41e18d"><div class="ttname"><a href="a00025.xhtml#a82c90ebee06e7444323318eeaa41e18d">Voxel::CLIManager::_completionCallback</a></div><div class="ttdeci">void _completionCallback(const char *buf, LineNoise::linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00942">CLIManager.cpp:942</a></div></div>
<div class="ttc" id="a00025_xhtml_aa88324c7fb0c96ece91f5125f0cd071c"><div class="ttname"><a href="a00025.xhtml#aa88324c7fb0c96ece91f5125f0cd071c">Voxel::CLIManager::_getTokens</a></div><div class="ttdeci">void _getTokens(const char *command, Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00148">CLIManager.cpp:148</a></div></div>
<div class="ttc" id="a00025_xhtml_ade2c73e82b7148ab8e998fb89fbfb858"><div class="ttname"><a href="a00025.xhtml#ade2c73e82b7148ab8e998fb89fbfb858">Voxel::CLIManager::_connect</a></div><div class="ttdeci">void _connect(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00309">CLIManager.cpp:309</a></div></div>
<div class="ttc" id="a00104_xhtml_aedbf1780d431db5cc50874213e602223"><div class="ttname"><a href="a00104.xhtml#aedbf1780d431db5cc50874213e602223">Voxel::PCLGrabber::DepthImageCallBack</a></div><div class="ttdeci">void( DepthImageCallBack)(const Voxel::DepthFrame &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="a00283_source.xhtml#l00025">PCLGrabber.h:25</a></div></div>
<div class="ttc" id="a00025_xhtml_a204852ed7f5a5adf187670c2bb324032"><div class="ttname"><a href="a00025.xhtml#a204852ed7f5a5adf187670c2bb324032">Voxel::CLIManager::_helpHelp</a></div><div class="ttdeci">void _helpHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00221">CLIManager.cpp:221</a></div></div>
<div class="ttc" id="a00025_xhtml_a3f2531910575641c586e936fd165b9a1"><div class="ttname"><a href="a00025.xhtml#a3f2531910575641c586e936fd165b9a1">Voxel::CLIManager::_saveCompletion</a></div><div class="ttdeci">void _saveCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01276">CLIManager.cpp:1276</a></div></div>
<div class="ttc" id="a00025_xhtml_a00d8fae3a44b95a991330b401ffc6cd2"><div class="ttname"><a href="a00025.xhtml#a00d8fae3a44b95a991330b401ffc6cd2">Voxel::CLIManager::_setFilterParamCompletion</a></div><div class="ttdeci">void _setFilterParamCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01899">CLIManager.cpp:1899</a></div></div>
<div class="ttc" id="a00117_xhtml_a5748dd5aee4616996abbecd8b603af2c"><div class="ttname"><a href="a00117.xhtml#a5748dd5aee4616996abbecd8b603af2c">Voxel::RangeParameterTemplate::lowerLimit</a></div><div class="ttdeci">virtual const T lowerLimit() const </div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00342">Parameter.h:342</a></div></div>
<div class="ttc" id="a00023_xhtml_ad26fad5d70ee748d0492184da757d5be"><div class="ttname"><a href="a00023.xhtml#ad26fad5d70ee748d0492184da757d5be">Voxel::CameraSystem::scan</a></div><div class="ttdeci">Vector&lt; DevicePtr &gt; scan()</div><div class="ttdef"><b>Definition:</b> <a href="a00213_source.xhtml#l00240">CameraSystem.cpp:240</a></div></div>
<div class="ttc" id="a00025_xhtml_a65c5b6b4edb9779b8449e388d91ae2c5"><div class="ttname"><a href="a00025.xhtml#a65c5b6b4edb9779b8449e388d91ae2c5">Voxel::CLIManager::_addFilterCompletion</a></div><div class="ttdeci">void _addFilterCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01696">CLIManager.cpp:1696</a></div></div>
<div class="ttc" id="a00025_xhtml_a3d764a6045563afe3acff232fa65c799"><div class="ttname"><a href="a00025.xhtml#a3d764a6045563afe3acff232fa65c799">Voxel::CLIManager::_currentHelp</a></div><div class="ttdeci">void _currentHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00226">CLIManager.cpp:226</a></div></div>
<div class="ttc" id="a00025_xhtml_a994bb82b526a32ea8c569f223b332b00"><div class="ttname"><a href="a00025.xhtml#a994bb82b526a32ea8c569f223b332b00">Voxel::CLIManager::_currentDepthCamera</a></div><div class="ttdeci">DepthCameraPtr _currentDepthCamera</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00031">CLIManager.h:31</a></div></div>
<div class="ttc" id="a00025_xhtml_a5d14efc968f47fdde89407e5b38d412c"><div class="ttname"><a href="a00025.xhtml#a5d14efc968f47fdde89407e5b38d412c">Voxel::CLIManager::_saveFileName</a></div><div class="ttdeci">String _saveFileName</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00110">CLIManager.h:110</a></div></div>
<div class="ttc" id="a00025_xhtml_accc24e532a9fb16cb7f5df81bd2709c9"><div class="ttname"><a href="a00025.xhtml#accc24e532a9fb16cb7f5df81bd2709c9">Voxel::CLIManager::_commandLoop</a></div><div class="ttdeci">void _commandLoop()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00083">CLIManager.cpp:83</a></div></div>
<div class="ttc" id="a00101_xhtml_aae7b0d1bc8163235367a0d780ea7aa4da35b42c0a9497587608f019b9e6ac7f23"><div class="ttname"><a href="a00101.xhtml#aae7b0d1bc8163235367a0d780ea7aa4da35b42c0a9497587608f019b9e6ac7f23">Voxel::Parameter::IO_READ_ONLY</a></div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00035">Parameter.h:35</a></div></div>
<div class="ttc" id="a00160_xhtml_a71129221a2aadc0e1ca8551ac11ef5cd"><div class="ttname"><a href="a00160.xhtml#a71129221a2aadc0e1ca8551ac11ef5cd">Voxel::ToFRawFrame::ambientWordWidth</a></div><div class="ttdeci">virtual SizeType ambientWordWidth() const =0</div></div>
<div class="ttc" id="a00036_xhtml_a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a"><div class="ttname"><a href="a00036.xhtml#a894e0d17fd2315cf1eedc1cb60114a91ad3df8f8da8dd9f9db3adaaf0d064a65a">Voxel::DepthCamera::FRAME_DEPTH_FRAME</a></div><div class="ttdef"><b>Definition:</b> <a href="a00234_source.xhtml#l00046">DepthCamera.h:46</a></div></div>
<div class="ttc" id="a00025_xhtml_a4dcb63be6f7092be8ba002f7e102a98b"><div class="ttname"><a href="a00025.xhtml#a4dcb63be6f7092be8ba002f7e102a98b">Voxel::CLIManager::_sys</a></div><div class="ttdeci">CameraSystem &amp; _sys</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00029">CLIManager.h:29</a></div></div>
<div class="ttc" id="a00181_xhtml_afb470b6a3a2e8fc7770ae7373fa8fe61"><div class="ttname"><a href="a00181.xhtml#afb470b6a3a2e8fc7770ae7373fa8fe61">Voxel::VideoMode::frameRate</a></div><div class="ttdeci">FrameRate frameRate</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00063">VideoMode.h:63</a></div></div>
<div class="ttc" id="a00069_xhtml_a0423f6c7e1e11a552cb08147bfd93cd0"><div class="ttname"><a href="a00069.xhtml#a0423f6c7e1e11a552cb08147bfd93cd0">Voxel::FrameRate::numerator</a></div><div class="ttdeci">uint32_t numerator</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00054">VideoMode.h:54</a></div></div>
<div class="ttc" id="a00071_xhtml_ac3d47cd9b7887dc3de31d95c7b39e8a7"><div class="ttname"><a href="a00071.xhtml#ac3d47cd9b7887dc3de31d95c7b39e8a7">Voxel::FrameSize::width</a></div><div class="ttdeci">uint32_t width</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00022">VideoMode.h:22</a></div></div>
<div class="ttc" id="a00378_xhtml_ac2abb9d1e1e9e639f1bd83f5342d44c2"><div class="ttname"><a href="a00378.xhtml#ac2abb9d1e1e9e639f1bd83f5342d44c2">CameraSystemIQFrameTest.count</a></div><div class="ttdeci">tuple count</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00030">CameraSystemIQFrameTest.py:30</a></div></div>
<div class="ttc" id="a00025_xhtml_a5eb9711b9a17e7d5493c7cfdffedc693"><div class="ttname"><a href="a00025.xhtml#a5eb9711b9a17e7d5493c7cfdffedc693">Voxel::CLIManager::_addFilter</a></div><div class="ttdeci">void _addFilter(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01668">CLIManager.cpp:1668</a></div></div>
<div class="ttc" id="a00065_xhtml_a8339cded2671a836fdfd1b9f8b4e3a22"><div class="ttname"><a href="a00065.xhtml#a8339cded2671a836fdfd1b9f8b4e3a22">Voxel::Frame::id</a></div><div class="ttdeci">int id</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00030">Frame.h:30</a></div></div>
<div class="ttc" id="a00103_xhtml_a64240b607339f55c4fac973fba8c8934"><div class="ttname"><a href="a00103.xhtml#a64240b607339f55c4fac973fba8c8934">Voxel::ParameterTemplate::set</a></div><div class="ttdeci">virtual bool set(const T &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00118">Parameter.h:118</a></div></div>
<div class="ttc" id="a00025_xhtml_a1f200e3b644fd73fa27726be890ee72b"><div class="ttname"><a href="a00025.xhtml#a1f200e3b644fd73fa27726be890ee72b">Voxel::CLIManager::_connectCompletion</a></div><div class="ttdeci">void _connectCompletion(const Vector&lt; String &gt; &amp;tokens, linenoiseCompletions *lc)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00973">CLIManager.cpp:973</a></div></div>
<div class="ttc" id="a00069_xhtml_abce5ac3ab79442b76758484110258e82"><div class="ttname"><a href="a00069.xhtml#abce5ac3ab79442b76758484110258e82">Voxel::FrameRate::denominator</a></div><div class="ttdeci">uint32_t denominator</div><div class="ttdef"><b>Definition:</b> <a href="a00359_source.xhtml#l00054">VideoMode.h:54</a></div></div>
<div class="ttc" id="a00025_xhtml_a546678078f45c0e159a44ad5545addf0"><div class="ttname"><a href="a00025.xhtml#a546678078f45c0e159a44ad5545addf0">Voxel::CLIManager::_count</a></div><div class="ttdeci">int _count</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00111">CLIManager.h:111</a></div></div>
<div class="ttc" id="a00025_xhtml_aa6fff6df6924e6a0bb48f4625c8e02d4"><div class="ttname"><a href="a00025.xhtml#aa6fff6df6924e6a0bb48f4625c8e02d4">Voxel::CLIManager::_filtersHelp</a></div><div class="ttdeci">void _filtersHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00235">CLIManager.cpp:235</a></div></div>
<div class="ttc" id="a00023_xhtml_ab685fb4639d124ee11aa7cd64ab02f00"><div class="ttname"><a href="a00023.xhtml#ab685fb4639d124ee11aa7cd64ab02f00">Voxel::CameraSystem::connect</a></div><div class="ttdeci">DepthCameraPtr connect(const DevicePtr &amp;device)</div><div class="ttdef"><b>Definition:</b> <a href="a00213_source.xhtml#l00274">CameraSystem.cpp:274</a></div></div>
<div class="ttc" id="a00059_xhtml"><div class="ttname"><a href="a00059.xhtml">Voxel::FilterParameterEnumTemplate</a></div><div class="ttdef"><b>Definition:</b> <a href="a00254_source.xhtml#l00129">FilterParameter.h:129</a></div></div>
<div class="ttc" id="a00160_xhtml_af85f22109d62a47ec5843437558fa90c"><div class="ttname"><a href="a00160.xhtml#af85f22109d62a47ec5843437558fa90c">Voxel::ToFRawFrame::amplitudeWordWidth</a></div><div class="ttdeci">virtual SizeType amplitudeWordWidth() const =0</div></div>
<div class="ttc" id="a00062_xhtml_a40382f422b79fa91d2000c2b81e8c5e6"><div class="ttname"><a href="a00062.xhtml#a40382f422b79fa91d2000c2b81e8c5e6">Voxel::FilterSet::end</a></div><div class="ttdeci">FilterSetIterator&lt; FrameType &gt; end() const </div><div class="ttdef"><b>Definition:</b> <a href="a00255_source.xhtml#l00084">FilterSet.h:84</a></div></div>
<div class="ttc" id="a00160_xhtml_ae7af388081471b5a1218a6b19f889fa5"><div class="ttname"><a href="a00160.xhtml#ae7af388081471b5a1218a6b19f889fa5">Voxel::ToFRawFrame::size</a></div><div class="ttdeci">FrameSize size</div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00191">Frame.h:191</a></div></div>
<div class="ttc" id="a00379_xhtml_a08de9201448d0d16e6d0293a288b965c"><div class="ttname"><a href="a00379.xhtml#a08de9201448d0d16e6d0293a288b965c">CameraSystemTest.sys</a></div><div class="ttdeci">tuple sys</div><div class="ttdef"><b>Definition:</b> <a href="a00219_source.xhtml#l00010">CameraSystemTest.py:10</a></div></div>
<div class="ttc" id="a00025_xhtml_aab5267bf1e3a161b078e4ae88abd273d"><div class="ttname"><a href="a00025.xhtml#aab5267bf1e3a161b078e4ae88abd273d">Voxel::CLIManager::_current</a></div><div class="ttdeci">void _current(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00357">CLIManager.cpp:357</a></div></div>
<div class="ttc" id="a00025_xhtml_a233b04bcca8da70da2ee02b42120c465"><div class="ttname"><a href="a00025.xhtml#a233b04bcca8da70da2ee02b42120c465">Voxel::CLIManager::_getRegister</a></div><div class="ttdeci">void _getRegister(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00671">CLIManager.cpp:671</a></div></div>
<div class="ttc" id="a00160_xhtml_a62d21aa88579379c97a51b40ff370f05"><div class="ttname"><a href="a00160.xhtml#a62d21aa88579379c97a51b40ff370f05">Voxel::ToFRawFrame::ambient</a></div><div class="ttdeci">virtual const uint8_t * ambient() const =0</div></div>
<div class="ttc" id="a00025_xhtml_ab47e49d6a6a17a1315b0d4b650da87be"><div class="ttname"><a href="a00025.xhtml#ab47e49d6a6a17a1315b0d4b650da87be">Voxel::CLIManager::_stop</a></div><div class="ttdeci">void _stop(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00398">CLIManager.cpp:398</a></div></div>
<div class="ttc" id="a00025_xhtml_a09d0a960edd0bc8bf47b3977241c572b"><div class="ttname"><a href="a00025.xhtml#a09d0a960edd0bc8bf47b3977241c572b">Voxel::CLIManager::_resetHelp</a></div><div class="ttdeci">void _resetHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00248">CLIManager.cpp:248</a></div></div>
<div class="ttc" id="a00064_xhtml"><div class="ttname"><a href="a00064.xhtml">Voxel::FloatParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00405">Parameter.h:405</a></div></div>
<div class="ttc" id="a00025_xhtml_a81e1d4106d753f79a9077df245ece3b7"><div class="ttname"><a href="a00025.xhtml#a81e1d4106d753f79a9077df245ece3b7">Voxel::CLIManager::_reset</a></div><div class="ttdeci">void _reset(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01511">CLIManager.cpp:1511</a></div></div>
<div class="ttc" id="a00025_xhtml_ac5b3590f9259f86ee3cab93e563d3987"><div class="ttname"><a href="a00025.xhtml#ac5b3590f9259f86ee3cab93e563d3987">Voxel::CLIManager::_save</a></div><div class="ttdeci">void _save(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01060">CLIManager.cpp:1060</a></div></div>
<div class="ttc" id="a00025_xhtml_a365614bf2126c72f086eb77c935daf66"><div class="ttname"><a href="a00025.xhtml#a365614bf2126c72f086eb77c935daf66">Voxel::CLIManager::_exitHelp</a></div><div class="ttdeci">void _exitHelp()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l00222">CLIManager.cpp:222</a></div></div>
<div class="ttc" id="a00025_xhtml_afd55259d54922282cc0405ddfaf07739"><div class="ttname"><a href="a00025.xhtml#afd55259d54922282cc0405ddfaf07739">Voxel::CLIManager::_removeFilter</a></div><div class="ttdeci">void _removeFilter(const Vector&lt; String &gt; &amp;tokens)</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01744">CLIManager.cpp:1744</a></div></div>
<div class="ttc" id="a00117_xhtml_abb8c7dc72be4ed50f400dc4ee440fd2f"><div class="ttname"><a href="a00117.xhtml#abb8c7dc72be4ed50f400dc4ee440fd2f">Voxel::RangeParameterTemplate::upperLimit</a></div><div class="ttdeci">virtual const T upperLimit() const </div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00343">Parameter.h:343</a></div></div>
<div class="ttc" id="a00025_xhtml_a875de7a43e41153295ec1414e70eb1d8"><div class="ttname"><a href="a00025.xhtml#a875de7a43e41153295ec1414e70eb1d8">Voxel::CLIManager::_roiCapabilities</a></div><div class="ttdeci">void _roiCapabilities()</div><div class="ttdef"><b>Definition:</b> <a href="a00220_source.xhtml#l01317">CLIManager.cpp:1317</a></div></div>
<div class="ttc" id="a00109_xhtml"><div class="ttname"><a href="a00109.xhtml">Voxel::PointCloudFrame</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00645">Frame.h:645</a></div></div>
<div class="ttc" id="a00380_xhtml_a0013363a9b9db12e50b9307b3d8be7cb"><div class="ttname"><a href="a00380.xhtml#a0013363a9b9db12e50b9307b3d8be7cb">LensCalibrationTest.x</a></div><div class="ttdeci">tuple x</div><div class="ttdef"><b>Definition:</b> <a href="a00268_source.xhtml#l00021">LensCalibrationTest.py:21</a></div></div>
<div class="ttc" id="a00119_xhtml"><div class="ttname"><a href="a00119.xhtml">Voxel::RawFrame</a></div><div class="ttdef"><b>Definition:</b> <a href="a00256_source.xhtml#l00149">Frame.h:149</a></div></div>
<div class="ttc" id="a00160_xhtml_a7f51f217b13dddc61ceec2270dbfcf2f"><div class="ttname"><a href="a00160.xhtml#a7f51f217b13dddc61ceec2270dbfcf2f">Voxel::ToFRawFrame::flagsWordWidth</a></div><div class="ttdeci">virtual SizeType flagsWordWidth() const =0</div></div>
<div class="ttc" id="a00023_xhtml_aa4383a5805d1bfcb6ee71458f6e26bcc"><div class="ttname"><a href="a00023.xhtml#aa4383a5805d1bfcb6ee71458f6e26bcc">Voxel::CameraSystem::disconnect</a></div><div class="ttdeci">bool disconnect(const DepthCameraPtr &amp;depthCamera, bool reset=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00213_source.xhtml#l00323">CameraSystem.cpp:323</a></div></div>
<div class="ttc" id="a00160_xhtml_ab66f7bd205a6a5c16b0a47aedc00a7b4"><div class="ttname"><a href="a00160.xhtml#ab66f7bd205a6a5c16b0a47aedc00a7b4">Voxel::ToFRawFrame::phase</a></div><div class="ttdeci">virtual const uint8_t * phase() const =0</div></div>
<div class="ttc" id="a00012_xhtml"><div class="ttname"><a href="a00012.xhtml">Voxel::BoolParameter</a></div><div class="ttdef"><b>Definition:</b> <a href="a00279_source.xhtml#l00224">Parameter.h:224</a></div></div>
<div class="ttc" id="a00062_xhtml"><div class="ttname"><a href="a00062.xhtml">Voxel::FilterSet</a></div><div class="ttdef"><b>Definition:</b> <a href="a00255_source.xhtml#l00021">FilterSet.h:21</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 12 2015 21:49:55 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
