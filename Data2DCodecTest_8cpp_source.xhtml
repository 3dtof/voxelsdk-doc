<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Voxel: Data2DCodecTest.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voxel
   &#160;<span id="projectnumber">0.5.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_37618a71d99bdfed5979e976980d5eec.xhtml">Test</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Data2DCodecTest.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Data2DCodecTest_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * TI Voxel Lib component.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (c) 2014 Texas Instruments Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Data2DCodec_8h.xhtml">Data2DCodec.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;SimpleOpt.h&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Common_8h.xhtml">Common.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Logger_8h.xhtml">Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;iomanip&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using namespace </span>Voxel;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99">   18</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99">Options</a></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea">   20</a></span>&#160;  <a class="code" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea">PHASE_OFFSET_FILE_NAME</a> = 0,</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6">   21</a></span>&#160;  <a class="code" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6">OUTPUT_FILE_NAME</a> = 3</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;};</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="Data2DCodecTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">   24</a></span>&#160;<a class="code" href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Vector&lt;CSimpleOpt::SOption&gt;</a> <a class="code" href="Data2DCodecTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a> = </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  { <a class="code" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea">PHASE_OFFSET_FILE_NAME</a>,  <span class="stringliteral">&quot;-p&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;Phase offset input file name&quot;</span>}, </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  { <a class="code" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6">OUTPUT_FILE_NAME</a>,        <span class="stringliteral">&quot;-o&quot;</span>, SO_REQ_SEP, <span class="stringliteral">&quot;Output file name&quot;</span>},</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  SO_END_OF_OPTIONS</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;};</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="Data2DCodecTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">   31</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="Data2DCodecTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>()</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Data2DCodecTest v1.0&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  CSimpleOpt::SOption *option = <a class="code" href="Data2DCodecTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a>.data();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordflow">while</span>(option-&gt;nId &gt;= 0)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    std::cout &lt;&lt; option-&gt;pszArg &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; option-&gt;helpInfo &lt;&lt; std::endl;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    option++;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="Data2DCodecTest_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">   45</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="Data2DCodecTest_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  CSimpleOpt s(argc, argv, <a class="code" href="Data2DCodecTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>.<a class="code" href="classVoxel_1_1Logger.xhtml#a24cc93971582344584a5c9064d897cbe">setDefaultLogLevel</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">LOG_DEBUG</a>);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <a class="code" href="classString.xhtml">String</a> phaseOffsetFileName, outputFileName;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  uint16_t rows = 0, columns = 0;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">char</span> *endptr;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">while</span> (s.Next())</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span> (s.LastError() != SO_SUCCESS)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      std::cout &lt;&lt; s.GetLastErrorText(s.LastError()) &lt;&lt; <span class="stringliteral">&quot;: &#39;&quot;</span> &lt;&lt; s.OptionText() &lt;&lt; <span class="stringliteral">&quot;&#39; (use -h to get command line help)&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <a class="code" href="Data2DCodecTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">//std::cout &lt;&lt; s.OptionId() &lt;&lt; &quot;: &quot; &lt;&lt; s.OptionArg() &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classVector_3_01String_01_4.xhtml">Vector&lt;String&gt;</a> splits;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">switch</span> (s.OptionId())</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea">PHASE_OFFSET_FILE_NAME</a>:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        phaseOffsetFileName = s.OptionArg();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6">OUTPUT_FILE_NAME</a>:</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        outputFileName = s.OptionArg();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="Data2DCodecTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    };</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordflow">if</span>(phaseOffsetFileName.size() == 0 || outputFileName.size() == 0)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Required argument missing.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="Data2DCodecTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <a class="code" href="group__Util.xhtml#gaf37e7f5948ef68c00b6597335b3eedc4">InputFileStream</a> p(phaseOffsetFileName, std::ios::binary | std::ios::ate);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordflow">if</span>(!p.good())</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to open &#39;&quot;</span> &lt;&lt; phaseOffsetFileName &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <a class="code" href="classVoxel_1_1Data2DCodec.xhtml#a44af60ef9ca7e9889c4cc09cffde9ee8">Data2DCodec::Array2D</a> phaseOffsets;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <a class="code" href="classVoxel_1_1Data2DCodec.xhtml#aebdd2f897283ea3bee494ed3cfec2328">Data2DCodec::ArrayBool2D</a> invalidPixels;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">size_t</span> size = p.tellg();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  size -= 4; <span class="comment">// for uint16_t row, column</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  p.seekg(0, std::ios::beg);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  p.clear();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordflow">if</span>(!p.good())</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  p.read((<span class="keywordtype">char</span> *)&amp;rows, <span class="keyword">sizeof</span>(uint16_t));</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  p.read((<span class="keywordtype">char</span> *)&amp;columns, <span class="keyword">sizeof</span>(uint16_t));</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  p.seekg(0, std::ios::beg);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  p.clear();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordflow">if</span>(size == rows*columns*2)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    phaseOffsets.resize(size/2 + 2); <span class="comment">// int16_t data</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    p.read((<span class="keywordtype">char</span> *)phaseOffsets.data(), size + 4);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordflow">else</span> <span class="keywordflow">if</span>(size = rows*columns*3) <span class="comment">// including invalid pixel boolean 2D array?</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    phaseOffsets.resize(size/3 + 2); <span class="comment">// int16_t data</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    invalidPixels.resize(size/3);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    p.read((<span class="keywordtype">char</span> *)phaseOffsets.data(), (size*2)/3 + 4);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    p.read((<span class="keywordtype">char</span> *)invalidPixels.data(), size/3);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  p.close();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <a class="code" href="classVoxel_1_1Data2DCodec.xhtml">Data2DCodec</a> dc;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <a class="code" href="classVoxel_1_1Data2DCodec.xhtml#a2ebae68b9bb6653938e5d87850cd37d2">Data2DCodec::ByteArray</a> output;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordflow">if</span>(!dc.<a class="code" href="classVoxel_1_1Data2DCodec.xhtml#a371575e583f23b65cc1a50e8ae78d6b8">compress</a>(phaseOffsets, invalidPixels, output))</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to compress phase offset data&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  std::cout &lt;&lt; <span class="stringliteral">&quot;Total number of bytes in compressed format = &quot;</span> &lt;&lt; output.size() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <a class="code" href="group__Util.xhtml#gac9285678d341a751b35b85faaaa8248f">OutputFileStream</a> out(outputFileName, std::ios::out | std::ios::binary);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">if</span>(!out.good())</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Could not open output file &#39;&quot;</span> &lt;&lt; outputFileName &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  out.write((<span class="keyword">const</span> <span class="keywordtype">char</span> *)output.data(), output.size());</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  out.close();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">if</span>(!dc.<a class="code" href="classVoxel_1_1Data2DCodec.xhtml#af19bf3b5b14e9010e924a7d2125120c9">decompress</a>(output, phaseOffsets))</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">logger</a>(<a class="code" href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">LOG_ERROR</a>) &lt;&lt; <span class="stringliteral">&quot;Failed to decompress phase offset data&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="ttc" id="classVoxel_1_1Data2DCodec_xhtml"><div class="ttname"><a href="classVoxel_1_1Data2DCodec.xhtml">Voxel::Data2DCodec</a></div><div class="ttdoc">This class is used for compressing and decompressing 16-bit signed data. </div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodec_8h_source.xhtml#l00030">Data2DCodec.h:30</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758af4c6ba01016461e517b94a39b66be0b0">Voxel::LOG_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00027">Logger.h:27</a></div></div>
<div class="ttc" id="Data2DCodecTest_8cpp_xhtml_a97ee70a8770dc30d06c744b24eb2fcfc"><div class="ttname"><a href="Data2DCodecTest_8cpp.xhtml#a97ee70a8770dc30d06c744b24eb2fcfc">help</a></div><div class="ttdeci">void help()</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodecTest_8cpp_source.xhtml#l00031">Data2DCodecTest.cpp:31</a></div></div>
<div class="ttc" id="group__Util_xhtml_ga8a21cf7475356ae552da8952ebf885b4"><div class="ttname"><a href="group__Util.xhtml#ga8a21cf7475356ae552da8952ebf885b4">Voxel::Vector</a></div><div class="ttdeci">std::vector&lt; T &gt; Vector</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00051">Common.h:51</a></div></div>
<div class="ttc" id="Data2DCodecTest_8cpp_xhtml_a7055ab3ff9a1857b4a934d2523cae5d2"><div class="ttname"><a href="Data2DCodecTest_8cpp.xhtml#a7055ab3ff9a1857b4a934d2523cae5d2">argumentSpecifications</a></div><div class="ttdeci">Vector&lt; CSimpleOpt::SOption &gt; argumentSpecifications</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodecTest_8cpp_source.xhtml#l00024">Data2DCodecTest.cpp:24</a></div></div>
<div class="ttc" id="classVoxel_1_1Data2DCodec_xhtml_a44af60ef9ca7e9889c4cc09cffde9ee8"><div class="ttname"><a href="classVoxel_1_1Data2DCodec.xhtml#a44af60ef9ca7e9889c4cc09cffde9ee8">Voxel::Data2DCodec::Array2D</a></div><div class="ttdeci">Vector&lt; Array2DElementType &gt; Array2D</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodec_8h_source.xhtml#l00046">Data2DCodec.h:46</a></div></div>
<div class="ttc" id="Common_8h_xhtml"><div class="ttname"><a href="Common_8h.xhtml">Common.h</a></div></div>
<div class="ttc" id="Data2DCodecTest_8cpp_xhtml_a0ddf1224851353fc92bfbff6f499fa97"><div class="ttname"><a href="Data2DCodecTest_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a></div><div class="ttdeci">int main(int argc, char *argv[])</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodecTest_8cpp_source.xhtml#l00045">Data2DCodecTest.cpp:45</a></div></div>
<div class="ttc" id="Logger_8h_xhtml"><div class="ttname"><a href="Logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="classVector_3_01String_01_4_xhtml"><div class="ttname"><a href="classVector_3_01String_01_4.xhtml">Vector&lt; String &gt;</a></div></div>
<div class="ttc" id="group__Util_xhtml_gac9285678d341a751b35b85faaaa8248f"><div class="ttname"><a href="group__Util.xhtml#gac9285678d341a751b35b85faaaa8248f">Voxel::OutputFileStream</a></div><div class="ttdeci">std::ofstream OutputFileStream</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00101">Common.h:101</a></div></div>
<div class="ttc" id="classVoxel_1_1Logger_xhtml_a24cc93971582344584a5c9064d897cbe"><div class="ttname"><a href="classVoxel_1_1Logger.xhtml#a24cc93971582344584a5c9064d897cbe">Voxel::Logger::setDefaultLogLevel</a></div><div class="ttdeci">void setDefaultLogLevel(LogLevel loglevel)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00110">Logger.h:110</a></div></div>
<div class="ttc" id="classVoxel_1_1Data2DCodec_xhtml_a371575e583f23b65cc1a50e8ae78d6b8"><div class="ttname"><a href="classVoxel_1_1Data2DCodec.xhtml#a371575e583f23b65cc1a50e8ae78d6b8">Voxel::Data2DCodec::compress</a></div><div class="ttdeci">bool compress(const Array2D &amp;in, const ArrayBool2D &amp;invalidPixels, ByteArray &amp;out)</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodec_8cpp_source.xhtml#l00196">Data2DCodec.cpp:196</a></div></div>
<div class="ttc" id="group__Util_xhtml_gabd012fcbae5565e03008afef1fd4f261"><div class="ttname"><a href="group__Util.xhtml#gabd012fcbae5565e03008afef1fd4f261">Voxel::logger</a></div><div class="ttdeci">Logger logger(LOG_WARNING)</div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00180">Logger.h:180</a></div></div>
<div class="ttc" id="Data2DCodecTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea"><div class="ttname"><a href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99a2be9d701d448b01c22d71efaa821dfea">PHASE_OFFSET_FILE_NAME</a></div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodecTest_8cpp_source.xhtml#l00020">Data2DCodecTest.cpp:20</a></div></div>
<div class="ttc" id="group__Util_xhtml_gaf37e7f5948ef68c00b6597335b3eedc4"><div class="ttname"><a href="group__Util.xhtml#gaf37e7f5948ef68c00b6597335b3eedc4">Voxel::InputFileStream</a></div><div class="ttdeci">std::ifstream InputFileStream</div><div class="ttdef"><b>Definition:</b> <a href="Common_8h_source.xhtml#l00100">Common.h:100</a></div></div>
<div class="ttc" id="classVoxel_1_1Data2DCodec_xhtml_af19bf3b5b14e9010e924a7d2125120c9"><div class="ttname"><a href="classVoxel_1_1Data2DCodec.xhtml#af19bf3b5b14e9010e924a7d2125120c9">Voxel::Data2DCodec::decompress</a></div><div class="ttdeci">bool decompress(const ByteArray &amp;in, Array2D &amp;out)</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodec_8cpp_source.xhtml#l00359">Data2DCodec.cpp:359</a></div></div>
<div class="ttc" id="group__Util_xhtml_gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a"><div class="ttname"><a href="group__Util.xhtml#gga3b552e0c33cfe1ca3a0752dbd986b758ad625895b380d0d8fc7ef71ef75429b7a">Voxel::LOG_DEBUG</a></div><div class="ttdef"><b>Definition:</b> <a href="Logger_8h_source.xhtml#l00030">Logger.h:30</a></div></div>
<div class="ttc" id="classVoxel_1_1Data2DCodec_xhtml_a2ebae68b9bb6653938e5d87850cd37d2"><div class="ttname"><a href="classVoxel_1_1Data2DCodec.xhtml#a2ebae68b9bb6653938e5d87850cd37d2">Voxel::Data2DCodec::ByteArray</a></div><div class="ttdeci">Vector&lt; ByteType &gt; ByteArray</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodec_8h_source.xhtml#l00043">Data2DCodec.h:43</a></div></div>
<div class="ttc" id="Data2DCodecTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6"><div class="ttname"><a href="Data2DCodecTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99acb8f58859b911ec1a031f43ca69bfee6">OUTPUT_FILE_NAME</a></div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodecTest_8cpp_source.xhtml#l00021">Data2DCodecTest.cpp:21</a></div></div>
<div class="ttc" id="classVoxel_1_1Data2DCodec_xhtml_aebdd2f897283ea3bee494ed3cfec2328"><div class="ttname"><a href="classVoxel_1_1Data2DCodec.xhtml#aebdd2f897283ea3bee494ed3cfec2328">Voxel::Data2DCodec::ArrayBool2D</a></div><div class="ttdeci">Vector&lt; uint8_t &gt; ArrayBool2D</div><div class="ttdef"><b>Definition:</b> <a href="Data2DCodec_8h_source.xhtml#l00044">Data2DCodec.h:44</a></div></div>
<div class="ttc" id="Data2DCodec_8h_xhtml"><div class="ttname"><a href="Data2DCodec_8h.xhtml">Data2DCodec.h</a></div></div>
<div class="ttc" id="classString_xhtml"><div class="ttname"><a href="classString.xhtml">String</a></div></div>
<div class="ttc" id="CameraSystemConfigTest_8cpp_xhtml_adf7c3ac791f996a56160a12f379cbd99"><div class="ttname"><a href="CameraSystemConfigTest_8cpp.xhtml#adf7c3ac791f996a56160a12f379cbd99">Options</a></div><div class="ttdeci">Options</div><div class="ttdef"><b>Definition:</b> <a href="CameraSystemConfigTest_8cpp_source.xhtml#l00019">CameraSystemConfigTest.cpp:19</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 27 2015 19:36:56 for Voxel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
